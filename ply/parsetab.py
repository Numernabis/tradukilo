
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = 'BD2B22396E404B09A397A8B9869EF3CB'
    
_lr_action_items = {'ZEROS':([0,4,6,9,10,11,15,19,22,23,25,31,33,35,37,43,44,45,46,47,48,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,72,74,75,77,87,112,117,120,123,124,125,126,127,130,131,135,137,138,139,140,141,142,143,144,145,147,148,149,150,151,152,],[1,1,1,-12,-6,1,-13,1,1,1,-11,-14,-4,-5,-3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-75,-76,1,-68,1,1,-16,-64,-19,-62,-18,-20,1,-17,-57,-15,1,-66,1,-63,1,1,-65,-67,-61,-58,1,-59,1,-60,]),'DOTSUB':([3,12,18,24,27,30,38,39,42,49,50,55,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,107,108,110,111,116,146,],[-24,-23,-22,54,-21,-25,-24,54,54,54,-27,-28,-26,54,-25,54,54,54,54,54,54,-32,-38,-40,54,-37,-39,-30,54,-31,54,54,-33,54,-29,-25,-34,54,-36,-35,-25,]),'-':([0,3,4,6,9,10,11,12,15,18,19,22,23,24,25,27,30,31,33,35,37,38,39,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,72,74,75,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,107,108,110,111,112,116,117,120,123,124,125,126,127,130,131,135,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,],[22,-24,22,22,-12,-6,22,-23,-13,-22,22,22,22,62,-11,-21,-25,-14,-4,-5,-3,-24,62,62,22,22,22,22,22,22,62,-27,22,22,22,22,-28,22,22,22,22,22,22,22,22,22,22,22,22,22,-75,-76,22,-26,62,-25,62,62,62,62,62,-68,62,-32,-38,-40,62,-37,-39,-30,62,-31,62,62,-33,62,-29,-25,-34,62,-36,22,-35,22,-16,-64,-19,-62,-18,-20,22,-17,-57,-15,22,-66,22,-63,22,22,-65,-67,-25,-61,-58,22,-59,22,-60,]),'LT':([3,12,18,24,27,30,38,39,42,49,50,55,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,107,108,110,111,116,146,],[-24,-23,-22,57,-21,-25,-24,57,57,57,-27,-28,-26,57,-25,57,57,57,57,57,None,-32,-38,-40,None,-37,-39,-30,None,-31,None,None,-33,None,-29,-25,-34,57,-36,-35,-25,]),'ID':([0,4,6,9,10,11,15,19,22,23,25,28,31,33,35,36,37,43,44,45,46,47,48,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,72,74,75,77,87,105,109,112,117,120,123,124,125,126,127,130,131,134,135,137,138,139,140,141,142,143,144,145,147,148,149,150,151,152,],[3,3,38,-12,-6,38,-13,38,38,3,-11,70,-14,-4,-5,74,-3,38,38,38,38,38,38,3,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-75,-76,38,-68,74,74,3,3,-16,-64,-19,-62,-18,-20,3,-17,74,-57,-15,3,-66,38,-63,3,3,-65,-67,-61,-58,3,-59,3,-60,]),'NEQ':([3,12,18,24,27,30,38,39,42,49,50,55,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,107,108,110,111,116,146,],[-24,-23,-22,61,-21,-25,-24,61,61,61,-27,-28,-26,61,-25,61,61,61,61,61,None,-32,-38,-40,None,-37,-39,-30,None,-31,None,None,-33,None,-29,-25,-34,61,-36,-35,-25,]),'PRINT':([0,4,9,10,15,23,25,31,33,35,37,51,74,75,87,112,117,120,123,124,125,126,127,130,131,135,137,138,139,141,142,143,144,145,147,148,149,150,151,152,],[6,6,-12,-6,-13,6,-11,-14,-4,-5,-3,6,-75,-76,-68,6,6,-16,-64,-19,-62,-18,-20,6,-17,-57,-15,6,-66,-63,6,6,-65,-67,-61,-58,6,-59,6,-60,]),'/':([3,12,18,24,27,30,38,39,42,49,50,55,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,107,108,110,111,116,146,],[-24,-23,-22,53,-21,-25,-24,53,53,53,-27,-28,-26,53,-25,53,53,53,53,53,53,-32,53,-40,53,53,-39,53,53,53,53,53,-33,53,-29,-25,-34,53,-36,-35,-25,]),'=':([3,5,14,16,70,136,],[-73,-71,44,-72,105,-74,]),'DOTADD':([3,12,18,24,27,30,38,39,42,49,50,55,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,107,108,110,111,116,146,],[-24,-23,-22,58,-21,-25,-24,58,58,58,-27,-28,-26,58,-25,58,58,58,58,58,58,-32,-38,-40,58,-37,-39,-30,58,-31,58,58,-33,58,-29,-25,-34,58,-36,-35,-25,]),'EQ':([3,12,18,24,27,30,38,39,42,49,50,55,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,107,108,110,111,116,146,],[-24,-23,-22,52,-21,-25,-24,52,52,52,-27,-28,-26,52,-25,52,52,52,52,52,None,-32,-38,-40,None,-37,-39,-30,None,-31,None,None,-33,None,-29,-25,-34,52,-36,-35,-25,]),'EYE':([0,4,6,9,10,11,15,19,22,23,25,31,33,35,37,43,44,45,46,47,48,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,72,74,75,77,87,112,117,120,123,124,125,126,127,130,131,135,137,138,139,140,141,142,143,144,145,147,148,149,150,151,152,],[8,8,8,-12,-6,8,-13,8,8,8,-11,-14,-4,-5,-3,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,-75,-76,8,-68,8,8,-16,-64,-19,-62,-18,-20,8,-17,-57,-15,8,-66,8,-63,8,8,-65,-67,-61,-58,8,-59,8,-60,]),'GT':([3,12,18,24,27,30,38,39,42,49,50,55,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,107,108,110,111,116,146,],[-24,-23,-22,64,-21,-25,-24,64,64,64,-27,-28,-26,64,-25,64,64,64,64,64,None,-32,-38,-40,None,-37,-39,-30,None,-31,None,None,-33,None,-29,-25,-34,64,-36,-35,-25,]),'(':([0,1,4,6,8,9,10,11,13,15,19,22,23,25,29,31,32,33,35,37,43,44,45,46,47,48,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,72,74,75,77,87,112,117,120,123,124,125,126,127,130,131,132,135,137,138,139,140,141,142,143,144,145,147,148,149,150,151,152,],[11,34,11,11,41,-12,-6,11,43,-13,11,11,11,-11,71,-14,72,-4,-5,-3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-75,-76,11,-68,11,11,-16,-64,-19,-62,-18,-20,11,-17,140,-57,-15,11,-66,11,-63,11,11,-65,-67,-61,-58,11,-59,11,-60,]),'STRING':([0,4,6,9,10,11,15,19,22,23,25,31,33,35,37,43,44,45,46,47,48,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,72,74,75,77,87,112,117,120,123,124,125,126,127,130,131,135,137,138,139,140,141,142,143,144,145,147,148,149,150,151,152,],[12,12,12,-12,-6,12,-13,12,12,12,-11,-14,-4,-5,-3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,-75,-76,12,-68,12,12,-16,-64,-19,-62,-18,-20,12,-17,-57,-15,12,-66,12,-63,12,12,-65,-67,-61,-58,12,-59,12,-60,]),'WHILE':([0,4,9,10,15,23,25,31,33,35,37,51,74,75,87,112,117,120,123,124,125,126,127,130,131,135,137,138,139,141,142,143,144,145,147,148,149,150,151,152,],[13,13,-12,-6,-13,13,-11,-14,-4,-5,-3,13,-75,-76,-68,13,13,-16,-64,-19,-62,-18,-20,13,-17,-57,-15,13,-66,-63,13,13,-65,-67,-61,-58,13,-59,13,-60,]),':':([74,75,115,],[-75,-76,134,]),'+':([3,12,18,24,27,30,38,39,42,49,50,55,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,107,108,110,111,116,146,],[-24,-23,-22,60,-21,-25,-24,60,60,60,-27,-28,-26,60,-25,60,60,60,60,60,60,-32,-38,-40,60,-37,-39,-30,60,-31,60,60,-33,60,-29,-25,-34,60,-36,-35,-25,]),'}':([9,10,15,25,31,33,35,37,51,87,120,123,124,125,126,127,131,135,137,138,139,141,144,145,147,148,150,152,],[-12,-6,-13,-11,-14,-4,-5,-3,87,-68,-16,-64,-19,-62,-18,-20,-17,-57,-15,145,-66,-63,-65,-67,-61,-58,-59,-60,]),'*':([3,12,18,24,27,30,38,39,42,49,50,55,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,107,108,110,111,116,146,],[-24,-23,-22,65,-21,-25,-24,65,65,65,-27,-28,-26,65,-25,65,65,65,65,65,65,-32,65,-40,65,65,-39,65,65,65,65,65,-33,65,-29,-25,-34,65,-36,-35,-25,]),'LTE':([3,12,18,24,27,30,38,39,42,49,50,55,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,107,108,110,111,116,146,],[-24,-23,-22,66,-21,-25,-24,66,66,66,-27,-28,-26,66,-25,66,66,66,66,66,None,-32,-38,-40,None,-37,-39,-30,None,-31,None,None,-33,None,-29,-25,-34,66,-36,-35,-25,]),'ADDASSIGN':([3,5,14,16,136,],[-73,-71,45,-72,-74,]),'FLOATNUM':([0,4,6,9,10,11,15,19,22,23,25,31,33,35,37,43,44,45,46,47,48,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,72,74,75,77,87,112,117,120,123,124,125,126,127,130,131,135,137,138,139,140,141,142,143,144,145,147,148,149,150,151,152,],[18,18,18,-12,-6,18,-13,18,18,18,-11,-14,-4,-5,-3,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-75,-76,18,-68,18,18,-16,-64,-19,-62,-18,-20,18,-17,-57,-15,18,-66,18,-63,18,18,-65,-67,-61,-58,18,-59,18,-60,]),'RETURN':([0,4,9,10,15,23,25,31,33,35,37,51,74,75,87,112,117,120,123,124,125,126,127,130,131,135,137,138,139,141,142,143,144,145,147,148,149,150,151,152,],[19,19,-12,-6,-13,19,-11,-14,-4,-5,-3,19,-75,-76,-68,19,19,-16,-64,-19,-62,-18,-20,19,-17,-57,-15,19,-66,-63,19,19,-65,-67,-61,-58,19,-59,19,-60,]),"'":([3,12,18,24,27,30,38,39,42,49,50,55,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,107,108,110,111,116,146,],[-24,-23,-22,55,-21,-25,-24,55,55,55,55,-28,-26,55,-25,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,-29,-25,-34,55,-36,-35,-25,]),'BREAK':([74,75,112,120,123,124,125,126,127,130,131,137,138,139,141,142,144,145,147,149,150,151,152,],[-75,-76,128,-16,-64,-19,-62,-18,-20,128,-17,-15,128,-66,-63,128,-65,-67,-61,128,-59,128,-60,]),'DOTDIV':([3,12,18,24,27,30,38,39,42,49,50,55,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,107,108,110,111,116,146,],[-24,-23,-22,59,-21,-25,-24,59,59,59,-27,-28,-26,59,-25,59,59,59,59,59,59,-32,59,-40,59,59,-39,59,59,59,59,59,-33,59,-29,-25,-34,59,-36,-35,-25,]),')':([12,18,27,30,38,42,50,55,73,78,79,81,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,106,107,108,111,116,146,],[-23,-22,-21,-25,-24,79,-27,-28,108,111,-26,112,-44,-32,-38,-40,-46,-37,-39,-30,-43,-31,-41,-45,-33,-42,-29,116,117,-34,-36,-35,149,]),'DOTMUL':([3,12,18,24,27,30,38,39,42,49,50,55,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,107,108,110,111,116,146,],[-24,-23,-22,56,-21,-25,-24,56,56,56,-27,-28,-26,56,-25,56,56,56,56,56,56,-32,56,-40,56,56,-39,56,56,56,56,56,-33,56,-29,-25,-34,56,-36,-35,-25,]),'{':([0,4,9,10,15,23,25,31,33,35,37,51,74,75,87,112,117,120,123,124,125,126,127,130,131,135,137,138,139,141,142,143,144,145,147,148,149,150,151,152,],[23,23,-12,-6,-13,23,-11,-14,-4,-5,-3,23,-75,-76,-68,130,23,-16,-64,-19,-62,-18,-20,130,-17,-57,-15,130,-66,-63,130,23,-65,-67,-61,-58,130,-59,130,-60,]),'MULASSIGN':([3,5,14,16,136,],[-73,-71,48,-72,-74,]),'GTE':([3,12,18,24,27,30,38,39,42,49,50,55,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,107,108,110,111,116,146,],[-24,-23,-22,63,-21,-25,-24,63,63,63,-27,-28,-26,63,-25,63,63,63,63,63,None,-32,-38,-40,None,-37,-39,-30,None,-31,None,None,-33,None,-29,-25,-34,63,-36,-35,-25,]),',':([12,18,27,30,38,39,40,50,55,68,69,74,75,76,79,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,108,110,111,113,114,116,],[-23,-22,-21,-25,-24,-56,77,-27,-28,-53,103,-75,-76,109,-26,-44,-32,-38,-40,-46,-37,-39,-30,-43,-31,-41,-45,-33,-42,77,-29,-34,-55,-36,-54,-52,-35,]),'[':([0,3,4,6,9,10,11,15,19,22,23,25,26,31,33,35,37,43,44,45,46,47,48,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,72,74,75,77,87,103,112,117,120,123,124,125,126,127,130,131,135,137,138,139,140,141,142,143,144,145,147,148,149,150,151,152,],[26,36,26,26,-12,-6,26,-13,26,26,26,-11,67,-14,-4,-5,-3,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-75,-76,26,-68,67,26,26,-16,-64,-19,-62,-18,-20,26,-17,-57,-15,26,-66,26,-63,26,26,-65,-67,-61,-58,26,-59,26,-60,]),'INTNUM':([0,4,6,9,10,11,15,19,22,23,25,31,33,34,35,36,37,41,43,44,45,46,47,48,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,71,72,74,75,77,87,105,109,112,117,120,123,124,125,126,127,130,131,134,135,137,138,139,140,141,142,143,144,145,147,148,149,150,151,152,],[27,27,27,-12,-6,27,-13,27,27,27,-11,-14,-4,73,-5,75,-3,78,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,106,27,-75,-76,27,-68,75,75,27,27,-16,-64,-19,-62,-18,-20,27,-17,75,-57,-15,27,-66,27,-63,27,27,-65,-67,-61,-58,27,-59,27,-60,]),'FOR':([0,4,9,10,15,23,25,31,33,35,37,51,74,75,87,112,117,120,123,124,125,126,127,130,131,135,137,138,139,141,142,143,144,145,147,148,149,150,151,152,],[28,28,-12,-6,-13,28,-11,-14,-4,-5,-3,28,-75,-76,-68,28,28,-16,-64,-19,-62,-18,-20,28,-17,-57,-15,28,-66,-63,28,28,-65,-67,-61,-58,28,-59,28,-60,]),'ONES':([0,4,6,9,10,11,15,19,22,23,25,31,33,35,37,43,44,45,46,47,48,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,72,74,75,77,87,112,117,120,123,124,125,126,127,130,131,135,137,138,139,140,141,142,143,144,145,147,148,149,150,151,152,],[29,29,29,-12,-6,29,-13,29,29,29,-11,-14,-4,-5,-3,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-75,-76,29,-68,29,29,-16,-64,-19,-62,-18,-20,29,-17,-57,-15,29,-66,29,-63,29,29,-65,-67,-61,-58,29,-59,29,-60,]),'CONTINUE':([74,75,112,120,123,124,125,126,127,130,131,137,138,139,141,142,144,145,147,149,150,151,152,],[-75,-76,129,-16,-64,-19,-62,-18,-20,129,-17,-15,129,-66,-63,129,-65,-67,-61,129,-59,129,-60,]),'IF':([0,4,9,10,15,23,25,31,33,35,37,51,74,75,87,112,117,120,123,124,125,126,127,130,131,135,137,138,139,141,142,143,144,145,147,148,149,150,151,152,],[32,32,-12,-6,-13,32,-11,-14,-4,-5,-3,32,-75,-76,-68,132,32,-16,-64,-19,-62,-18,-20,132,-17,-57,-15,132,-66,-63,132,32,-65,-67,-61,-58,132,-59,132,-60,]),'SUBASSIGN':([3,5,14,16,136,],[-73,-71,47,-72,-74,]),'DIVASSIGN':([3,5,14,16,136,],[-73,-71,46,-72,-74,]),'$end':([0,4,9,10,15,20,25,31,33,35,37,87,120,123,124,125,126,127,131,135,137,141,145,147,148,150,152,],[-2,-1,-12,-6,-13,0,-11,-14,-4,-5,-3,-68,-16,-64,-19,-62,-18,-20,-17,-57,-15,-63,-67,-61,-58,-59,-60,]),';':([2,3,7,12,17,18,21,24,27,30,38,39,40,49,50,55,79,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,108,110,111,116,119,121,122,128,129,133,],[35,-24,-10,-23,-7,-22,-9,-8,-21,-25,-24,-56,-69,-70,-27,-28,-26,-47,-48,-51,-49,-50,-44,-32,-38,-40,-46,-37,-39,-30,-43,-31,-41,-45,-33,-42,-29,-34,-55,-36,-35,137,-77,-78,-79,-80,141,]),'ELSE':([9,10,15,25,31,35,87,120,123,124,125,126,127,131,135,137,141,145,147,148,150,152,],[-12,-6,-13,-11,-14,-5,-68,-16,-64,-19,-62,-18,-20,-17,143,-15,-63,-67,-61,-58,151,-60,]),']':([12,18,27,30,38,39,50,55,68,69,74,75,79,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,108,110,111,113,114,116,118,],[-23,-22,-21,-25,-24,-56,-27,-28,-53,104,-75,-76,-26,-44,-32,-38,-40,-46,-37,-39,-30,-43,-31,-41,-45,-33,-42,113,-29,-34,-55,-36,-54,-52,-35,136,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'assign':([0,4,23,51,112,117,130,138,142,143,149,151,],[17,17,17,17,17,17,17,17,17,17,17,17,]),'inside_loop_rec':([130,],[138,]),'program':([0,],[20,]),'if_inside_loop':([112,130,138,142,149,151,],[127,127,127,127,127,127,]),'instr_coloff_inside_loop':([112,130,138,142,149,151,],[120,120,120,120,120,120,]),'print':([0,4,23,51,112,117,130,138,142,143,149,151,],[21,21,21,21,21,21,21,21,21,21,21,21,]),'break':([112,130,138,142,149,151,],[121,121,121,121,121,121,]),'rows':([26,],[69,]),'instr_colon':([0,4,23,51,112,117,130,138,142,143,149,151,],[2,2,2,2,119,2,119,119,119,2,119,119,]),'return':([0,4,23,51,112,117,130,138,142,143,149,151,],[7,7,7,7,7,7,7,7,7,7,7,7,]),'continue':([112,130,138,142,149,151,],[122,122,122,122,122,122,]),'id_2':([0,4,23,51,112,117,130,138,142,143,149,151,],[5,5,5,5,5,5,5,5,5,5,5,5,]),'block_loop':([112,130,138,142,149,151,],[124,124,124,124,124,124,]),'for':([0,4,23,51,112,117,130,138,142,143,149,151,],[25,25,25,25,131,25,131,131,131,25,131,131,]),'inside_loop':([112,130,138,142,149,151,],[125,139,144,147,150,152,]),'expr':([0,4,6,11,19,22,23,43,44,45,46,47,48,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,72,77,112,117,130,138,140,142,143,149,151,],[24,24,39,42,49,50,24,80,82,83,84,85,86,24,88,89,90,91,92,93,94,95,96,97,98,99,100,101,39,80,110,24,24,24,24,80,24,24,24,24,]),'while':([0,4,23,51,112,117,130,138,142,143,149,151,],[9,9,9,9,126,9,126,126,126,9,126,126,]),'instr_coloff':([0,4,23,51,117,143,],[10,10,10,10,10,10,]),'expr_rel':([0,4,6,11,19,22,23,43,44,45,46,47,48,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,72,77,112,117,130,138,140,142,143,149,151,],[30,30,30,30,30,30,30,81,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,107,30,30,30,30,30,146,30,30,30,30,]),'row':([26,103,],[68,114,]),'instr_inside_loop':([112,130,138,142,149,151,],[123,123,123,123,123,123,]),'index':([36,105,109,134,],[76,115,118,142,]),'if':([0,4,23,51,117,143,],[31,31,31,31,31,31,]),'instr_rec':([0,23,],[4,51,]),'ref':([0,4,23,51,112,117,130,138,142,143,149,151,],[16,16,16,16,16,16,16,16,16,16,16,16,]),'id':([0,4,23,51,112,117,130,138,142,143,149,151,],[14,14,14,14,14,14,14,14,14,14,14,14,]),'block':([0,4,23,51,117,143,],[15,15,15,15,15,15,]),'instr':([0,4,23,51,117,143,],[33,37,33,37,135,148,]),'cells':([6,67,],[40,102,]),'break_continue':([112,130,138,142,149,151,],[133,133,133,133,133,133,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> instr_rec','program',1,'p_program','Mparser.py',26),
  ('program -> <empty>','program',0,'p_program','Mparser.py',27),
  ('instr_rec -> instr_rec instr','instr_rec',2,'p_instr_rec','Mparser.py',31),
  ('instr_rec -> instr','instr_rec',1,'p_instr_rec','Mparser.py',32),
  ('instr -> instr_colon ;','instr',2,'p_instr','Mparser.py',39),
  ('instr -> instr_coloff','instr',1,'p_instr','Mparser.py',40),
  ('instr_colon -> assign','instr_colon',1,'p_instr_colon','Mparser.py',44),
  ('instr_colon -> expr','instr_colon',1,'p_instr_colon','Mparser.py',45),
  ('instr_colon -> print','instr_colon',1,'p_instr_colon','Mparser.py',46),
  ('instr_colon -> return','instr_colon',1,'p_instr_colon','Mparser.py',47),
  ('instr_coloff -> for','instr_coloff',1,'p_instr_coloff','Mparser.py',51),
  ('instr_coloff -> while','instr_coloff',1,'p_instr_coloff','Mparser.py',52),
  ('instr_coloff -> block','instr_coloff',1,'p_instr_coloff','Mparser.py',53),
  ('instr_coloff -> if','instr_coloff',1,'p_instr_coloff','Mparser.py',54),
  ('instr_inside_loop -> instr_colon ;','instr_inside_loop',2,'p_instr_inside_loop','Mparser.py',58),
  ('instr_inside_loop -> instr_coloff_inside_loop','instr_inside_loop',1,'p_instr_inside_loop','Mparser.py',59),
  ('instr_coloff_inside_loop -> for','instr_coloff_inside_loop',1,'p_instr_coloff_inside_loop','Mparser.py',63),
  ('instr_coloff_inside_loop -> while','instr_coloff_inside_loop',1,'p_instr_coloff_inside_loop','Mparser.py',64),
  ('instr_coloff_inside_loop -> block_loop','instr_coloff_inside_loop',1,'p_instr_coloff_inside_loop','Mparser.py',65),
  ('instr_coloff_inside_loop -> if_inside_loop','instr_coloff_inside_loop',1,'p_instr_coloff_inside_loop','Mparser.py',66),
  ('expr -> INTNUM','expr',1,'p_expr_1','Mparser.py',72),
  ('expr -> FLOATNUM','expr',1,'p_expr_2','Mparser.py',76),
  ('expr -> STRING','expr',1,'p_expr_3','Mparser.py',80),
  ('expr -> ID','expr',1,'p_expr_4','Mparser.py',84),
  ('expr -> expr_rel','expr',1,'p_expr_5','Mparser.py',88),
  ('expr -> ( expr )','expr',3,'p_expr_6','Mparser.py',92),
  ('expr -> - expr','expr',2,'p_expr_7','Mparser.py',96),
  ("expr -> expr '",'expr',2,'p_expr_8','Mparser.py',100),
  ('expr -> [ rows ]','expr',3,'p_expr_9','Mparser.py',104),
  ('expr -> expr + expr','expr',3,'p_expr_bin','Mparser.py',108),
  ('expr -> expr - expr','expr',3,'p_expr_bin','Mparser.py',109),
  ('expr -> expr / expr','expr',3,'p_expr_bin','Mparser.py',110),
  ('expr -> expr * expr','expr',3,'p_expr_bin','Mparser.py',111),
  ('expr -> ZEROS ( INTNUM )','expr',4,'p_expr_matrix','Mparser.py',115),
  ('expr -> ONES ( INTNUM )','expr',4,'p_expr_matrix','Mparser.py',116),
  ('expr -> EYE ( INTNUM )','expr',4,'p_expr_matrix','Mparser.py',117),
  ('expr -> expr DOTADD expr','expr',3,'p_expr_dot','Mparser.py',121),
  ('expr -> expr DOTSUB expr','expr',3,'p_expr_dot','Mparser.py',122),
  ('expr -> expr DOTDIV expr','expr',3,'p_expr_dot','Mparser.py',123),
  ('expr -> expr DOTMUL expr','expr',3,'p_expr_dot','Mparser.py',124),
  ('expr_rel -> expr GTE expr','expr_rel',3,'p_expr_rel','Mparser.py',128),
  ('expr_rel -> expr LTE expr','expr_rel',3,'p_expr_rel','Mparser.py',129),
  ('expr_rel -> expr NEQ expr','expr_rel',3,'p_expr_rel','Mparser.py',130),
  ('expr_rel -> expr EQ expr','expr_rel',3,'p_expr_rel','Mparser.py',131),
  ('expr_rel -> expr GT expr','expr_rel',3,'p_expr_rel','Mparser.py',132),
  ('expr_rel -> expr LT expr','expr_rel',3,'p_expr_rel','Mparser.py',133),
  ('assign -> id = expr','assign',3,'p_assign','Mparser.py',137),
  ('assign -> id ADDASSIGN expr','assign',3,'p_assign','Mparser.py',138),
  ('assign -> id SUBASSIGN expr','assign',3,'p_assign','Mparser.py',139),
  ('assign -> id MULASSIGN expr','assign',3,'p_assign','Mparser.py',140),
  ('assign -> id DIVASSIGN expr','assign',3,'p_assign','Mparser.py',141),
  ('rows -> rows , row','rows',3,'p_rows','Mparser.py',146),
  ('rows -> row','rows',1,'p_rows','Mparser.py',147),
  ('row -> [ cells ]','row',3,'p_row','Mparser.py',154),
  ('cells -> cells , expr','cells',3,'p_cells','Mparser.py',158),
  ('cells -> expr','cells',1,'p_cells','Mparser.py',159),
  ('if -> IF ( expr_rel ) instr','if',5,'p_if','Mparser.py',168),
  ('if -> IF ( expr_rel ) instr ELSE instr','if',7,'p_if','Mparser.py',169),
  ('if_inside_loop -> IF ( expr_rel ) inside_loop','if_inside_loop',5,'p_if_inside_loop','Mparser.py',176),
  ('if_inside_loop -> IF ( expr_rel ) inside_loop ELSE inside_loop','if_inside_loop',7,'p_if_inside_loop','Mparser.py',177),
  ('for -> FOR ID = index : index inside_loop','for',7,'p_for','Mparser.py',184),
  ('while -> WHILE ( expr_rel ) inside_loop','while',5,'p_while','Mparser.py',188),
  ('inside_loop -> break_continue ;','inside_loop',2,'p_inside_loop','Mparser.py',192),
  ('inside_loop -> instr_inside_loop','inside_loop',1,'p_inside_loop','Mparser.py',193),
  ('inside_loop_rec -> inside_loop_rec inside_loop','inside_loop_rec',2,'p_inside_loop_rec','Mparser.py',197),
  ('inside_loop_rec -> inside_loop','inside_loop_rec',1,'p_inside_loop_rec','Mparser.py',198),
  ('block_loop -> { inside_loop_rec }','block_loop',3,'p_block_loop','Mparser.py',205),
  ('block -> { instr_rec }','block',3,'p_block','Mparser.py',209),
  ('print -> PRINT cells','print',2,'p_print','Mparser.py',215),
  ('return -> RETURN expr','return',2,'p_return','Mparser.py',219),
  ('id -> id_2','id',1,'p_id','Mparser.py',223),
  ('id -> ref','id',1,'p_id','Mparser.py',224),
  ('id_2 -> ID','id_2',1,'p_id_2','Mparser.py',228),
  ('ref -> ID [ index , index ]','ref',6,'p_ref','Mparser.py',232),
  ('index -> ID','index',1,'p_index','Mparser.py',236),
  ('index -> INTNUM','index',1,'p_index','Mparser.py',237),
  ('break_continue -> break','break_continue',1,'p_break_continue','Mparser.py',244),
  ('break_continue -> continue','break_continue',1,'p_break_continue','Mparser.py',245),
  ('break -> BREAK','break',1,'p_break','Mparser.py',249),
  ('continue -> CONTINUE','continue',1,'p_continue','Mparser.py',253),
]
