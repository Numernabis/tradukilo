
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = '447978F3B6877BDD2BCCE62D4A897642'
    
_lr_action_items = {'}':([2,3,16,17,20,25,32,38,43,68,118,122,123,124,126,127,130,131,135,136,137,138,140,141,142,143,146,148,],[-4,-6,-13,-14,-11,-12,-5,68,-3,-61,-50,-16,-19,-54,-17,-18,-20,-56,-15,-59,142,-55,-53,-49,-57,-58,-52,-51,]),'$end':([0,1,2,3,15,16,17,20,25,32,43,68,118,122,123,124,126,127,130,131,135,138,140,141,142,146,148,],[-2,0,-4,-6,-1,-13,-14,-11,-12,-5,-3,-61,-50,-16,-19,-54,-17,-18,-20,-56,-15,-55,-53,-49,-57,-52,-51,]),'+':([9,18,21,30,31,36,37,44,45,54,59,67,75,77,78,79,80,81,83,86,87,88,89,90,91,92,93,97,99,100,101,112,113,114,115,116,117,],[-28,-27,-26,-25,60,-28,-36,60,60,60,-38,-39,-37,60,60,60,60,60,60,-35,-33,-24,-21,-22,-23,-34,-32,-30,-31,60,-29,60,60,60,60,60,60,]),"'":([9,18,21,30,31,36,37,44,45,54,59,67,75,77,78,79,80,81,83,86,87,88,89,90,91,92,93,97,99,100,101,112,113,114,115,116,117,],[-28,-27,-26,-25,59,-28,-36,59,59,59,-38,-39,-37,59,59,59,59,59,59,-35,-33,-24,-21,-22,-23,-34,-32,-30,-31,59,-29,59,59,59,59,59,59,]),'[':([0,2,3,5,7,8,9,15,16,17,19,20,22,25,28,32,33,38,43,47,48,49,50,51,53,55,56,57,58,60,61,62,63,64,66,68,70,71,76,102,103,104,105,106,107,108,109,118,120,122,123,124,126,127,130,131,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,],[5,-4,-6,33,5,5,39,5,-13,-14,5,-11,5,-12,5,-5,5,5,-3,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,33,-61,-73,-74,5,5,5,5,5,5,5,5,5,-50,5,-16,-19,-54,-17,-18,-20,-56,5,5,-15,-59,5,-55,5,-53,-49,-57,-58,5,-52,5,-51,]),'LT':([18,21,30,36,37,59,67,75,83,86,87,88,89,90,91,92,93,97,99,101,],[-27,-26,-25,-28,-36,-38,-39,-37,104,-35,-33,-24,-21,-22,-23,-34,-32,-30,-31,-29,]),']':([18,21,30,34,35,36,37,45,59,65,67,70,71,75,86,87,88,89,90,91,92,93,94,95,97,99,100,101,110,],[-27,-26,-25,67,-47,-28,-36,-68,-38,94,-39,-73,-74,-37,-35,-33,-24,-21,-22,-23,-34,-32,-48,-46,-30,-31,-67,-29,132,]),'{':([0,2,3,8,15,16,17,20,25,32,38,43,68,70,71,108,109,118,120,122,123,124,126,127,130,131,133,134,135,136,137,138,140,141,142,143,145,146,147,148,],[8,-4,-6,8,8,-13,-14,-11,-12,-5,8,-3,-61,-73,-74,8,120,-50,120,-16,-19,-54,-17,-18,-20,-56,120,8,-15,-59,120,-55,-53,-49,-57,-58,120,-52,120,-51,]),'FLOATNUM':([0,2,3,7,8,15,16,17,19,20,22,25,28,32,33,38,43,47,48,49,50,51,53,55,56,57,58,60,61,62,63,64,68,70,71,76,102,103,104,105,106,107,108,109,118,120,122,123,124,126,127,130,131,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,],[21,-4,-6,21,21,21,-13,-14,21,-11,21,-12,21,-5,21,21,-3,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-61,-73,-74,21,21,21,21,21,21,21,21,21,-50,21,-16,-19,-54,-17,-18,-20,-56,21,21,-15,-59,21,-55,21,-53,-49,-57,-58,21,-52,21,-51,]),'DOTSUB':([9,18,21,30,31,36,37,44,45,54,59,67,75,77,78,79,80,81,83,86,87,88,89,90,91,92,93,97,99,100,101,112,113,114,115,116,117,],[-28,-27,-26,-25,57,-28,-36,57,57,57,-38,-39,-37,57,57,57,57,57,57,-35,-33,-24,-21,-22,-23,-34,-32,-30,-31,57,-29,57,57,57,57,57,57,]),'GT':([18,21,30,36,37,59,67,75,83,86,87,88,89,90,91,92,93,97,99,101,],[-27,-26,-25,-28,-36,-38,-39,-37,103,-35,-33,-24,-21,-22,-23,-34,-32,-30,-31,-29,]),';':([4,6,9,12,18,21,26,30,31,36,37,45,46,54,59,67,75,77,78,79,80,81,86,87,88,89,90,91,92,93,97,99,100,101,119,121,125,129,],[32,-9,-28,-7,-27,-26,-10,-25,-8,-28,-36,-68,-60,-69,-38,-39,-37,-64,-66,-65,-62,-63,-35,-33,-24,-21,-22,-23,-34,-32,-30,-31,-67,-29,135,-75,138,-76,]),'ONES':([0,2,3,7,8,15,16,17,19,20,22,25,28,32,33,38,43,47,48,49,50,51,53,55,56,57,58,60,61,62,63,64,68,70,71,76,102,103,104,105,106,107,108,109,118,120,122,123,124,126,127,130,131,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,],[10,-4,-6,10,10,10,-13,-14,10,-11,10,-12,10,-5,10,10,-3,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,-61,-73,-74,10,10,10,10,10,10,10,10,10,-50,10,-16,-19,-54,-17,-18,-20,-56,10,10,-15,-59,10,-55,10,-53,-49,-57,-58,10,-52,10,-51,]),'MULASSIGN':([9,11,23,132,],[-70,-71,49,-72,]),')':([18,21,30,36,37,44,59,67,72,74,75,82,84,85,86,87,88,89,90,91,92,93,97,99,101,112,113,114,115,116,117,144,],[-27,-26,-25,-28,-36,75,-38,-39,97,99,-37,101,108,109,-35,-33,-24,-21,-22,-23,-34,-32,-30,-31,-29,-42,-44,-45,-43,-40,-41,145,]),'WHILE':([0,2,3,8,15,16,17,20,25,32,38,43,68,70,71,108,109,118,120,122,123,124,126,127,130,131,133,134,135,136,137,138,140,141,142,143,145,146,147,148,],[29,-4,-6,29,29,-13,-14,-11,-12,-5,29,-3,-61,-73,-74,29,29,-50,29,-16,-19,-54,-17,-18,-20,-56,29,29,-15,-59,29,-55,-53,-49,-57,-58,29,-52,29,-51,]),',':([18,21,30,34,35,36,37,45,46,59,65,67,69,70,71,75,86,87,88,89,90,91,92,93,94,95,97,99,100,101,],[-27,-26,-25,66,-47,-28,-36,-68,76,-38,76,-39,96,-73,-74,-37,-35,-33,-24,-21,-22,-23,-34,-32,-48,-46,-30,-31,-67,-29,]),'BREAK':([70,71,109,120,122,123,124,126,127,130,131,133,135,136,137,138,140,142,143,145,146,147,148,],[-73,-74,121,121,-16,-19,-54,-17,-18,-20,-56,121,-15,-59,121,-55,-53,-57,-58,121,-52,121,-51,]),'-':([0,2,3,7,8,9,15,16,17,18,19,20,21,22,25,28,30,31,32,33,36,37,38,43,44,45,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,67,68,70,71,75,76,77,78,79,80,81,83,86,87,88,89,90,91,92,93,97,99,100,101,102,103,104,105,106,107,108,109,112,113,114,115,116,117,118,120,122,123,124,126,127,130,131,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,],[7,-4,-6,7,7,-28,7,-13,-14,-27,7,-11,-26,7,-12,7,-25,61,-5,7,-28,-36,7,-3,61,61,7,7,7,7,7,7,61,7,7,7,7,-38,7,7,7,7,7,-39,-61,-73,-74,-37,7,61,61,61,61,61,61,-35,-33,-24,-21,-22,-23,-34,-32,-30,-31,61,-29,7,7,7,7,7,7,7,7,61,61,61,61,61,61,-50,7,-16,-19,-54,-17,-18,-20,-56,7,7,-15,-59,7,-55,7,-53,-49,-57,-58,7,-52,7,-51,]),'ELSE':([3,16,17,20,25,32,68,118,122,123,124,126,127,130,131,135,138,140,141,142,146,148,],[-6,-13,-14,-11,-12,-5,-61,None,-16,-19,-54,-17,-18,-20,-56,-15,-55,-53,-49,-57,None,-51,]),'ID':([0,2,3,7,8,13,15,16,17,19,20,22,25,28,32,33,38,39,43,47,48,49,50,51,53,55,56,57,58,60,61,62,63,64,68,70,71,73,76,96,102,103,104,105,106,107,108,109,111,118,120,122,123,124,126,127,130,131,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,],[9,-4,-6,36,9,41,9,-13,-14,36,-11,36,-12,36,-5,36,9,70,-3,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-61,-73,-74,70,36,70,36,36,36,36,36,36,9,9,70,-50,9,-16,-19,-54,-17,-18,-20,-56,9,9,-15,-59,9,-55,36,-53,-49,-57,-58,9,-52,9,-51,]),'NEQ':([18,21,30,36,37,59,67,75,83,86,87,88,89,90,91,92,93,97,99,101,],[-27,-26,-25,-28,-36,-38,-39,-37,102,-35,-33,-24,-21,-22,-23,-34,-32,-30,-31,-29,]),'/':([9,18,21,30,31,36,37,44,45,54,59,67,75,77,78,79,80,81,83,86,87,88,89,90,91,92,93,97,99,100,101,112,113,114,115,116,117,],[-28,-27,-26,-25,62,-28,62,62,62,62,-38,-39,-37,62,62,62,62,62,62,-35,62,-24,62,62,-23,-34,62,-30,-31,62,-29,62,62,62,62,62,62,]),'DOTDIV':([9,18,21,30,31,36,37,44,45,54,59,67,75,77,78,79,80,81,83,86,87,88,89,90,91,92,93,97,99,100,101,112,113,114,115,116,117,],[-28,-27,-26,-25,63,-28,63,63,63,63,-38,-39,-37,63,63,63,63,63,63,-35,63,-24,63,63,-23,-34,63,-30,-31,63,-29,63,63,63,63,63,63,]),'FOR':([0,2,3,8,15,16,17,20,25,32,38,43,68,70,71,108,109,118,120,122,123,124,126,127,130,131,133,134,135,136,137,138,140,141,142,143,145,146,147,148,],[13,-4,-6,13,13,-13,-14,-11,-12,-5,13,-3,-61,-73,-74,13,13,-50,13,-16,-19,-54,-17,-18,-20,-56,13,13,-15,-59,13,-55,-53,-49,-57,-58,13,-52,13,-51,]),'(':([0,2,3,7,8,10,14,15,16,17,19,20,22,24,25,27,28,29,32,33,38,43,47,48,49,50,51,53,55,56,57,58,60,61,62,63,64,68,70,71,76,102,103,104,105,106,107,108,109,118,120,122,123,124,126,127,128,130,131,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,],[19,-4,-6,19,19,40,42,19,-13,-14,19,-11,19,52,-12,53,19,55,-5,19,19,-3,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-61,-73,-74,19,19,19,19,19,19,19,19,19,-50,19,-16,-19,-54,-17,-18,139,-20,-56,19,19,-15,-59,19,-55,19,-53,-49,-57,-58,19,-52,19,-51,]),'*':([9,18,21,30,31,36,37,44,45,54,59,67,75,77,78,79,80,81,83,86,87,88,89,90,91,92,93,97,99,100,101,112,113,114,115,116,117,],[-28,-27,-26,-25,58,-28,58,58,58,58,-38,-39,-37,58,58,58,58,58,58,-35,58,-24,58,58,-23,-34,58,-30,-31,58,-29,58,58,58,58,58,58,]),'LTE':([18,21,30,36,37,59,67,75,83,86,87,88,89,90,91,92,93,97,99,101,],[-27,-26,-25,-28,-36,-38,-39,-37,107,-35,-33,-24,-21,-22,-23,-34,-32,-30,-31,-29,]),'STRING':([0,2,3,7,8,15,16,17,19,20,22,25,28,32,33,38,43,47,48,49,50,51,53,55,56,57,58,60,61,62,63,64,68,70,71,76,102,103,104,105,106,107,108,109,118,120,122,123,124,126,127,130,131,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,],[18,-4,-6,18,18,18,-13,-14,18,-11,18,-12,18,-5,18,18,-3,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-61,-73,-74,18,18,18,18,18,18,18,18,18,-50,18,-16,-19,-54,-17,-18,-20,-56,18,18,-15,-59,18,-55,18,-53,-49,-57,-58,18,-52,18,-51,]),'EYE':([0,2,3,7,8,15,16,17,19,20,22,25,28,32,33,38,43,47,48,49,50,51,53,55,56,57,58,60,61,62,63,64,68,70,71,76,102,103,104,105,106,107,108,109,118,120,122,123,124,126,127,130,131,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,],[14,-4,-6,14,14,14,-13,-14,14,-11,14,-12,14,-5,14,14,-3,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-61,-73,-74,14,14,14,14,14,14,14,14,14,-50,14,-16,-19,-54,-17,-18,-20,-56,14,14,-15,-59,14,-55,14,-53,-49,-57,-58,14,-52,14,-51,]),'GTE':([18,21,30,36,37,59,67,75,83,86,87,88,89,90,91,92,93,97,99,101,],[-27,-26,-25,-28,-36,-38,-39,-37,106,-35,-33,-24,-21,-22,-23,-34,-32,-30,-31,-29,]),'=':([9,11,23,41,132,],[-70,-71,50,73,-72,]),'PRINT':([0,2,3,8,15,16,17,20,25,32,38,43,68,70,71,108,109,118,120,122,123,124,126,127,130,131,133,134,135,136,137,138,140,141,142,143,145,146,147,148,],[22,-4,-6,22,22,-13,-14,-11,-12,-5,22,-3,-61,-73,-74,22,22,-50,22,-16,-19,-54,-17,-18,-20,-56,22,22,-15,-59,22,-55,-53,-49,-57,-58,22,-52,22,-51,]),'ZEROS':([0,2,3,7,8,15,16,17,19,20,22,25,28,32,33,38,43,47,48,49,50,51,53,55,56,57,58,60,61,62,63,64,68,70,71,76,102,103,104,105,106,107,108,109,118,120,122,123,124,126,127,130,131,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,],[24,-4,-6,24,24,24,-13,-14,24,-11,24,-12,24,-5,24,24,-3,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-61,-73,-74,24,24,24,24,24,24,24,24,24,-50,24,-16,-19,-54,-17,-18,-20,-56,24,24,-15,-59,24,-55,24,-53,-49,-57,-58,24,-52,24,-51,]),'IF':([0,2,3,8,15,16,17,20,25,32,38,43,68,70,71,108,109,118,120,122,123,124,126,127,130,131,133,134,135,136,137,138,140,141,142,143,145,146,147,148,],[27,-4,-6,27,27,-13,-14,-11,-12,-5,27,-3,-61,-73,-74,27,128,-50,128,-16,-19,-54,-17,-18,-20,-56,128,27,-15,-59,128,-55,-53,-49,-57,-58,128,-52,128,-51,]),'CONTINUE':([70,71,109,120,122,123,124,126,127,130,131,133,135,136,137,138,140,142,143,145,146,147,148,],[-73,-74,129,129,-16,-19,-54,-17,-18,-20,-56,129,-15,-59,129,-55,-53,-57,-58,129,-52,129,-51,]),'ADDASSIGN':([9,11,23,132,],[-70,-71,51,-72,]),'DOTADD':([9,18,21,30,31,36,37,44,45,54,59,67,75,77,78,79,80,81,83,86,87,88,89,90,91,92,93,97,99,100,101,112,113,114,115,116,117,],[-28,-27,-26,-25,64,-28,-36,64,64,64,-38,-39,-37,64,64,64,64,64,64,-35,-33,-24,-21,-22,-23,-34,-32,-30,-31,64,-29,64,64,64,64,64,64,]),'RETURN':([0,2,3,8,15,16,17,20,25,32,38,43,68,70,71,108,109,118,120,122,123,124,126,127,130,131,133,134,135,136,137,138,140,141,142,143,145,146,147,148,],[28,-4,-6,28,28,-13,-14,-11,-12,-5,28,-3,-61,-73,-74,28,28,-50,28,-16,-19,-54,-17,-18,-20,-56,28,28,-15,-59,28,-55,-53,-49,-57,-58,28,-52,28,-51,]),'DOTMUL':([9,18,21,30,31,36,37,44,45,54,59,67,75,77,78,79,80,81,83,86,87,88,89,90,91,92,93,97,99,100,101,112,113,114,115,116,117,],[-28,-27,-26,-25,56,-28,56,56,56,56,-38,-39,-37,56,56,56,56,56,56,-35,56,-24,56,56,-23,-34,56,-30,-31,56,-29,56,56,56,56,56,56,]),':':([70,71,98,],[-73,-74,111,]),'SUBASSIGN':([9,11,23,132,],[-70,-71,47,-72,]),'EQ':([18,21,30,36,37,59,67,75,83,86,87,88,89,90,91,92,93,97,99,101,],[-27,-26,-25,-28,-36,-38,-39,-37,105,-35,-33,-24,-21,-22,-23,-34,-32,-30,-31,-29,]),'INTNUM':([0,2,3,7,8,15,16,17,19,20,22,25,28,32,33,38,39,40,42,43,47,48,49,50,51,52,53,55,56,57,58,60,61,62,63,64,68,70,71,73,76,96,102,103,104,105,106,107,108,109,111,118,120,122,123,124,126,127,130,131,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,],[30,-4,-6,30,30,30,-13,-14,30,-11,30,-12,30,-5,30,30,71,72,74,-3,30,30,30,30,30,82,30,30,30,30,30,30,30,30,30,30,-61,-73,-74,71,30,71,30,30,30,30,30,30,30,30,71,-50,30,-16,-19,-54,-17,-18,-20,-56,30,30,-15,-59,30,-55,30,-53,-49,-57,-58,30,-52,30,-51,]),'DIVASSIGN':([9,11,23,132,],[-70,-71,48,-72,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'instr_rec':([0,8,],[15,38,]),'instr_coloff':([0,8,15,38,108,134,],[3,3,3,3,3,3,]),'if':([0,8,15,38,108,134,],[17,17,17,17,17,17,]),'instr_colon':([0,8,15,38,108,109,120,133,134,137,145,147,],[4,4,4,4,4,119,119,119,4,119,119,119,]),'instr_coloff_inside_loop':([109,120,133,137,145,147,],[122,122,122,122,122,122,]),'block_loop':([109,120,133,137,145,147,],[123,123,123,123,123,123,]),'inside_loop':([109,120,133,137,145,147,],[124,136,140,143,146,148,]),'break_continue':([109,120,133,137,145,147,],[125,125,125,125,125,125,]),'inside_loop_rec':([120,],[137,]),'for':([0,8,15,38,108,109,120,133,134,137,145,147,],[20,20,20,20,20,126,126,126,20,126,126,126,]),'instr':([0,8,15,38,108,134,],[2,2,43,43,118,141,]),'print':([0,8,15,38,108,109,120,133,134,137,145,147,],[6,6,6,6,6,6,6,6,6,6,6,6,]),'row':([5,66,],[35,95,]),'block':([0,8,15,38,108,134,],[16,16,16,16,16,16,]),'instr_inside_loop':([109,120,133,137,145,147,],[131,131,131,131,131,131,]),'cell':([0,8,15,38,108,109,120,133,134,137,145,147,],[11,11,11,11,11,11,11,11,11,11,11,11,]),'id':([0,8,15,38,108,109,120,133,134,137,145,147,],[23,23,23,23,23,23,23,23,23,23,23,23,]),'while':([0,8,15,38,108,109,120,133,134,137,145,147,],[25,25,25,25,25,127,127,127,25,127,127,127,]),'return':([0,8,15,38,108,109,120,133,134,137,145,147,],[26,26,26,26,26,26,26,26,26,26,26,26,]),'assign':([0,8,15,38,108,109,120,133,134,137,145,147,],[12,12,12,12,12,12,12,12,12,12,12,12,]),'index':([39,73,96,111,],[69,98,110,133,]),'if_inside_loop':([109,120,133,137,145,147,],[130,130,130,130,130,130,]),'expr':([0,7,8,15,19,22,28,33,38,47,48,49,50,51,53,55,56,57,58,60,61,62,63,64,76,102,103,104,105,106,107,108,109,120,133,134,137,139,145,147,],[31,37,31,31,44,45,54,45,31,77,78,79,80,81,83,83,86,87,88,89,90,91,92,93,100,112,113,114,115,116,117,31,31,31,31,31,31,83,31,31,]),'cells':([22,33,],[46,65,]),'expr_rel':([53,55,139,],[84,85,144,]),'rows':([5,],[34,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> instr_rec','program',1,'p_program','Mparser.py',24),
  ('program -> <empty>','program',0,'p_program','Mparser.py',25),
  ('instr_rec -> instr_rec instr','instr_rec',2,'p_instr_rec','Mparser.py',29),
  ('instr_rec -> instr','instr_rec',1,'p_instr_rec','Mparser.py',30),
  ('instr -> instr_colon ;','instr',2,'p_instr','Mparser.py',37),
  ('instr -> instr_coloff','instr',1,'p_instr','Mparser.py',38),
  ('instr_colon -> assign','instr_colon',1,'p_instr_colon','Mparser.py',42),
  ('instr_colon -> expr','instr_colon',1,'p_instr_colon','Mparser.py',43),
  ('instr_colon -> print','instr_colon',1,'p_instr_colon','Mparser.py',44),
  ('instr_colon -> return','instr_colon',1,'p_instr_colon','Mparser.py',45),
  ('instr_coloff -> for','instr_coloff',1,'p_instr_coloff','Mparser.py',49),
  ('instr_coloff -> while','instr_coloff',1,'p_instr_coloff','Mparser.py',50),
  ('instr_coloff -> block','instr_coloff',1,'p_instr_coloff','Mparser.py',51),
  ('instr_coloff -> if','instr_coloff',1,'p_instr_coloff','Mparser.py',52),
  ('instr_inside_loop -> instr_colon ;','instr_inside_loop',2,'p_instr_inside_loop','Mparser.py',56),
  ('instr_inside_loop -> instr_coloff_inside_loop','instr_inside_loop',1,'p_instr_inside_loop','Mparser.py',57),
  ('instr_coloff_inside_loop -> for','instr_coloff_inside_loop',1,'p_instr_coloff_inside_loop','Mparser.py',61),
  ('instr_coloff_inside_loop -> while','instr_coloff_inside_loop',1,'p_instr_coloff_inside_loop','Mparser.py',62),
  ('instr_coloff_inside_loop -> block_loop','instr_coloff_inside_loop',1,'p_instr_coloff_inside_loop','Mparser.py',63),
  ('instr_coloff_inside_loop -> if_inside_loop','instr_coloff_inside_loop',1,'p_instr_coloff_inside_loop','Mparser.py',64),
  ('expr -> expr + expr','expr',3,'p_expr_1','Mparser.py',68),
  ('expr -> expr - expr','expr',3,'p_expr_1','Mparser.py',69),
  ('expr -> expr / expr','expr',3,'p_expr_1','Mparser.py',70),
  ('expr -> expr * expr','expr',3,'p_expr_1','Mparser.py',71),
  ('expr -> INTNUM','expr',1,'p_expr_2','Mparser.py',75),
  ('expr -> FLOATNUM','expr',1,'p_expr_2','Mparser.py',76),
  ('expr -> STRING','expr',1,'p_expr_2','Mparser.py',77),
  ('expr -> ID','expr',1,'p_expr_2','Mparser.py',78),
  ('expr -> ZEROS ( INTNUM )','expr',4,'p_expr_3','Mparser.py',82),
  ('expr -> ONES ( INTNUM )','expr',4,'p_expr_3','Mparser.py',83),
  ('expr -> EYE ( INTNUM )','expr',4,'p_expr_3','Mparser.py',84),
  ('expr -> expr DOTADD expr','expr',3,'p_expr_4','Mparser.py',88),
  ('expr -> expr DOTSUB expr','expr',3,'p_expr_4','Mparser.py',89),
  ('expr -> expr DOTDIV expr','expr',3,'p_expr_4','Mparser.py',90),
  ('expr -> expr DOTMUL expr','expr',3,'p_expr_4','Mparser.py',91),
  ('expr -> - expr','expr',2,'p_expr_5','Mparser.py',95),
  ('expr -> ( expr )','expr',3,'p_expr_5','Mparser.py',96),
  ("expr -> expr '",'expr',2,'p_expr_6','Mparser.py',100),
  ('expr -> [ rows ]','expr',3,'p_expr_7','Mparser.py',104),
  ('expr_rel -> expr GTE expr','expr_rel',3,'p_expr_rel','Mparser.py',108),
  ('expr_rel -> expr LTE expr','expr_rel',3,'p_expr_rel','Mparser.py',109),
  ('expr_rel -> expr NEQ expr','expr_rel',3,'p_expr_rel','Mparser.py',110),
  ('expr_rel -> expr EQ expr','expr_rel',3,'p_expr_rel','Mparser.py',111),
  ('expr_rel -> expr GT expr','expr_rel',3,'p_expr_rel','Mparser.py',112),
  ('expr_rel -> expr LT expr','expr_rel',3,'p_expr_rel','Mparser.py',113),
  ('rows -> rows , row','rows',3,'p_rows','Mparser.py',117),
  ('rows -> row','rows',1,'p_rows','Mparser.py',118),
  ('row -> [ cells ]','row',3,'p_row','Mparser.py',125),
  ('if -> IF ( expr_rel ) instr ELSE instr','if',7,'p_if','Mparser.py',129),
  ('if -> IF ( expr_rel ) instr','if',5,'p_if','Mparser.py',130),
  ('if_inside_loop -> IF ( expr_rel ) inside_loop ELSE inside_loop','if_inside_loop',7,'p_if_inside_loop','Mparser.py',137),
  ('if_inside_loop -> IF ( expr_rel ) inside_loop','if_inside_loop',5,'p_if_inside_loop','Mparser.py',138),
  ('for -> FOR ID = index : index inside_loop','for',7,'p_for','Mparser.py',145),
  ('while -> WHILE ( expr_rel ) inside_loop','while',5,'p_while','Mparser.py',149),
  ('inside_loop -> break_continue ;','inside_loop',2,'p_inside_loop','Mparser.py',153),
  ('inside_loop -> instr_inside_loop','inside_loop',1,'p_inside_loop','Mparser.py',154),
  ('block_loop -> { inside_loop_rec }','block_loop',3,'p_block_loop','Mparser.py',158),
  ('inside_loop_rec -> inside_loop_rec inside_loop','inside_loop_rec',2,'p_inside_loop_rec','Mparser.py',162),
  ('inside_loop_rec -> inside_loop','inside_loop_rec',1,'p_inside_loop_rec','Mparser.py',163),
  ('print -> PRINT cells','print',2,'p_print','Mparser.py',170),
  ('block -> { instr_rec }','block',3,'p_block','Mparser.py',174),
  ('assign -> id = expr','assign',3,'p_assign','Mparser.py',178),
  ('assign -> id ADDASSIGN expr','assign',3,'p_assign','Mparser.py',179),
  ('assign -> id SUBASSIGN expr','assign',3,'p_assign','Mparser.py',180),
  ('assign -> id MULASSIGN expr','assign',3,'p_assign','Mparser.py',181),
  ('assign -> id DIVASSIGN expr','assign',3,'p_assign','Mparser.py',182),
  ('cells -> cells , expr','cells',3,'p_cells','Mparser.py',186),
  ('cells -> expr','cells',1,'p_cells','Mparser.py',187),
  ('return -> RETURN expr','return',2,'p_return','Mparser.py',194),
  ('id -> ID','id',1,'p_id','Mparser.py',198),
  ('id -> cell','id',1,'p_id','Mparser.py',199),
  ('cell -> ID [ index , index ]','cell',6,'p_cell','Mparser.py',203),
  ('index -> ID','index',1,'p_index','Mparser.py',207),
  ('index -> INTNUM','index',1,'p_index','Mparser.py',208),
  ('break_continue -> BREAK','break_continue',1,'p_break_continue','Mparser.py',212),
  ('break_continue -> CONTINUE','break_continue',1,'p_break_continue','Mparser.py',213),
]
