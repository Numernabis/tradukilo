
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = 'C6C96617151D77B2735DC927F06474E2'
    
_lr_action_items = {'MULASSIGN':([3,27,29,31,142,],[39,-73,-71,-72,-74,]),'$end':([0,7,8,11,16,17,19,24,28,35,62,100,118,119,123,124,130,131,132,133,138,139,144,146,148,150,152,],[-2,-11,-6,-14,-13,-12,-1,0,-4,-5,-3,-68,-57,-19,-17,-20,-64,-16,-62,-18,-15,-63,-58,-67,-61,-59,-60,]),'SUBASSIGN':([3,27,29,31,142,],[38,-73,-71,-72,-74,]),'*':([6,9,15,18,27,30,55,65,66,67,69,71,73,74,75,76,77,78,79,82,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,109,112,113,115,145,],[-25,-21,-22,47,-24,-23,-28,-24,47,47,47,-27,-25,47,47,47,47,47,47,-29,-33,-39,47,47,47,47,-32,47,47,47,47,47,47,-40,-25,-26,-34,-35,-36,47,-25,]),'IF':([0,7,8,11,16,17,19,20,28,35,62,63,100,104,105,108,114,118,119,123,124,127,130,131,132,133,136,138,139,140,141,143,144,146,147,148,149,150,151,152,],[1,-11,-6,-14,-13,-12,1,1,-4,-5,-3,1,-68,-76,-75,1,120,-57,-19,-17,-20,120,-64,-16,-62,-18,1,-15,-63,120,-66,120,-58,-67,-65,-61,120,-59,120,-60,]),'{':([0,7,8,11,16,17,19,20,28,35,62,63,100,104,105,108,114,118,119,123,124,127,130,131,132,133,136,138,139,140,141,143,144,146,147,148,149,150,151,152,],[20,-11,-6,-14,-13,-12,20,20,-4,-5,-3,20,-68,-76,-75,20,127,-57,-19,-17,-20,127,-64,-16,-62,-18,20,-15,-63,127,-66,127,-58,-67,-65,-61,127,-59,127,-60,]),'ZEROS':([0,7,8,11,16,17,19,20,23,25,26,28,32,34,35,36,37,38,39,40,43,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,100,103,104,105,108,114,118,119,123,124,127,130,131,132,133,136,137,138,139,140,141,143,144,146,147,148,149,150,151,152,],[5,-11,-6,-14,-13,-12,5,5,5,5,5,-4,5,5,-5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,-3,5,5,-68,5,-76,-75,5,5,-57,-19,-17,-20,5,-64,-16,-62,-18,5,5,-15,-63,5,-66,5,-58,-67,-65,-61,5,-59,5,-60,]),')':([6,9,15,30,55,65,66,71,73,80,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,109,112,113,145,],[-25,-21,-22,-23,-28,-24,102,-27,108,109,-29,112,113,-33,-39,-42,-30,-46,-45,-32,-44,-31,-38,-43,-37,-41,-40,114,-26,-34,-35,-36,149,]),'ONES':([0,7,8,11,16,17,19,20,23,25,26,28,32,34,35,36,37,38,39,40,43,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,100,103,104,105,108,114,118,119,123,124,127,130,131,132,133,136,137,138,139,140,141,143,144,146,147,148,149,150,151,152,],[12,-11,-6,-14,-13,-12,12,12,12,12,12,-4,12,12,-5,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,-3,12,12,-68,12,-76,-75,12,12,-57,-19,-17,-20,12,-64,-16,-62,-18,12,12,-15,-63,12,-66,12,-58,-67,-65,-61,12,-59,12,-60,]),'INTNUM':([0,7,8,11,16,17,19,20,23,25,26,28,32,34,35,36,37,38,39,40,41,43,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,70,100,103,104,105,107,108,114,116,118,119,123,124,127,130,131,132,133,135,136,137,138,139,140,141,143,144,146,147,148,149,150,151,152,],[9,-11,-6,-14,-13,-12,9,9,9,9,9,-4,9,9,-5,9,9,9,9,9,80,9,84,85,9,9,9,9,9,9,9,9,9,9,9,9,9,9,-3,9,9,104,-68,9,-76,-75,104,9,9,104,-57,-19,-17,-20,9,-64,-16,-62,-18,104,9,9,-15,-63,9,-66,9,-58,-67,-65,-61,9,-59,9,-60,]),'[':([0,7,8,10,11,16,17,19,20,23,25,26,27,28,32,34,35,36,37,38,39,40,43,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,81,100,103,104,105,108,114,118,119,123,124,127,130,131,132,133,136,137,138,139,140,141,143,144,146,147,148,149,150,151,152,],[10,-11,-6,43,-14,-13,-12,10,10,10,10,10,70,-4,10,10,-5,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,-3,10,10,43,-68,10,-76,-75,10,10,-57,-19,-17,-20,10,-64,-16,-62,-18,10,10,-15,-63,10,-66,10,-58,-67,-65,-61,10,-59,10,-60,]),'LTE':([6,9,15,18,27,30,55,65,66,67,69,71,73,74,75,76,77,78,79,82,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,109,112,113,115,145,],[-25,-21,-22,49,-24,-23,-28,-24,49,49,49,-27,-25,49,49,49,49,49,49,-29,-33,-39,None,-30,None,None,-32,None,-31,-38,None,-37,None,-40,-25,-26,-34,-35,-36,49,-25,]),'/':([6,9,15,18,27,30,55,65,66,67,69,71,73,74,75,76,77,78,79,82,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,109,112,113,115,145,],[-25,-21,-22,53,-24,-23,-28,-24,53,53,53,-27,-25,53,53,53,53,53,53,-29,-33,-39,53,53,53,53,-32,53,53,53,53,53,53,-40,-25,-26,-34,-35,-36,53,-25,]),';':([2,4,6,9,13,15,18,22,27,30,55,65,67,68,69,71,75,76,77,78,79,82,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,109,112,113,115,121,122,125,126,128,129,],[35,-10,-25,-21,-9,-22,-8,-7,-24,-23,-28,-24,-70,-69,-56,-27,-48,-47,-49,-50,-51,-29,-33,-39,-42,-30,-46,-45,-32,-44,-31,-38,-43,-37,-41,-40,-26,-34,-35,-36,-55,138,-78,-79,139,-80,-77,]),'EYE':([0,7,8,11,16,17,19,20,23,25,26,28,32,34,35,36,37,38,39,40,43,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,100,103,104,105,108,114,118,119,123,124,127,130,131,132,133,136,137,138,139,140,141,143,144,146,147,148,149,150,151,152,],[14,-11,-6,-14,-13,-12,14,14,14,14,14,-4,14,14,-5,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-3,14,14,-68,14,-76,-75,14,14,-57,-19,-17,-20,14,-64,-16,-62,-18,14,14,-15,-63,14,-66,14,-58,-67,-65,-61,14,-59,14,-60,]),'FLOATNUM':([0,7,8,11,16,17,19,20,23,25,26,28,32,34,35,36,37,38,39,40,43,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,100,103,104,105,108,114,118,119,123,124,127,130,131,132,133,136,137,138,139,140,141,143,144,146,147,148,149,150,151,152,],[15,-11,-6,-14,-13,-12,15,15,15,15,15,-4,15,15,-5,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-3,15,15,-68,15,-76,-75,15,15,-57,-19,-17,-20,15,-64,-16,-62,-18,15,15,-15,-63,15,-66,15,-58,-67,-65,-61,15,-59,15,-60,]),'=':([3,27,29,31,72,142,],[37,-73,-71,-72,107,-74,]),'ELSE':([7,8,11,16,17,35,100,118,119,123,124,130,131,132,133,138,139,144,146,148,150,152,],[-11,-6,-14,-13,-12,-5,-68,136,-19,-17,-20,-64,-16,-62,-18,-15,-63,-58,-67,-61,151,-60,]),',':([6,9,15,30,42,44,55,65,68,69,71,82,83,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,104,105,106,109,110,111,112,113,115,],[-25,-21,-22,-23,81,-53,-28,-24,103,-56,-27,-29,103,-33,-39,-42,-30,-46,-45,-32,-44,-31,-38,-43,-37,-41,-40,-26,-76,-75,116,-34,-52,-54,-35,-36,-55,]),']':([6,9,15,30,42,44,55,65,69,71,82,83,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,104,105,109,110,111,112,113,115,134,],[-25,-21,-22,-23,82,-53,-28,-24,-56,-27,-29,111,-33,-39,-42,-30,-46,-45,-32,-44,-31,-38,-43,-37,-41,-40,-26,-76,-75,-34,-52,-54,-35,-36,-55,142,]),':':([104,105,117,],[-76,-75,135,]),'GTE':([6,9,15,18,27,30,55,65,66,67,69,71,73,74,75,76,77,78,79,82,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,109,112,113,115,145,],[-25,-21,-22,60,-24,-23,-28,-24,60,60,60,-27,-25,60,60,60,60,60,60,-29,-33,-39,None,-30,None,None,-32,None,-31,-38,None,-37,None,-40,-25,-26,-34,-35,-36,60,-25,]),'DOTSUB':([6,9,15,18,27,30,55,65,66,67,69,71,73,74,75,76,77,78,79,82,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,109,112,113,115,145,],[-25,-21,-22,57,-24,-23,-28,-24,57,57,57,-27,-25,57,57,57,57,57,57,-29,-33,-39,57,-30,57,57,-32,57,-31,-38,57,-37,57,-40,-25,-26,-34,-35,-36,57,-25,]),'ADDASSIGN':([3,27,29,31,142,],[36,-73,-71,-72,-74,]),'DOTDIV':([6,9,15,18,27,30,55,65,66,67,69,71,73,74,75,76,77,78,79,82,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,109,112,113,115,145,],[-25,-21,-22,48,-24,-23,-28,-24,48,48,48,-27,-25,48,48,48,48,48,48,-29,-33,-39,48,48,48,48,-32,48,48,48,48,48,48,-40,-25,-26,-34,-35,-36,48,-25,]),'CONTINUE':([104,105,114,119,123,124,127,130,131,132,133,138,139,140,141,143,146,147,148,149,150,151,152,],[-76,-75,128,-19,-17,-20,128,-64,-16,-62,-18,-15,-63,128,-66,128,-67,-65,-61,128,-59,128,-60,]),'NEQ':([6,9,15,18,27,30,55,65,66,67,69,71,73,74,75,76,77,78,79,82,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,109,112,113,115,145,],[-25,-21,-22,58,-24,-23,-28,-24,58,58,58,-27,-25,58,58,58,58,58,58,-29,-33,-39,None,-30,None,None,-32,None,-31,-38,None,-37,None,-40,-25,-26,-34,-35,-36,58,-25,]),'(':([0,1,5,7,8,11,12,14,16,17,19,20,21,23,25,26,28,32,34,35,36,37,38,39,40,43,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,100,103,104,105,108,114,118,119,120,123,124,127,130,131,132,133,136,137,138,139,140,141,143,144,146,147,148,149,150,151,152,],[23,34,41,-11,-6,-14,45,46,-13,-12,23,23,64,23,23,23,-4,23,23,-5,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-3,23,23,-68,23,-76,-75,23,23,-57,-19,137,-17,-20,23,-64,-16,-62,-18,23,23,-15,-63,23,-66,23,-58,-67,-65,-61,23,-59,23,-60,]),'EQ':([6,9,15,18,27,30,55,65,66,67,69,71,73,74,75,76,77,78,79,82,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,109,112,113,115,145,],[-25,-21,-22,54,-24,-23,-28,-24,54,54,54,-27,-25,54,54,54,54,54,54,-29,-33,-39,None,-30,None,None,-32,None,-31,-38,None,-37,None,-40,-25,-26,-34,-35,-36,54,-25,]),'RETURN':([0,7,8,11,16,17,19,20,28,35,62,63,100,104,105,108,114,118,119,123,124,127,130,131,132,133,136,138,139,140,141,143,144,146,147,148,149,150,151,152,],[25,-11,-6,-14,-13,-12,25,25,-4,-5,-3,25,-68,-76,-75,25,25,-57,-19,-17,-20,25,-64,-16,-62,-18,25,-15,-63,25,-66,25,-58,-67,-65,-61,25,-59,25,-60,]),'PRINT':([0,7,8,11,16,17,19,20,28,35,62,63,100,104,105,108,114,118,119,123,124,127,130,131,132,133,136,138,139,140,141,143,144,146,147,148,149,150,151,152,],[26,-11,-6,-14,-13,-12,26,26,-4,-5,-3,26,-68,-76,-75,26,26,-57,-19,-17,-20,26,-64,-16,-62,-18,26,-15,-63,26,-66,26,-58,-67,-65,-61,26,-59,26,-60,]),"'":([6,9,15,18,27,30,55,65,66,67,69,71,73,74,75,76,77,78,79,82,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,109,112,113,115,145,],[-25,-21,-22,55,-24,-23,-28,-24,55,55,55,55,-25,55,55,55,55,55,55,-29,55,55,55,55,55,55,55,55,55,55,55,55,55,55,-25,-26,-34,-35,-36,55,-25,]),'ID':([0,7,8,11,16,17,19,20,23,25,26,28,32,33,34,35,36,37,38,39,40,43,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,70,100,103,104,105,107,108,114,116,118,119,123,124,127,130,131,132,133,135,136,137,138,139,140,141,143,144,146,147,148,149,150,151,152,],[27,-11,-6,-14,-13,-12,27,27,65,65,65,-4,65,72,65,-5,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-3,27,65,105,-68,65,-76,-75,105,27,27,105,-57,-19,-17,-20,27,-64,-16,-62,-18,105,27,65,-15,-63,27,-66,27,-58,-67,-65,-61,27,-59,27,-60,]),'DOTADD':([6,9,15,18,27,30,55,65,66,67,69,71,73,74,75,76,77,78,79,82,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,109,112,113,115,145,],[-25,-21,-22,59,-24,-23,-28,-24,59,59,59,-27,-25,59,59,59,59,59,59,-29,-33,-39,59,-30,59,59,-32,59,-31,-38,59,-37,59,-40,-25,-26,-34,-35,-36,59,-25,]),'}':([7,8,11,16,17,28,35,62,63,100,118,119,123,124,130,131,132,133,138,139,140,141,144,146,147,148,150,152,],[-11,-6,-14,-13,-12,-4,-5,-3,100,-68,-57,-19,-17,-20,-64,-16,-62,-18,-15,-63,146,-66,-58,-67,-65,-61,-59,-60,]),'STRING':([0,7,8,11,16,17,19,20,23,25,26,28,32,34,35,36,37,38,39,40,43,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,100,103,104,105,108,114,118,119,123,124,127,130,131,132,133,136,137,138,139,140,141,143,144,146,147,148,149,150,151,152,],[30,-11,-6,-14,-13,-12,30,30,30,30,30,-4,30,30,-5,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-3,30,30,-68,30,-76,-75,30,30,-57,-19,-17,-20,30,-64,-16,-62,-18,30,30,-15,-63,30,-66,30,-58,-67,-65,-61,30,-59,30,-60,]),'BREAK':([104,105,114,119,123,124,127,130,131,132,133,138,139,140,141,143,146,147,148,149,150,151,152,],[-76,-75,125,-19,-17,-20,125,-64,-16,-62,-18,-15,-63,125,-66,125,-67,-65,-61,125,-59,125,-60,]),'+':([6,9,15,18,27,30,55,65,66,67,69,71,73,74,75,76,77,78,79,82,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,109,112,113,115,145,],[-25,-21,-22,50,-24,-23,-28,-24,50,50,50,-27,-25,50,50,50,50,50,50,-29,-33,-39,50,-30,50,50,-32,50,-31,-38,50,-37,50,-40,-25,-26,-34,-35,-36,50,-25,]),'LT':([6,9,15,18,27,30,55,65,66,67,69,71,73,74,75,76,77,78,79,82,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,109,112,113,115,145,],[-25,-21,-22,51,-24,-23,-28,-24,51,51,51,-27,-25,51,51,51,51,51,51,-29,-33,-39,None,-30,None,None,-32,None,-31,-38,None,-37,None,-40,-25,-26,-34,-35,-36,51,-25,]),'DOTMUL':([6,9,15,18,27,30,55,65,66,67,69,71,73,74,75,76,77,78,79,82,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,109,112,113,115,145,],[-25,-21,-22,61,-24,-23,-28,-24,61,61,61,-27,-25,61,61,61,61,61,61,-29,-33,-39,61,61,61,61,-32,61,61,61,61,61,61,-40,-25,-26,-34,-35,-36,61,-25,]),'-':([0,6,7,8,9,11,15,16,17,18,19,20,23,25,26,27,28,30,32,34,35,36,37,38,39,40,43,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,71,73,74,75,76,77,78,79,82,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,109,112,113,114,115,118,119,123,124,127,130,131,132,133,136,137,138,139,140,141,143,144,145,146,147,148,149,150,151,152,],[32,-25,-11,-6,-21,-14,-22,-13,-12,56,32,32,32,32,32,-24,-4,-23,32,32,-5,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-28,32,32,32,32,32,32,-3,32,32,-24,56,56,56,-27,-25,56,56,56,56,56,56,-29,-33,-39,56,-30,56,56,-32,56,-31,-38,56,-37,56,-40,-68,-25,-26,32,-76,-75,32,-34,-35,-36,32,56,-57,-19,-17,-20,32,-64,-16,-62,-18,32,32,-15,-63,32,-66,32,-58,-25,-67,-65,-61,32,-59,32,-60,]),'WHILE':([0,7,8,11,16,17,19,20,28,35,62,63,100,104,105,108,114,118,119,123,124,127,130,131,132,133,136,138,139,140,141,143,144,146,147,148,149,150,151,152,],[21,-11,-6,-14,-13,-12,21,21,-4,-5,-3,21,-68,-76,-75,21,21,-57,-19,-17,-20,21,-64,-16,-62,-18,21,-15,-63,21,-66,21,-58,-67,-65,-61,21,-59,21,-60,]),'GT':([6,9,15,18,27,30,55,65,66,67,69,71,73,74,75,76,77,78,79,82,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,109,112,113,115,145,],[-25,-21,-22,52,-24,-23,-28,-24,52,52,52,-27,-25,52,52,52,52,52,52,-29,-33,-39,None,-30,None,None,-32,None,-31,-38,None,-37,None,-40,-25,-26,-34,-35,-36,52,-25,]),'DIVASSIGN':([3,27,29,31,142,],[40,-73,-71,-72,-74,]),'FOR':([0,7,8,11,16,17,19,20,28,35,62,63,100,104,105,108,114,118,119,123,124,127,130,131,132,133,136,138,139,140,141,143,144,146,147,148,149,150,151,152,],[33,-11,-6,-14,-13,-12,33,33,-4,-5,-3,33,-68,-76,-75,33,33,-57,-19,-17,-20,33,-64,-16,-62,-18,33,-15,-63,33,-66,33,-58,-67,-65,-61,33,-59,33,-60,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'instr_coloff_inside_loop':([114,127,140,143,149,151,],[131,131,131,131,131,131,]),'block_loop':([114,127,140,143,149,151,],[119,119,119,119,119,119,]),'break':([114,127,140,143,149,151,],[129,129,129,129,129,129,]),'inside_loop_rec':([127,],[140,]),'assign':([0,19,20,63,108,114,127,136,140,143,149,151,],[22,22,22,22,22,22,22,22,22,22,22,22,]),'continue':([114,127,140,143,149,151,],[122,122,122,122,122,122,]),'instr_colon':([0,19,20,63,108,114,127,136,140,143,149,151,],[2,2,2,2,2,121,121,2,121,121,121,121,]),'id':([0,19,20,63,108,114,127,136,140,143,149,151,],[3,3,3,3,3,3,3,3,3,3,3,3,]),'instr_inside_loop':([114,127,140,143,149,151,],[130,130,130,130,130,130,]),'return':([0,19,20,63,108,114,127,136,140,143,149,151,],[4,4,4,4,4,4,4,4,4,4,4,4,]),'index':([70,107,116,135,],[106,117,134,143,]),'inside_loop':([114,127,140,143,149,151,],[132,141,147,148,150,152,]),'cells':([26,43,],[68,83,]),'expr_rel':([0,19,20,23,25,26,32,34,36,37,38,39,40,43,47,48,49,50,51,52,53,54,56,57,58,59,60,61,63,64,103,108,114,127,136,137,140,143,149,151,],[6,6,6,6,6,6,6,73,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,101,6,6,6,6,6,145,6,6,6,6,]),'row':([10,81,],[44,110,]),'id_2':([0,19,20,63,108,114,127,136,140,143,149,151,],[29,29,29,29,29,29,29,29,29,29,29,29,]),'instr_coloff':([0,19,20,63,108,136,],[8,8,8,8,8,8,]),'break_continue':([114,127,140,143,149,151,],[126,126,126,126,126,126,]),'for':([0,19,20,63,108,114,127,136,140,143,149,151,],[7,7,7,7,7,123,123,7,123,123,123,123,]),'if':([0,19,20,63,108,136,],[11,11,11,11,11,11,]),'print':([0,19,20,63,108,114,127,136,140,143,149,151,],[13,13,13,13,13,13,13,13,13,13,13,13,]),'rows':([10,],[42,]),'instr':([0,19,20,63,108,136,],[28,62,28,62,118,144,]),'ref':([0,19,20,63,108,114,127,136,140,143,149,151,],[31,31,31,31,31,31,31,31,31,31,31,31,]),'if_inside_loop':([114,127,140,143,149,151,],[124,124,124,124,124,124,]),'block':([0,19,20,63,108,136,],[16,16,16,16,16,16,]),'while':([0,19,20,63,108,114,127,136,140,143,149,151,],[17,17,17,17,17,133,133,17,133,133,133,133,]),'program':([0,],[24,]),'expr':([0,19,20,23,25,26,32,34,36,37,38,39,40,43,47,48,49,50,51,52,53,54,56,57,58,59,60,61,63,64,103,108,114,127,136,137,140,143,149,151,],[18,18,18,66,67,69,71,74,75,76,77,78,79,69,86,87,88,89,90,91,92,93,94,95,96,97,98,99,18,74,115,18,18,18,18,74,18,18,18,18,]),'instr_rec':([0,20,],[19,63,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> instr_rec','program',1,'p_program','Mparser.py',26),
  ('program -> <empty>','program',0,'p_program','Mparser.py',27),
  ('instr_rec -> instr_rec instr','instr_rec',2,'p_instr_rec','Mparser.py',31),
  ('instr_rec -> instr','instr_rec',1,'p_instr_rec','Mparser.py',32),
  ('instr -> instr_colon ;','instr',2,'p_instr','Mparser.py',39),
  ('instr -> instr_coloff','instr',1,'p_instr','Mparser.py',40),
  ('instr_colon -> assign','instr_colon',1,'p_instr_colon','Mparser.py',44),
  ('instr_colon -> expr','instr_colon',1,'p_instr_colon','Mparser.py',45),
  ('instr_colon -> print','instr_colon',1,'p_instr_colon','Mparser.py',46),
  ('instr_colon -> return','instr_colon',1,'p_instr_colon','Mparser.py',47),
  ('instr_coloff -> for','instr_coloff',1,'p_instr_coloff','Mparser.py',51),
  ('instr_coloff -> while','instr_coloff',1,'p_instr_coloff','Mparser.py',52),
  ('instr_coloff -> block','instr_coloff',1,'p_instr_coloff','Mparser.py',53),
  ('instr_coloff -> if','instr_coloff',1,'p_instr_coloff','Mparser.py',54),
  ('instr_inside_loop -> instr_colon ;','instr_inside_loop',2,'p_instr_inside_loop','Mparser.py',58),
  ('instr_inside_loop -> instr_coloff_inside_loop','instr_inside_loop',1,'p_instr_inside_loop','Mparser.py',59),
  ('instr_coloff_inside_loop -> for','instr_coloff_inside_loop',1,'p_instr_coloff_inside_loop','Mparser.py',63),
  ('instr_coloff_inside_loop -> while','instr_coloff_inside_loop',1,'p_instr_coloff_inside_loop','Mparser.py',64),
  ('instr_coloff_inside_loop -> block_loop','instr_coloff_inside_loop',1,'p_instr_coloff_inside_loop','Mparser.py',65),
  ('instr_coloff_inside_loop -> if_inside_loop','instr_coloff_inside_loop',1,'p_instr_coloff_inside_loop','Mparser.py',66),
  ('expr -> INTNUM','expr',1,'p_expr_1','Mparser.py',72),
  ('expr -> FLOATNUM','expr',1,'p_expr_2','Mparser.py',76),
  ('expr -> STRING','expr',1,'p_expr_3','Mparser.py',80),
  ('expr -> ID','expr',1,'p_expr_4','Mparser.py',84),
  ('expr -> expr_rel','expr',1,'p_expr_5','Mparser.py',88),
  ('expr -> ( expr )','expr',3,'p_expr_6','Mparser.py',92),
  ('expr -> - expr','expr',2,'p_expr_7','Mparser.py',96),
  ("expr -> expr '",'expr',2,'p_expr_8','Mparser.py',100),
  ('expr -> [ rows ]','expr',3,'p_expr_9','Mparser.py',104),
  ('expr -> expr + expr','expr',3,'p_expr_bin','Mparser.py',108),
  ('expr -> expr - expr','expr',3,'p_expr_bin','Mparser.py',109),
  ('expr -> expr / expr','expr',3,'p_expr_bin','Mparser.py',110),
  ('expr -> expr * expr','expr',3,'p_expr_bin','Mparser.py',111),
  ('expr -> ZEROS ( INTNUM )','expr',4,'p_expr_matrix','Mparser.py',115),
  ('expr -> ONES ( INTNUM )','expr',4,'p_expr_matrix','Mparser.py',116),
  ('expr -> EYE ( INTNUM )','expr',4,'p_expr_matrix','Mparser.py',117),
  ('expr -> expr DOTADD expr','expr',3,'p_expr_dot','Mparser.py',121),
  ('expr -> expr DOTSUB expr','expr',3,'p_expr_dot','Mparser.py',122),
  ('expr -> expr DOTDIV expr','expr',3,'p_expr_dot','Mparser.py',123),
  ('expr -> expr DOTMUL expr','expr',3,'p_expr_dot','Mparser.py',124),
  ('expr_rel -> expr GTE expr','expr_rel',3,'p_expr_rel','Mparser.py',128),
  ('expr_rel -> expr LTE expr','expr_rel',3,'p_expr_rel','Mparser.py',129),
  ('expr_rel -> expr NEQ expr','expr_rel',3,'p_expr_rel','Mparser.py',130),
  ('expr_rel -> expr EQ expr','expr_rel',3,'p_expr_rel','Mparser.py',131),
  ('expr_rel -> expr GT expr','expr_rel',3,'p_expr_rel','Mparser.py',132),
  ('expr_rel -> expr LT expr','expr_rel',3,'p_expr_rel','Mparser.py',133),
  ('assign -> id = expr','assign',3,'p_assign','Mparser.py',137),
  ('assign -> id ADDASSIGN expr','assign',3,'p_assign','Mparser.py',138),
  ('assign -> id SUBASSIGN expr','assign',3,'p_assign','Mparser.py',139),
  ('assign -> id MULASSIGN expr','assign',3,'p_assign','Mparser.py',140),
  ('assign -> id DIVASSIGN expr','assign',3,'p_assign','Mparser.py',141),
  ('rows -> rows , row','rows',3,'p_rows','Mparser.py',146),
  ('rows -> row','rows',1,'p_rows','Mparser.py',147),
  ('row -> [ cells ]','row',3,'p_row','Mparser.py',154),
  ('cells -> cells , expr','cells',3,'p_cells','Mparser.py',158),
  ('cells -> expr','cells',1,'p_cells','Mparser.py',159),
  ('if -> IF ( expr_rel ) instr','if',5,'p_if','Mparser.py',168),
  ('if -> IF ( expr_rel ) instr ELSE instr','if',7,'p_if','Mparser.py',169),
  ('if_inside_loop -> IF ( expr_rel ) inside_loop','if_inside_loop',5,'p_if_inside_loop','Mparser.py',176),
  ('if_inside_loop -> IF ( expr_rel ) inside_loop ELSE inside_loop','if_inside_loop',7,'p_if_inside_loop','Mparser.py',177),
  ('for -> FOR ID = index : index inside_loop','for',7,'p_for','Mparser.py',184),
  ('while -> WHILE ( expr_rel ) inside_loop','while',5,'p_while','Mparser.py',188),
  ('inside_loop -> break_continue ;','inside_loop',2,'p_inside_loop','Mparser.py',192),
  ('inside_loop -> instr_inside_loop','inside_loop',1,'p_inside_loop','Mparser.py',193),
  ('inside_loop_rec -> inside_loop_rec inside_loop','inside_loop_rec',2,'p_inside_loop_rec','Mparser.py',197),
  ('inside_loop_rec -> inside_loop','inside_loop_rec',1,'p_inside_loop_rec','Mparser.py',198),
  ('block_loop -> { inside_loop_rec }','block_loop',3,'p_block_loop','Mparser.py',205),
  ('block -> { instr_rec }','block',3,'p_block','Mparser.py',209),
  ('print -> PRINT cells','print',2,'p_print','Mparser.py',215),
  ('return -> RETURN expr','return',2,'p_return','Mparser.py',219),
  ('id -> id_2','id',1,'p_id','Mparser.py',223),
  ('id -> ref','id',1,'p_id','Mparser.py',224),
  ('id_2 -> ID','id_2',1,'p_id_2','Mparser.py',228),
  ('ref -> ID [ index , index ]','ref',6,'p_ref','Mparser.py',232),
  ('index -> ID','index',1,'p_index','Mparser.py',236),
  ('index -> INTNUM','index',1,'p_index','Mparser.py',237),
  ('break_continue -> break','break_continue',1,'p_break_continue','Mparser.py',244),
  ('break_continue -> continue','break_continue',1,'p_break_continue','Mparser.py',245),
  ('break -> BREAK','break',1,'p_break','Mparser.py',249),
  ('continue -> CONTINUE','continue',1,'p_continue','Mparser.py',253),
]
