
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "leftIFleftELSEnonassoc=ADDASSIGNSUBASSIGNMULASSIGNDIVASSIGNnonassocGTELTENEQEQGTLTleft+-DOTADDDOTSUBleft*/DOTMULDOTDIVrightUMINUS'ADDASSIGN BREAK CONTINUE DIVASSIGN DOTADD DOTDIV DOTMUL DOTSUB ELSE EQ EYE FLOATNUM FOR GT GTE ID IF INTNUM LT LTE MULASSIGN NEQ ONES PRINT RETURN STRING SUBASSIGN WHILE ZEROSprogram : instr_rec\n               | instr_rec : instr_rec instr\n                 | instrinstr : instr_colon ';'\n             | instr_coloffinstr_colon : assign\n                   | expr\n                   | print\n                   | returninstr_coloff : for\n                    | while\n                    | block\n                    | ifinstr_inside_loop : instr_colon ';'\n                         | instr_coloff_inside_loopinstr_coloff_inside_loop : for\n                                | while\n                                | block_loop\n                                | if_inside_loopexpr : INTNUMexpr : FLOATNUMexpr : STRINGexpr : IDexpr : expr_relexpr : '(' expr ')'expr : '-' expr %prec UMINUSexpr : expr '\\''expr : '[' rows ']'expr : expr '+' expr\n            | expr '-' expr\n            | expr '/' expr\n            | expr '*' exprexpr : ZEROS '(' INTNUM ')'\n            | ONES '(' INTNUM ')'\n            | EYE '(' INTNUM ')'expr : ZEROS '(' expr ')'\n            | ONES '(' expr ')'\n            | EYE '(' expr ')'expr : expr DOTADD expr\n            | expr DOTSUB expr\n            | expr DOTDIV expr\n            | expr DOTMUL exprexpr_rel : expr GTE expr\n                | expr LTE expr\n                | expr NEQ expr\n                | expr EQ expr\n                | expr GT expr\n                | expr LT exprassign : id '=' expr\n              | id ADDASSIGN expr\n              | id SUBASSIGN expr\n              | id MULASSIGN expr\n              | id DIVASSIGN exprrows : rows ',' row\n            | rowrow : '[' cells ']'cells : cells ',' expr\n             | exprif : IF '(' expr_rel ')' instr %prec IF\n          | IF '(' expr_rel ')' instr ELSE instrif_inside_loop : IF '(' expr_rel ')' inside_loop %prec IF\n                      | IF '(' expr_rel ')' inside_loop ELSE inside_loopfor : FOR ID '=' index ':' index inside_loopwhile : WHILE '(' expr_rel ')' inside_loopinside_loop : break_continue ';'\n                   | instr_inside_loopinside_loop_rec : inside_loop_rec inside_loop\n                       | inside_loopblock_loop : '{' inside_loop_rec '}'block : '{' instr_rec '}'print : PRINT cellsreturn : RETURN exprid : id_2\n          | refid_2 : IDref : ID '[' index ',' index ']'index : ID\n             | INTNUMbreak_continue : break\n                      | continuebreak : BREAKcontinue : CONTINUE"
    
_lr_action_items = {'$end':([0,1,2,3,5,10,11,12,13,34,35,109,126,128,132,135,136,137,138,141,144,145,150,151,154,156,158,],[-2,0,-1,-4,-6,-11,-12,-13,-14,-3,-5,-71,-65,-67,-16,-17,-18,-19,-20,-60,-66,-15,-64,-70,-61,-62,-63,]),'INTNUM':([0,2,3,5,10,11,12,13,20,21,26,27,30,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,60,63,64,65,70,71,72,92,94,105,106,109,111,122,123,125,126,128,132,135,136,137,138,139,141,143,144,145,146,147,148,149,150,151,152,154,155,156,157,158,],[15,15,-4,-6,-11,-12,-13,-14,15,15,15,15,15,-3,-5,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,94,15,99,101,103,15,15,15,-78,-79,15,94,-71,94,15,15,94,-65,-67,-16,-17,-18,-19,-20,15,-60,15,-66,-15,15,-69,15,15,-64,-70,-68,-61,15,-62,15,-63,]),'FLOATNUM':([0,2,3,5,10,11,12,13,20,21,26,27,30,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,60,63,64,65,70,71,72,92,94,105,109,122,123,126,128,132,135,136,137,138,139,141,143,144,145,146,147,148,149,150,151,152,154,155,156,157,158,],[16,16,-4,-6,-11,-12,-13,-14,16,16,16,16,16,-3,-5,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-78,-79,16,-71,16,16,-65,-67,-16,-17,-18,-19,-20,16,-60,16,-66,-15,16,-69,16,16,-64,-70,-68,-61,16,-62,16,-63,]),'STRING':([0,2,3,5,10,11,12,13,20,21,26,27,30,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,60,63,64,65,70,71,72,92,94,105,109,122,123,126,128,132,135,136,137,138,139,141,143,144,145,146,147,148,149,150,151,152,154,155,156,157,158,],[17,17,-4,-6,-11,-12,-13,-14,17,17,17,17,17,-3,-5,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-78,-79,17,-71,17,17,-65,-67,-16,-17,-18,-19,-20,17,-60,17,-66,-15,17,-69,17,17,-64,-70,-68,-61,17,-62,17,-63,]),'ID':([0,2,3,5,10,11,12,13,20,21,26,27,28,30,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,60,63,64,65,70,71,72,92,94,105,106,109,111,122,123,125,126,128,132,135,136,137,138,139,141,143,144,145,146,147,148,149,150,151,152,154,155,156,157,158,],[18,18,-4,-6,-11,-12,-13,-14,58,58,58,58,69,18,-3,-5,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,92,58,58,58,58,58,18,58,-78,-79,58,92,-71,92,18,18,92,-65,-67,-16,-17,-18,-19,-20,18,-60,18,-66,-15,18,-69,58,18,-64,-70,-68,-61,18,-62,18,-63,]),'(':([0,2,3,5,10,11,12,13,20,21,23,24,25,26,27,29,30,31,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,60,63,64,65,70,71,72,92,94,105,109,122,123,126,128,132,135,136,137,138,139,140,141,143,144,145,146,147,148,149,150,151,152,154,155,156,157,158,],[20,20,-4,-6,-11,-12,-13,-14,20,20,63,64,65,20,20,70,20,72,-3,-5,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-78,-79,20,-71,20,20,-65,-67,-16,-17,-18,-19,-20,20,148,-60,20,-66,-15,20,-69,20,20,-64,-70,-68,-61,20,-62,20,-63,]),'-':([0,2,3,5,7,10,11,12,13,15,16,17,18,19,20,21,26,27,30,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,63,64,65,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,97,99,100,101,102,103,104,105,107,108,109,110,114,115,116,117,118,119,120,122,123,126,128,132,135,136,137,138,139,141,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,],[21,21,-4,-6,38,-11,-12,-13,-14,-21,-22,-23,-24,-25,21,21,21,21,21,-3,-5,-28,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,38,-24,-27,21,21,21,21,38,38,21,21,21,-30,-31,-32,-33,-40,-41,-42,-43,38,38,38,38,38,38,38,38,38,38,38,-78,-79,-26,-29,-21,38,-21,38,-21,38,21,-25,38,-71,-25,-34,-37,-35,-38,-36,-39,38,21,21,-65,-67,-16,-17,-18,-19,-20,21,-60,21,-66,-15,21,-69,21,21,-64,-70,-68,-25,-61,21,-62,21,-63,]),'[':([0,2,3,5,10,11,12,13,18,20,21,22,26,27,30,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,60,63,64,65,70,71,72,92,94,98,105,109,122,123,126,128,132,135,136,137,138,139,141,143,144,145,146,147,148,149,150,151,152,154,155,156,157,158,],[22,22,-4,-6,-11,-12,-13,-14,56,22,22,60,22,22,22,-3,-5,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-78,-79,60,22,-71,22,22,-65,-67,-16,-17,-18,-19,-20,22,-60,22,-66,-15,22,-69,22,22,-64,-70,-68,-61,22,-62,22,-63,]),'ZEROS':([0,2,3,5,10,11,12,13,20,21,26,27,30,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,60,63,64,65,70,71,72,92,94,105,109,122,123,126,128,132,135,136,137,138,139,141,143,144,145,146,147,148,149,150,151,152,154,155,156,157,158,],[23,23,-4,-6,-11,-12,-13,-14,23,23,23,23,23,-3,-5,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-78,-79,23,-71,23,23,-65,-67,-16,-17,-18,-19,-20,23,-60,23,-66,-15,23,-69,23,23,-64,-70,-68,-61,23,-62,23,-63,]),'ONES':([0,2,3,5,10,11,12,13,20,21,26,27,30,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,60,63,64,65,70,71,72,92,94,105,109,122,123,126,128,132,135,136,137,138,139,141,143,144,145,146,147,148,149,150,151,152,154,155,156,157,158,],[24,24,-4,-6,-11,-12,-13,-14,24,24,24,24,24,-3,-5,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-78,-79,24,-71,24,24,-65,-67,-16,-17,-18,-19,-20,24,-60,24,-66,-15,24,-69,24,24,-64,-70,-68,-61,24,-62,24,-63,]),'EYE':([0,2,3,5,10,11,12,13,20,21,26,27,30,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,60,63,64,65,70,71,72,92,94,105,109,122,123,126,128,132,135,136,137,138,139,141,143,144,145,146,147,148,149,150,151,152,154,155,156,157,158,],[25,25,-4,-6,-11,-12,-13,-14,25,25,25,25,25,-3,-5,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-78,-79,25,-71,25,25,-65,-67,-16,-17,-18,-19,-20,25,-60,25,-66,-15,25,-69,25,25,-64,-70,-68,-61,25,-62,25,-63,]),'PRINT':([0,2,3,5,10,11,12,13,30,34,35,71,92,94,109,122,123,126,128,132,135,136,137,138,139,141,143,144,145,146,147,149,150,151,152,154,155,156,157,158,],[26,26,-4,-6,-11,-12,-13,-14,26,-3,-5,26,-78,-79,-71,26,26,-65,-67,-16,-17,-18,-19,-20,26,-60,26,-66,-15,26,-69,26,-64,-70,-68,-61,26,-62,26,-63,]),'RETURN':([0,2,3,5,10,11,12,13,30,34,35,71,92,94,109,122,123,126,128,132,135,136,137,138,139,141,143,144,145,146,147,149,150,151,152,154,155,156,157,158,],[27,27,-4,-6,-11,-12,-13,-14,27,-3,-5,27,-78,-79,-71,27,27,-65,-67,-16,-17,-18,-19,-20,27,-60,27,-66,-15,27,-69,27,-64,-70,-68,-61,27,-62,27,-63,]),'FOR':([0,2,3,5,10,11,12,13,30,34,35,71,92,94,109,122,123,126,128,132,135,136,137,138,139,141,143,144,145,146,147,149,150,151,152,154,155,156,157,158,],[28,28,-4,-6,-11,-12,-13,-14,28,-3,-5,28,-78,-79,-71,28,28,-65,-67,-16,-17,-18,-19,-20,28,-60,28,-66,-15,28,-69,28,-64,-70,-68,-61,28,-62,28,-63,]),'WHILE':([0,2,3,5,10,11,12,13,30,34,35,71,92,94,109,122,123,126,128,132,135,136,137,138,139,141,143,144,145,146,147,149,150,151,152,154,155,156,157,158,],[29,29,-4,-6,-11,-12,-13,-14,29,-3,-5,29,-78,-79,-71,29,29,-65,-67,-16,-17,-18,-19,-20,29,-60,29,-66,-15,29,-69,29,-64,-70,-68,-61,29,-62,29,-63,]),'{':([0,2,3,5,10,11,12,13,30,34,35,71,92,94,109,122,123,126,128,132,135,136,137,138,139,141,143,144,145,146,147,149,150,151,152,154,155,156,157,158,],[30,30,-4,-6,-11,-12,-13,-14,30,-3,-5,30,-78,-79,-71,139,30,-65,-67,-16,-17,-18,-19,-20,139,-60,139,-66,-15,139,-69,30,-64,-70,-68,-61,139,-62,139,-63,]),'IF':([0,2,3,5,10,11,12,13,30,34,35,71,92,94,109,122,123,126,128,132,135,136,137,138,139,141,143,144,145,146,147,149,150,151,152,154,155,156,157,158,],[31,31,-4,-6,-11,-12,-13,-14,31,-3,-5,31,-78,-79,-71,140,31,-65,-67,-16,-17,-18,-19,-20,140,-60,140,-66,-15,140,-69,31,-64,-70,-68,-61,140,-62,140,-63,]),'}':([3,5,10,11,12,13,34,35,71,109,126,128,132,135,136,137,138,141,144,145,146,147,150,151,152,154,156,158,],[-4,-6,-11,-12,-13,-14,-3,-5,109,-71,-65,-67,-16,-17,-18,-19,-20,-60,-66,-15,151,-69,-64,-70,-68,-61,-62,-63,]),';':([4,6,7,8,9,15,16,17,18,19,36,58,59,66,67,68,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,95,97,114,115,116,117,118,119,120,127,129,130,131,133,134,],[35,-7,-8,-9,-10,-21,-22,-23,-24,-25,-28,-24,-27,-72,-59,-73,-30,-31,-32,-33,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-26,-29,-34,-37,-35,-38,-36,-39,-58,144,-80,-81,145,-82,-83,]),'ELSE':([5,10,11,12,13,35,109,126,128,132,135,136,137,138,141,144,145,150,151,154,156,158,],[-6,-11,-12,-13,-14,-5,-71,-65,-67,-16,-17,-18,-19,-20,149,-66,-15,-64,-70,-61,157,-63,]),"'":([7,15,16,17,18,19,36,57,58,59,67,68,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,95,97,99,100,101,102,103,104,107,108,110,114,115,116,117,118,119,120,153,],[36,-21,-22,-23,-24,-25,-28,36,-24,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-26,-29,-21,36,-21,36,-21,36,-25,36,-25,-34,-37,-35,-38,-36,-39,36,-25,]),'+':([7,15,16,17,18,19,36,57,58,59,67,68,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,95,97,99,100,101,102,103,104,107,108,110,114,115,116,117,118,119,120,153,],[37,-21,-22,-23,-24,-25,-28,37,-24,-27,37,37,-30,-31,-32,-33,-40,-41,-42,-43,37,37,37,37,37,37,37,37,37,37,37,-26,-29,-21,37,-21,37,-21,37,-25,37,-25,-34,-37,-35,-38,-36,-39,37,-25,]),'/':([7,15,16,17,18,19,36,57,58,59,67,68,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,95,97,99,100,101,102,103,104,107,108,110,114,115,116,117,118,119,120,153,],[39,-21,-22,-23,-24,-25,-28,39,-24,-27,39,39,39,39,-32,-33,39,39,-42,-43,39,39,39,39,39,39,39,39,39,39,39,-26,-29,-21,39,-21,39,-21,39,-25,39,-25,-34,-37,-35,-38,-36,-39,39,-25,]),'*':([7,15,16,17,18,19,36,57,58,59,67,68,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,95,97,99,100,101,102,103,104,107,108,110,114,115,116,117,118,119,120,153,],[40,-21,-22,-23,-24,-25,-28,40,-24,-27,40,40,40,40,-32,-33,40,40,-42,-43,40,40,40,40,40,40,40,40,40,40,40,-26,-29,-21,40,-21,40,-21,40,-25,40,-25,-34,-37,-35,-38,-36,-39,40,-25,]),'DOTADD':([7,15,16,17,18,19,36,57,58,59,67,68,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,95,97,99,100,101,102,103,104,107,108,110,114,115,116,117,118,119,120,153,],[41,-21,-22,-23,-24,-25,-28,41,-24,-27,41,41,-30,-31,-32,-33,-40,-41,-42,-43,41,41,41,41,41,41,41,41,41,41,41,-26,-29,-21,41,-21,41,-21,41,-25,41,-25,-34,-37,-35,-38,-36,-39,41,-25,]),'DOTSUB':([7,15,16,17,18,19,36,57,58,59,67,68,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,95,97,99,100,101,102,103,104,107,108,110,114,115,116,117,118,119,120,153,],[42,-21,-22,-23,-24,-25,-28,42,-24,-27,42,42,-30,-31,-32,-33,-40,-41,-42,-43,42,42,42,42,42,42,42,42,42,42,42,-26,-29,-21,42,-21,42,-21,42,-25,42,-25,-34,-37,-35,-38,-36,-39,42,-25,]),'DOTDIV':([7,15,16,17,18,19,36,57,58,59,67,68,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,95,97,99,100,101,102,103,104,107,108,110,114,115,116,117,118,119,120,153,],[43,-21,-22,-23,-24,-25,-28,43,-24,-27,43,43,43,43,-32,-33,43,43,-42,-43,43,43,43,43,43,43,43,43,43,43,43,-26,-29,-21,43,-21,43,-21,43,-25,43,-25,-34,-37,-35,-38,-36,-39,43,-25,]),'DOTMUL':([7,15,16,17,18,19,36,57,58,59,67,68,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,95,97,99,100,101,102,103,104,107,108,110,114,115,116,117,118,119,120,153,],[44,-21,-22,-23,-24,-25,-28,44,-24,-27,44,44,44,44,-32,-33,44,44,-42,-43,44,44,44,44,44,44,44,44,44,44,44,-26,-29,-21,44,-21,44,-21,44,-25,44,-25,-34,-37,-35,-38,-36,-39,44,-25,]),'GTE':([7,15,16,17,18,19,36,57,58,59,67,68,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,95,97,99,100,101,102,103,104,107,108,110,114,115,116,117,118,119,120,153,],[45,-21,-22,-23,-24,-25,-28,45,-24,-27,45,45,-30,-31,-32,-33,-40,-41,-42,-43,None,None,None,None,None,None,45,45,45,45,45,-26,-29,-21,45,-21,45,-21,45,-25,45,-25,-34,-37,-35,-38,-36,-39,45,-25,]),'LTE':([7,15,16,17,18,19,36,57,58,59,67,68,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,95,97,99,100,101,102,103,104,107,108,110,114,115,116,117,118,119,120,153,],[46,-21,-22,-23,-24,-25,-28,46,-24,-27,46,46,-30,-31,-32,-33,-40,-41,-42,-43,None,None,None,None,None,None,46,46,46,46,46,-26,-29,-21,46,-21,46,-21,46,-25,46,-25,-34,-37,-35,-38,-36,-39,46,-25,]),'NEQ':([7,15,16,17,18,19,36,57,58,59,67,68,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,95,97,99,100,101,102,103,104,107,108,110,114,115,116,117,118,119,120,153,],[47,-21,-22,-23,-24,-25,-28,47,-24,-27,47,47,-30,-31,-32,-33,-40,-41,-42,-43,None,None,None,None,None,None,47,47,47,47,47,-26,-29,-21,47,-21,47,-21,47,-25,47,-25,-34,-37,-35,-38,-36,-39,47,-25,]),'EQ':([7,15,16,17,18,19,36,57,58,59,67,68,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,95,97,99,100,101,102,103,104,107,108,110,114,115,116,117,118,119,120,153,],[48,-21,-22,-23,-24,-25,-28,48,-24,-27,48,48,-30,-31,-32,-33,-40,-41,-42,-43,None,None,None,None,None,None,48,48,48,48,48,-26,-29,-21,48,-21,48,-21,48,-25,48,-25,-34,-37,-35,-38,-36,-39,48,-25,]),'GT':([7,15,16,17,18,19,36,57,58,59,67,68,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,95,97,99,100,101,102,103,104,107,108,110,114,115,116,117,118,119,120,153,],[49,-21,-22,-23,-24,-25,-28,49,-24,-27,49,49,-30,-31,-32,-33,-40,-41,-42,-43,None,None,None,None,None,None,49,49,49,49,49,-26,-29,-21,49,-21,49,-21,49,-25,49,-25,-34,-37,-35,-38,-36,-39,49,-25,]),'LT':([7,15,16,17,18,19,36,57,58,59,67,68,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,95,97,99,100,101,102,103,104,107,108,110,114,115,116,117,118,119,120,153,],[50,-21,-22,-23,-24,-25,-28,50,-24,-27,50,50,-30,-31,-32,-33,-40,-41,-42,-43,None,None,None,None,None,None,50,50,50,50,50,-26,-29,-21,50,-21,50,-21,50,-25,50,-25,-34,-37,-35,-38,-36,-39,50,-25,]),'=':([14,18,32,33,69,142,],[51,-76,-74,-75,106,-77,]),'ADDASSIGN':([14,18,32,33,142,],[52,-76,-74,-75,-77,]),'SUBASSIGN':([14,18,32,33,142,],[53,-76,-74,-75,-77,]),'MULASSIGN':([14,18,32,33,142,],[54,-76,-74,-75,-77,]),'DIVASSIGN':([14,18,32,33,142,],[55,-76,-74,-75,-77,]),')':([15,16,17,19,36,57,58,59,73,74,75,76,77,78,79,80,81,82,83,84,85,86,95,97,99,100,101,102,103,104,107,110,114,115,116,117,118,119,153,],[-21,-22,-23,-25,-28,95,-24,-27,-30,-31,-32,-33,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-26,-29,114,115,116,117,118,119,122,123,-34,-37,-35,-38,-36,-39,155,]),',':([15,16,17,19,36,58,59,61,62,66,67,73,74,75,76,77,78,79,80,81,82,83,84,85,86,92,93,94,95,96,97,112,113,114,115,116,117,118,119,120,],[-21,-22,-23,-25,-28,-24,-27,98,-56,105,-59,-30,-31,-32,-33,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-78,111,-79,-26,105,-29,-57,-55,-34,-37,-35,-38,-36,-39,-58,]),']':([15,16,17,19,36,58,59,61,62,67,73,74,75,76,77,78,79,80,81,82,83,84,85,86,92,94,95,96,97,112,113,114,115,116,117,118,119,120,124,],[-21,-22,-23,-25,-28,-24,-27,97,-56,-59,-30,-31,-32,-33,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-78,-79,-26,112,-29,-57,-55,-34,-37,-35,-38,-36,-39,-58,142,]),':':([92,94,121,],[-78,-79,125,]),'BREAK':([92,94,122,126,128,132,135,136,137,138,139,143,144,145,146,147,150,151,152,155,156,157,158,],[-78,-79,133,-65,-67,-16,-17,-18,-19,-20,133,133,-66,-15,133,-69,-64,-70,-68,133,-62,133,-63,]),'CONTINUE':([92,94,122,126,128,132,135,136,137,138,139,143,144,145,146,147,150,151,152,155,156,157,158,],[-78,-79,134,-65,-67,-16,-17,-18,-19,-20,134,134,-66,-15,134,-69,-64,-70,-68,134,-62,134,-63,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'instr_rec':([0,30,],[2,71,]),'instr':([0,2,30,71,123,149,],[3,34,3,34,141,154,]),'instr_colon':([0,2,30,71,122,123,139,143,146,149,155,157,],[4,4,4,4,131,4,131,131,131,4,131,131,]),'instr_coloff':([0,2,30,71,123,149,],[5,5,5,5,5,5,]),'assign':([0,2,30,71,122,123,139,143,146,149,155,157,],[6,6,6,6,6,6,6,6,6,6,6,6,]),'expr':([0,2,20,21,26,27,30,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,60,63,64,65,70,71,72,105,122,123,139,143,146,148,149,155,157,],[7,7,57,59,67,68,7,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,67,100,102,104,108,7,108,120,7,7,7,7,7,108,7,7,7,]),'print':([0,2,30,71,122,123,139,143,146,149,155,157,],[8,8,8,8,8,8,8,8,8,8,8,8,]),'return':([0,2,30,71,122,123,139,143,146,149,155,157,],[9,9,9,9,9,9,9,9,9,9,9,9,]),'for':([0,2,30,71,122,123,139,143,146,149,155,157,],[10,10,10,10,135,10,135,135,135,10,135,135,]),'while':([0,2,30,71,122,123,139,143,146,149,155,157,],[11,11,11,11,136,11,136,136,136,11,136,136,]),'block':([0,2,30,71,123,149,],[12,12,12,12,12,12,]),'if':([0,2,30,71,123,149,],[13,13,13,13,13,13,]),'id':([0,2,30,71,122,123,139,143,146,149,155,157,],[14,14,14,14,14,14,14,14,14,14,14,14,]),'expr_rel':([0,2,20,21,26,27,30,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,60,63,64,65,70,71,72,105,122,123,139,143,146,148,149,155,157,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,107,19,110,19,19,19,19,19,19,153,19,19,19,]),'id_2':([0,2,30,71,122,123,139,143,146,149,155,157,],[32,32,32,32,32,32,32,32,32,32,32,32,]),'ref':([0,2,30,71,122,123,139,143,146,149,155,157,],[33,33,33,33,33,33,33,33,33,33,33,33,]),'rows':([22,],[61,]),'row':([22,98,],[62,113,]),'cells':([26,60,],[66,96,]),'index':([56,106,111,125,],[93,121,124,143,]),'inside_loop':([122,139,143,146,155,157,],[126,147,150,152,156,158,]),'break_continue':([122,139,143,146,155,157,],[127,127,127,127,127,127,]),'instr_inside_loop':([122,139,143,146,155,157,],[128,128,128,128,128,128,]),'break':([122,139,143,146,155,157,],[129,129,129,129,129,129,]),'continue':([122,139,143,146,155,157,],[130,130,130,130,130,130,]),'instr_coloff_inside_loop':([122,139,143,146,155,157,],[132,132,132,132,132,132,]),'block_loop':([122,139,143,146,155,157,],[137,137,137,137,137,137,]),'if_inside_loop':([122,139,143,146,155,157,],[138,138,138,138,138,138,]),'inside_loop_rec':([139,],[146,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> instr_rec','program',1,'p_program','Mparser.py',26),
  ('program -> <empty>','program',0,'p_program','Mparser.py',27),
  ('instr_rec -> instr_rec instr','instr_rec',2,'p_instr_rec','Mparser.py',31),
  ('instr_rec -> instr','instr_rec',1,'p_instr_rec','Mparser.py',32),
  ('instr -> instr_colon ;','instr',2,'p_instr','Mparser.py',39),
  ('instr -> instr_coloff','instr',1,'p_instr','Mparser.py',40),
  ('instr_colon -> assign','instr_colon',1,'p_instr_colon','Mparser.py',44),
  ('instr_colon -> expr','instr_colon',1,'p_instr_colon','Mparser.py',45),
  ('instr_colon -> print','instr_colon',1,'p_instr_colon','Mparser.py',46),
  ('instr_colon -> return','instr_colon',1,'p_instr_colon','Mparser.py',47),
  ('instr_coloff -> for','instr_coloff',1,'p_instr_coloff','Mparser.py',51),
  ('instr_coloff -> while','instr_coloff',1,'p_instr_coloff','Mparser.py',52),
  ('instr_coloff -> block','instr_coloff',1,'p_instr_coloff','Mparser.py',53),
  ('instr_coloff -> if','instr_coloff',1,'p_instr_coloff','Mparser.py',54),
  ('instr_inside_loop -> instr_colon ;','instr_inside_loop',2,'p_instr_inside_loop','Mparser.py',58),
  ('instr_inside_loop -> instr_coloff_inside_loop','instr_inside_loop',1,'p_instr_inside_loop','Mparser.py',59),
  ('instr_coloff_inside_loop -> for','instr_coloff_inside_loop',1,'p_instr_coloff_inside_loop','Mparser.py',63),
  ('instr_coloff_inside_loop -> while','instr_coloff_inside_loop',1,'p_instr_coloff_inside_loop','Mparser.py',64),
  ('instr_coloff_inside_loop -> block_loop','instr_coloff_inside_loop',1,'p_instr_coloff_inside_loop','Mparser.py',65),
  ('instr_coloff_inside_loop -> if_inside_loop','instr_coloff_inside_loop',1,'p_instr_coloff_inside_loop','Mparser.py',66),
  ('expr -> INTNUM','expr',1,'p_expr_1','Mparser.py',72),
  ('expr -> FLOATNUM','expr',1,'p_expr_2','Mparser.py',76),
  ('expr -> STRING','expr',1,'p_expr_3','Mparser.py',80),
  ('expr -> ID','expr',1,'p_expr_4','Mparser.py',84),
  ('expr -> expr_rel','expr',1,'p_expr_5','Mparser.py',88),
  ('expr -> ( expr )','expr',3,'p_expr_6','Mparser.py',92),
  ('expr -> - expr','expr',2,'p_expr_7','Mparser.py',96),
  ("expr -> expr '",'expr',2,'p_expr_8','Mparser.py',100),
  ('expr -> [ rows ]','expr',3,'p_expr_9','Mparser.py',104),
  ('expr -> expr + expr','expr',3,'p_expr_bin','Mparser.py',108),
  ('expr -> expr - expr','expr',3,'p_expr_bin','Mparser.py',109),
  ('expr -> expr / expr','expr',3,'p_expr_bin','Mparser.py',110),
  ('expr -> expr * expr','expr',3,'p_expr_bin','Mparser.py',111),
  ('expr -> ZEROS ( INTNUM )','expr',4,'p_expr_matrix','Mparser.py',115),
  ('expr -> ONES ( INTNUM )','expr',4,'p_expr_matrix','Mparser.py',116),
  ('expr -> EYE ( INTNUM )','expr',4,'p_expr_matrix','Mparser.py',117),
  ('expr -> ZEROS ( expr )','expr',4,'p_expr_matrix_with_expr','Mparser.py',122),
  ('expr -> ONES ( expr )','expr',4,'p_expr_matrix_with_expr','Mparser.py',123),
  ('expr -> EYE ( expr )','expr',4,'p_expr_matrix_with_expr','Mparser.py',124),
  ('expr -> expr DOTADD expr','expr',3,'p_expr_dot','Mparser.py',128),
  ('expr -> expr DOTSUB expr','expr',3,'p_expr_dot','Mparser.py',129),
  ('expr -> expr DOTDIV expr','expr',3,'p_expr_dot','Mparser.py',130),
  ('expr -> expr DOTMUL expr','expr',3,'p_expr_dot','Mparser.py',131),
  ('expr_rel -> expr GTE expr','expr_rel',3,'p_expr_rel','Mparser.py',135),
  ('expr_rel -> expr LTE expr','expr_rel',3,'p_expr_rel','Mparser.py',136),
  ('expr_rel -> expr NEQ expr','expr_rel',3,'p_expr_rel','Mparser.py',137),
  ('expr_rel -> expr EQ expr','expr_rel',3,'p_expr_rel','Mparser.py',138),
  ('expr_rel -> expr GT expr','expr_rel',3,'p_expr_rel','Mparser.py',139),
  ('expr_rel -> expr LT expr','expr_rel',3,'p_expr_rel','Mparser.py',140),
  ('assign -> id = expr','assign',3,'p_assign','Mparser.py',144),
  ('assign -> id ADDASSIGN expr','assign',3,'p_assign','Mparser.py',145),
  ('assign -> id SUBASSIGN expr','assign',3,'p_assign','Mparser.py',146),
  ('assign -> id MULASSIGN expr','assign',3,'p_assign','Mparser.py',147),
  ('assign -> id DIVASSIGN expr','assign',3,'p_assign','Mparser.py',148),
  ('rows -> rows , row','rows',3,'p_rows','Mparser.py',153),
  ('rows -> row','rows',1,'p_rows','Mparser.py',154),
  ('row -> [ cells ]','row',3,'p_row','Mparser.py',161),
  ('cells -> cells , expr','cells',3,'p_cells','Mparser.py',165),
  ('cells -> expr','cells',1,'p_cells','Mparser.py',166),
  ('if -> IF ( expr_rel ) instr','if',5,'p_if','Mparser.py',175),
  ('if -> IF ( expr_rel ) instr ELSE instr','if',7,'p_if','Mparser.py',176),
  ('if_inside_loop -> IF ( expr_rel ) inside_loop','if_inside_loop',5,'p_if_inside_loop','Mparser.py',183),
  ('if_inside_loop -> IF ( expr_rel ) inside_loop ELSE inside_loop','if_inside_loop',7,'p_if_inside_loop','Mparser.py',184),
  ('for -> FOR ID = index : index inside_loop','for',7,'p_for','Mparser.py',191),
  ('while -> WHILE ( expr_rel ) inside_loop','while',5,'p_while','Mparser.py',195),
  ('inside_loop -> break_continue ;','inside_loop',2,'p_inside_loop','Mparser.py',199),
  ('inside_loop -> instr_inside_loop','inside_loop',1,'p_inside_loop','Mparser.py',200),
  ('inside_loop_rec -> inside_loop_rec inside_loop','inside_loop_rec',2,'p_inside_loop_rec','Mparser.py',204),
  ('inside_loop_rec -> inside_loop','inside_loop_rec',1,'p_inside_loop_rec','Mparser.py',205),
  ('block_loop -> { inside_loop_rec }','block_loop',3,'p_block_loop','Mparser.py',212),
  ('block -> { instr_rec }','block',3,'p_block','Mparser.py',216),
  ('print -> PRINT cells','print',2,'p_print','Mparser.py',222),
  ('return -> RETURN expr','return',2,'p_return','Mparser.py',226),
  ('id -> id_2','id',1,'p_id','Mparser.py',230),
  ('id -> ref','id',1,'p_id','Mparser.py',231),
  ('id_2 -> ID','id_2',1,'p_id_2','Mparser.py',235),
  ('ref -> ID [ index , index ]','ref',6,'p_ref','Mparser.py',239),
  ('index -> ID','index',1,'p_index','Mparser.py',243),
  ('index -> INTNUM','index',1,'p_index','Mparser.py',244),
  ('break_continue -> break','break_continue',1,'p_break_continue','Mparser.py',251),
  ('break_continue -> continue','break_continue',1,'p_break_continue','Mparser.py',252),
  ('break -> BREAK','break',1,'p_break','Mparser.py',256),
  ('continue -> CONTINUE','continue',1,'p_continue','Mparser.py',260),
]
