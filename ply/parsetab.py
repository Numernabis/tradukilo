
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = '78F085F26755EBDCFB4BCB2A032CE9E9'
    
_lr_action_items = {'DOTSUB':([9,12,14,20,23,28,36,37,53,60,62,71,74,75,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,105,107,110,111,112,113,145,],[-23,-25,45,-22,-24,-21,-24,45,-28,45,45,-27,-25,45,45,45,45,45,45,-38,-33,-32,45,-39,45,-31,45,45,-30,-40,-37,45,45,-26,-29,-25,-36,45,-34,-35,-25,]),'FOR':([0,6,10,18,19,22,24,26,29,39,69,70,77,102,103,109,117,122,123,125,126,127,128,129,133,135,136,137,139,140,141,143,144,146,147,148,149,150,151,152,],[1,1,-12,-4,-11,-6,-14,-13,1,1,-3,-5,-68,-76,-75,1,1,-18,-64,1,-62,-17,-19,-16,-20,-58,1,-63,1,-66,-15,1,-61,-67,-65,-57,1,-60,1,-59,]),'WHILE':([0,6,10,18,19,22,24,26,29,39,69,70,77,102,103,109,117,122,123,125,126,127,128,129,133,135,136,137,139,140,141,143,144,146,147,148,149,150,151,152,],[2,2,-12,-4,-11,-6,-14,-13,2,2,-3,-5,-68,-76,-75,2,2,-18,-64,2,-62,-17,-19,-16,-20,-58,2,-63,2,-66,-15,2,-61,-67,-65,-57,2,-60,2,-59,]),'RETURN':([0,6,10,18,19,22,24,26,29,39,69,70,77,102,103,109,117,122,123,125,126,127,128,129,133,135,136,137,139,140,141,143,144,146,147,148,149,150,151,152,],[3,3,-12,-4,-11,-6,-14,-13,3,3,-3,-5,-68,-76,-75,3,3,-18,-64,3,-62,-17,-19,-16,-20,-58,3,-63,3,-66,-15,3,-61,-67,-65,-57,3,-60,3,-59,]),'[':([0,3,6,10,15,16,18,19,22,23,24,25,26,29,31,35,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,66,69,70,72,77,98,102,103,106,109,117,122,123,125,126,127,128,129,133,135,136,137,138,139,140,141,143,144,146,147,148,149,150,151,152,],[25,25,25,-12,25,25,-4,-11,-6,65,-14,66,-13,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-3,-5,25,-68,25,-76,-75,66,25,25,-18,-64,25,-62,-17,-19,-16,-20,-58,25,-63,25,25,-66,-15,25,-61,-67,-65,-57,25,-60,25,-59,]),'EYE':([0,3,6,10,15,16,18,19,22,24,26,29,31,35,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,66,69,70,72,77,98,102,103,109,117,122,123,125,126,127,128,129,133,135,136,137,138,139,140,141,143,144,146,147,148,149,150,151,152,],[4,4,4,-12,4,4,-4,-11,-6,-14,-13,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,-3,-5,4,-68,4,-76,-75,4,4,-18,-64,4,-62,-17,-19,-16,-20,-58,4,-63,4,4,-66,-15,4,-61,-67,-65,-57,4,-60,4,-59,]),'$end':([0,10,18,19,22,24,26,27,29,69,70,77,122,123,126,127,128,129,133,135,137,141,144,146,148,150,152,],[-2,-12,-4,-11,-6,-14,-13,0,-1,-3,-5,-68,-18,-64,-62,-17,-19,-16,-20,-58,-63,-15,-61,-67,-57,-60,-59,]),'{':([0,6,10,18,19,22,24,26,29,39,69,70,77,102,103,109,117,122,123,125,126,127,128,129,133,135,136,137,139,140,141,143,144,146,147,148,149,150,151,152,],[6,6,-12,-4,-11,-6,-14,-13,6,6,-3,-5,-68,-76,-75,125,6,-18,-64,125,-62,-17,-19,-16,-20,-58,125,-63,125,-66,-15,6,-61,-67,-65,-57,125,-60,125,-59,]),'MULASSIGN':([5,7,11,23,142,],[-72,-71,42,-73,-74,]),'LTE':([9,12,14,20,23,28,36,37,53,60,62,71,74,75,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,105,107,110,111,112,113,145,],[-23,-25,58,-22,-24,-21,-24,58,-28,58,58,-27,-25,58,58,58,58,58,58,-38,-33,-32,None,-39,None,-31,None,None,-30,-40,-37,None,None,-26,-29,-25,-36,58,-34,-35,-25,]),':':([102,103,108,],[-76,-75,118,]),'BREAK':([102,103,109,122,123,125,126,127,128,129,133,136,137,139,140,141,144,146,147,149,150,151,152,],[-76,-75,121,-18,-64,121,-62,-17,-19,-16,-20,121,-63,121,-66,-15,-61,-67,-65,121,-60,121,-59,]),')':([9,12,20,28,36,53,60,71,74,76,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,105,107,110,112,113,145,],[-23,-25,-22,-21,-24,-28,97,-27,109,110,-38,-33,-32,-45,-39,-44,-31,-43,-41,-30,-40,-37,-42,-46,-26,112,113,-29,117,-36,-34,-35,149,]),'DOTMUL':([9,12,14,20,23,28,36,37,53,60,62,71,74,75,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,105,107,110,111,112,113,145,],[-23,-25,56,-22,-24,-21,-24,56,-28,56,56,-27,-25,56,56,56,56,56,56,56,-33,-32,56,-39,56,56,56,56,56,-40,56,56,56,-26,-29,-25,-36,56,-34,-35,-25,]),'DOTADD':([9,12,14,20,23,28,36,37,53,60,62,71,74,75,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,105,107,110,111,112,113,145,],[-23,-25,57,-22,-24,-21,-24,57,-28,57,57,-27,-25,57,57,57,57,57,57,-38,-33,-32,57,-39,57,-31,57,57,-30,-40,-37,57,57,-26,-29,-25,-36,57,-34,-35,-25,]),'}':([10,18,19,22,24,26,39,69,70,77,122,123,126,127,128,129,133,135,137,139,140,141,144,146,147,148,150,152,],[-12,-4,-11,-6,-14,-13,77,-3,-5,-68,-18,-64,-62,-17,-19,-16,-20,-58,-63,146,-66,-15,-61,-67,-65,-57,-60,-59,]),'(':([0,2,3,4,6,10,15,16,17,18,19,21,22,24,26,29,31,32,35,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,66,69,70,72,77,98,102,103,109,117,122,123,124,125,126,127,128,129,133,135,136,137,138,139,140,141,143,144,146,147,148,149,150,151,152,],[15,35,15,38,15,-12,15,15,63,-4,-11,64,-6,-14,-13,15,15,72,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-3,-5,15,-68,15,-76,-75,15,15,-18,-64,138,15,-62,-17,-19,-16,-20,-58,15,-63,15,15,-66,-15,15,-61,-67,-65,-57,15,-60,15,-59,]),'SUBASSIGN':([5,7,11,23,142,],[-72,-71,40,-73,-74,]),"'":([9,12,14,20,23,28,36,37,53,60,62,71,74,75,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,105,107,110,111,112,113,145,],[-23,-25,53,-22,-24,-21,-24,53,-28,53,53,53,-25,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-26,-29,-25,-36,53,-34,-35,-25,]),'PRINT':([0,6,10,18,19,22,24,26,29,39,69,70,77,102,103,109,117,122,123,125,126,127,128,129,133,135,136,137,139,140,141,143,144,146,147,148,149,150,151,152,],[16,16,-12,-4,-11,-6,-14,-13,16,16,-3,-5,-68,-76,-75,16,16,-18,-64,16,-62,-17,-19,-16,-20,-58,16,-63,16,-66,-15,16,-61,-67,-65,-57,16,-60,16,-59,]),'ZEROS':([0,3,6,10,15,16,18,19,22,24,26,29,31,35,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,66,69,70,72,77,98,102,103,109,117,122,123,125,126,127,128,129,133,135,136,137,138,139,140,141,143,144,146,147,148,149,150,151,152,],[17,17,17,-12,17,17,-4,-11,-6,-14,-13,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-3,-5,17,-68,17,-76,-75,17,17,-18,-64,17,-62,-17,-19,-16,-20,-58,17,-63,17,17,-66,-15,17,-61,-67,-65,-57,17,-60,17,-59,]),'INTNUM':([0,3,6,10,15,16,18,19,22,24,26,29,31,35,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,63,64,65,66,69,70,72,73,77,98,102,103,109,114,117,118,122,123,125,126,127,128,129,133,135,136,137,138,139,140,141,143,144,146,147,148,149,150,151,152,],[28,28,28,-12,28,28,-4,-11,-6,-14,-13,28,28,28,76,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,99,100,102,28,-3,-5,28,102,-68,28,-76,-75,28,102,28,102,-18,-64,28,-62,-17,-19,-16,-20,-58,28,-63,28,28,-66,-15,28,-61,-67,-65,-57,28,-60,28,-59,]),'FLOATNUM':([0,3,6,10,15,16,18,19,22,24,26,29,31,35,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,66,69,70,72,77,98,102,103,109,117,122,123,125,126,127,128,129,133,135,136,137,138,139,140,141,143,144,146,147,148,149,150,151,152,],[20,20,20,-12,20,20,-4,-11,-6,-14,-13,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-3,-5,20,-68,20,-76,-75,20,20,-18,-64,20,-62,-17,-19,-16,-20,-58,20,-63,20,20,-66,-15,20,-61,-67,-65,-57,20,-60,20,-59,]),'ONES':([0,3,6,10,15,16,18,19,22,24,26,29,31,35,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,66,69,70,72,77,98,102,103,109,117,122,123,125,126,127,128,129,133,135,136,137,138,139,140,141,143,144,146,147,148,149,150,151,152,],[21,21,21,-12,21,21,-4,-11,-6,-14,-13,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-3,-5,21,-68,21,-76,-75,21,21,-18,-64,21,-62,-17,-19,-16,-20,-58,21,-63,21,21,-66,-15,21,-61,-67,-65,-57,21,-60,21,-59,]),'STRING':([0,3,6,10,15,16,18,19,22,24,26,29,31,35,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,66,69,70,72,77,98,102,103,109,117,122,123,125,126,127,128,129,133,135,136,137,138,139,140,141,143,144,146,147,148,149,150,151,152,],[9,9,9,-12,9,9,-4,-11,-6,-14,-13,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,-3,-5,9,-68,9,-76,-75,9,9,-18,-64,9,-62,-17,-19,-16,-20,-58,9,-63,9,9,-66,-15,9,-61,-67,-65,-57,9,-60,9,-59,]),'NEQ':([9,12,14,20,23,28,36,37,53,60,62,71,74,75,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,105,107,110,111,112,113,145,],[-23,-25,52,-22,-24,-21,-24,52,-28,52,52,-27,-25,52,52,52,52,52,52,-38,-33,-32,None,-39,None,-31,None,None,-30,-40,-37,None,None,-26,-29,-25,-36,52,-34,-35,-25,]),']':([9,12,20,28,36,53,62,67,68,71,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,102,103,104,105,110,111,112,113,115,116,134,],[-23,-25,-22,-21,-24,-28,-56,-53,105,-27,-38,-33,-32,-45,-39,-44,-31,-43,-41,-30,-40,-37,-42,-46,-26,-76,-75,115,-29,-36,-55,-34,-35,-54,-52,142,]),'DOTDIV':([9,12,14,20,23,28,36,37,53,60,62,71,74,75,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,105,107,110,111,112,113,145,],[-23,-25,49,-22,-24,-21,-24,49,-28,49,49,-27,-25,49,49,49,49,49,49,49,-33,-32,49,-39,49,49,49,49,49,-40,49,49,49,-26,-29,-25,-36,49,-34,-35,-25,]),'EQ':([9,12,14,20,23,28,36,37,53,60,62,71,74,75,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,105,107,110,111,112,113,145,],[-23,-25,50,-22,-24,-21,-24,50,-28,50,50,-27,-25,50,50,50,50,50,50,-38,-33,-32,None,-39,None,-31,None,None,-30,-40,-37,None,None,-26,-29,-25,-36,50,-34,-35,-25,]),'ID':([0,1,3,6,10,15,16,18,19,22,24,26,29,31,35,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,65,66,69,70,72,73,77,98,102,103,109,114,117,118,122,123,125,126,127,128,129,133,135,136,137,138,139,140,141,143,144,146,147,148,149,150,151,152,],[23,34,36,23,-12,36,36,-4,-11,-6,-14,-13,23,36,36,23,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,103,36,-3,-5,36,103,-68,36,-76,-75,23,103,23,103,-18,-64,23,-62,-17,-19,-16,-20,-58,23,-63,36,23,-66,-15,23,-61,-67,-65,-57,23,-60,23,-59,]),',':([9,12,20,28,36,53,61,62,67,68,71,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,101,102,103,104,105,110,111,112,113,115,116,],[-23,-25,-22,-21,-24,-28,98,-56,-53,106,-27,-38,-33,-32,-45,-39,-44,-31,-43,-41,-30,-40,-37,-42,-46,-26,114,-76,-75,98,-29,-36,-55,-34,-35,-54,-52,]),'ADDASSIGN':([5,7,11,23,142,],[-72,-71,43,-73,-74,]),'DIVASSIGN':([5,7,11,23,142,],[-72,-71,44,-73,-74,]),'*':([9,12,14,20,23,28,36,37,53,60,62,71,74,75,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,105,107,110,111,112,113,145,],[-23,-25,46,-22,-24,-21,-24,46,-28,46,46,-27,-25,46,46,46,46,46,46,46,-33,-32,46,-39,46,46,46,46,46,-40,46,46,46,-26,-29,-25,-36,46,-34,-35,-25,]),'CONTINUE':([102,103,109,122,123,125,126,127,128,129,133,136,137,139,140,141,144,146,147,149,150,151,152,],[-76,-75,131,-18,-64,131,-62,-17,-19,-16,-20,131,-63,131,-66,-15,-61,-67,-65,131,-60,131,-59,]),'LT':([9,12,14,20,23,28,36,37,53,60,62,71,74,75,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,105,107,110,111,112,113,145,],[-23,-25,59,-22,-24,-21,-24,59,-28,59,59,-27,-25,59,59,59,59,59,59,-38,-33,-32,None,-39,None,-31,None,None,-30,-40,-37,None,None,-26,-29,-25,-36,59,-34,-35,-25,]),'GT':([9,12,14,20,23,28,36,37,53,60,62,71,74,75,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,105,107,110,111,112,113,145,],[-23,-25,48,-22,-24,-21,-24,48,-28,48,48,-27,-25,48,48,48,48,48,48,-38,-33,-32,None,-39,None,-31,None,None,-30,-40,-37,None,None,-26,-29,-25,-36,48,-34,-35,-25,]),'-':([0,3,6,9,10,12,14,15,16,18,19,20,22,23,24,26,28,29,31,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,66,69,70,71,72,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,102,103,105,107,109,110,111,112,113,117,122,123,125,126,127,128,129,133,135,136,137,138,139,140,141,143,144,145,146,147,148,149,150,151,152,],[31,31,31,-23,-12,-25,51,31,31,-4,-11,-22,-6,-24,-14,-13,-21,31,31,31,-24,51,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-28,31,31,31,31,31,31,51,51,31,-3,-5,-27,31,-25,51,-68,51,51,51,51,51,-38,-33,-32,51,-39,51,-31,51,51,-30,-40,-37,51,51,-26,31,-76,-75,-29,-25,31,-36,51,-34,-35,31,-18,-64,31,-62,-17,-19,-16,-20,-58,31,-63,31,31,-66,-15,31,-61,-25,-67,-65,-57,31,-60,31,-59,]),'/':([9,12,14,20,23,28,36,37,53,60,62,71,74,75,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,105,107,110,111,112,113,145,],[-23,-25,47,-22,-24,-21,-24,47,-28,47,47,-27,-25,47,47,47,47,47,47,47,-33,-32,47,-39,47,47,47,47,47,-40,47,47,47,-26,-29,-25,-36,47,-34,-35,-25,]),'IF':([0,6,10,18,19,22,24,26,29,39,69,70,77,102,103,109,117,122,123,125,126,127,128,129,133,135,136,137,139,140,141,143,144,146,147,148,149,150,151,152,],[32,32,-12,-4,-11,-6,-14,-13,32,32,-3,-5,-68,-76,-75,124,32,-18,-64,124,-62,-17,-19,-16,-20,-58,124,-63,124,-66,-15,32,-61,-67,-65,-57,124,-60,124,-59,]),'=':([5,7,11,23,34,142,],[-72,-71,41,-73,73,-74,]),'GTE':([9,12,14,20,23,28,36,37,53,60,62,71,74,75,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,105,107,110,111,112,113,145,],[-23,-25,54,-22,-24,-21,-24,54,-28,54,54,-27,-25,54,54,54,54,54,54,-38,-33,-32,None,-39,None,-31,None,None,-30,-40,-37,None,None,-26,-29,-25,-36,54,-34,-35,-25,]),';':([8,9,12,13,14,20,23,28,30,33,36,37,53,61,62,71,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,105,110,111,112,113,119,120,121,130,131,132,],[-9,-23,-25,-10,-8,-22,-24,-21,70,-7,-24,-70,-28,-69,-56,-27,-49,-47,-50,-48,-51,-38,-33,-32,-45,-39,-44,-31,-43,-41,-30,-40,-37,-42,-46,-26,-29,-36,-55,-34,-35,137,-77,-79,-78,-80,141,]),'+':([9,12,14,20,23,28,36,37,53,60,62,71,74,75,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,105,107,110,111,112,113,145,],[-23,-25,55,-22,-24,-21,-24,55,-28,55,55,-27,-25,55,55,55,55,55,55,-38,-33,-32,55,-39,55,-31,55,55,-30,-40,-37,55,55,-26,-29,-25,-36,55,-34,-35,-25,]),'ELSE':([10,19,22,24,26,70,77,122,123,126,127,128,129,133,135,137,141,144,146,148,150,152,],[-12,-11,-6,-14,-13,-5,-68,-18,-64,-62,-17,-19,-16,-20,143,-63,-15,-61,-67,-57,151,-59,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'break_continue':([109,125,136,139,149,151,],[119,119,119,119,119,119,]),'assign':([0,6,29,39,109,117,125,136,139,143,149,151,],[33,33,33,33,33,33,33,33,33,33,33,33,]),'instr_coloff':([0,6,29,39,117,143,],[22,22,22,22,22,22,]),'instr':([0,6,29,39,117,143,],[18,18,69,69,135,148,]),'if':([0,6,29,39,117,143,],[24,24,24,24,24,24,]),'block_loop':([109,125,136,139,149,151,],[128,128,128,128,128,128,]),'continue':([109,125,136,139,149,151,],[130,130,130,130,130,130,]),'row':([25,106,],[67,116,]),'ref':([0,6,29,39,109,117,125,136,139,143,149,151,],[5,5,5,5,5,5,5,5,5,5,5,5,]),'print':([0,6,29,39,109,117,125,136,139,143,149,151,],[8,8,8,8,8,8,8,8,8,8,8,8,]),'id_2':([0,6,29,39,109,117,125,136,139,143,149,151,],[7,7,7,7,7,7,7,7,7,7,7,7,]),'inside_loop_rec':([125,],[139,]),'program':([0,],[27,]),'break':([109,125,136,139,149,151,],[120,120,120,120,120,120,]),'cells':([16,66,],[61,104,]),'while':([0,6,29,39,109,117,125,136,139,143,149,151,],[10,10,10,10,122,10,122,122,122,10,122,122,]),'expr_rel':([0,3,6,15,16,29,31,35,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,66,72,98,109,117,125,136,138,139,143,149,151,],[12,12,12,12,12,12,12,74,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,107,12,12,12,12,12,145,12,12,12,12,]),'block':([0,6,29,39,117,143,],[26,26,26,26,26,26,]),'index':([65,73,114,118,],[101,108,134,136,]),'instr_inside_loop':([109,125,136,139,149,151,],[123,123,123,123,123,123,]),'for':([0,6,29,39,109,117,125,136,139,143,149,151,],[19,19,19,19,127,19,127,127,127,19,127,127,]),'instr_colon':([0,6,29,39,109,117,125,136,139,143,149,151,],[30,30,30,30,132,30,132,132,132,30,132,132,]),'instr_coloff_inside_loop':([109,125,136,139,149,151,],[129,129,129,129,129,129,]),'return':([0,6,29,39,109,117,125,136,139,143,149,151,],[13,13,13,13,13,13,13,13,13,13,13,13,]),'expr':([0,3,6,15,16,29,31,35,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,66,72,98,109,117,125,136,138,139,143,149,151,],[14,37,14,60,62,14,71,75,14,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,62,75,111,14,14,14,14,75,14,14,14,14,]),'if_inside_loop':([109,125,136,139,149,151,],[133,133,133,133,133,133,]),'id':([0,6,29,39,109,117,125,136,139,143,149,151,],[11,11,11,11,11,11,11,11,11,11,11,11,]),'inside_loop':([109,125,136,139,149,151,],[126,140,144,147,150,152,]),'instr_rec':([0,6,],[29,39,]),'rows':([25,],[68,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> instr_rec','program',1,'p_program','Mparser.py',24),
  ('program -> <empty>','program',0,'p_program','Mparser.py',25),
  ('instr_rec -> instr_rec instr','instr_rec',2,'p_instr_rec','Mparser.py',29),
  ('instr_rec -> instr','instr_rec',1,'p_instr_rec','Mparser.py',30),
  ('instr -> instr_colon ;','instr',2,'p_instr','Mparser.py',37),
  ('instr -> instr_coloff','instr',1,'p_instr','Mparser.py',38),
  ('instr_colon -> assign','instr_colon',1,'p_instr_colon','Mparser.py',42),
  ('instr_colon -> expr','instr_colon',1,'p_instr_colon','Mparser.py',43),
  ('instr_colon -> print','instr_colon',1,'p_instr_colon','Mparser.py',44),
  ('instr_colon -> return','instr_colon',1,'p_instr_colon','Mparser.py',45),
  ('instr_coloff -> for','instr_coloff',1,'p_instr_coloff','Mparser.py',49),
  ('instr_coloff -> while','instr_coloff',1,'p_instr_coloff','Mparser.py',50),
  ('instr_coloff -> block','instr_coloff',1,'p_instr_coloff','Mparser.py',51),
  ('instr_coloff -> if','instr_coloff',1,'p_instr_coloff','Mparser.py',52),
  ('instr_inside_loop -> instr_colon ;','instr_inside_loop',2,'p_instr_inside_loop','Mparser.py',56),
  ('instr_inside_loop -> instr_coloff_inside_loop','instr_inside_loop',1,'p_instr_inside_loop','Mparser.py',57),
  ('instr_coloff_inside_loop -> for','instr_coloff_inside_loop',1,'p_instr_coloff_inside_loop','Mparser.py',61),
  ('instr_coloff_inside_loop -> while','instr_coloff_inside_loop',1,'p_instr_coloff_inside_loop','Mparser.py',62),
  ('instr_coloff_inside_loop -> block_loop','instr_coloff_inside_loop',1,'p_instr_coloff_inside_loop','Mparser.py',63),
  ('instr_coloff_inside_loop -> if_inside_loop','instr_coloff_inside_loop',1,'p_instr_coloff_inside_loop','Mparser.py',64),
  ('expr -> INTNUM','expr',1,'p_expr_1','Mparser.py',70),
  ('expr -> FLOATNUM','expr',1,'p_expr_2','Mparser.py',74),
  ('expr -> STRING','expr',1,'p_expr_3','Mparser.py',78),
  ('expr -> ID','expr',1,'p_expr_4','Mparser.py',82),
  ('expr -> expr_rel','expr',1,'p_expr_5','Mparser.py',86),
  ('expr -> ( expr )','expr',3,'p_expr_6','Mparser.py',90),
  ('expr -> - expr','expr',2,'p_expr_7','Mparser.py',94),
  ("expr -> expr '",'expr',2,'p_expr_8','Mparser.py',98),
  ('expr -> [ rows ]','expr',3,'p_expr_9','Mparser.py',102),
  ('expr -> expr + expr','expr',3,'p_expr_bin','Mparser.py',106),
  ('expr -> expr - expr','expr',3,'p_expr_bin','Mparser.py',107),
  ('expr -> expr / expr','expr',3,'p_expr_bin','Mparser.py',108),
  ('expr -> expr * expr','expr',3,'p_expr_bin','Mparser.py',109),
  ('expr -> ZEROS ( INTNUM )','expr',4,'p_expr_matrix','Mparser.py',113),
  ('expr -> ONES ( INTNUM )','expr',4,'p_expr_matrix','Mparser.py',114),
  ('expr -> EYE ( INTNUM )','expr',4,'p_expr_matrix','Mparser.py',115),
  ('expr -> expr DOTADD expr','expr',3,'p_expr_dot','Mparser.py',119),
  ('expr -> expr DOTSUB expr','expr',3,'p_expr_dot','Mparser.py',120),
  ('expr -> expr DOTDIV expr','expr',3,'p_expr_dot','Mparser.py',121),
  ('expr -> expr DOTMUL expr','expr',3,'p_expr_dot','Mparser.py',122),
  ('expr_rel -> expr GTE expr','expr_rel',3,'p_expr_rel','Mparser.py',126),
  ('expr_rel -> expr LTE expr','expr_rel',3,'p_expr_rel','Mparser.py',127),
  ('expr_rel -> expr NEQ expr','expr_rel',3,'p_expr_rel','Mparser.py',128),
  ('expr_rel -> expr EQ expr','expr_rel',3,'p_expr_rel','Mparser.py',129),
  ('expr_rel -> expr GT expr','expr_rel',3,'p_expr_rel','Mparser.py',130),
  ('expr_rel -> expr LT expr','expr_rel',3,'p_expr_rel','Mparser.py',131),
  ('assign -> id = expr','assign',3,'p_assign','Mparser.py',135),
  ('assign -> id ADDASSIGN expr','assign',3,'p_assign','Mparser.py',136),
  ('assign -> id SUBASSIGN expr','assign',3,'p_assign','Mparser.py',137),
  ('assign -> id MULASSIGN expr','assign',3,'p_assign','Mparser.py',138),
  ('assign -> id DIVASSIGN expr','assign',3,'p_assign','Mparser.py',139),
  ('rows -> rows , row','rows',3,'p_rows','Mparser.py',144),
  ('rows -> row','rows',1,'p_rows','Mparser.py',145),
  ('row -> [ cells ]','row',3,'p_row','Mparser.py',152),
  ('cells -> cells , expr','cells',3,'p_cells','Mparser.py',156),
  ('cells -> expr','cells',1,'p_cells','Mparser.py',157),
  ('if -> IF ( expr_rel ) instr ELSE instr','if',7,'p_if','Mparser.py',166),
  ('if -> IF ( expr_rel ) instr','if',5,'p_if','Mparser.py',167),
  ('if_inside_loop -> IF ( expr_rel ) inside_loop ELSE inside_loop','if_inside_loop',7,'p_if_inside_loop','Mparser.py',174),
  ('if_inside_loop -> IF ( expr_rel ) inside_loop','if_inside_loop',5,'p_if_inside_loop','Mparser.py',175),
  ('for -> FOR ID = index : index inside_loop','for',7,'p_for','Mparser.py',182),
  ('while -> WHILE ( expr_rel ) inside_loop','while',5,'p_while','Mparser.py',186),
  ('inside_loop -> break_continue ;','inside_loop',2,'p_inside_loop','Mparser.py',190),
  ('inside_loop -> instr_inside_loop','inside_loop',1,'p_inside_loop','Mparser.py',191),
  ('inside_loop_rec -> inside_loop_rec inside_loop','inside_loop_rec',2,'p_inside_loop_rec','Mparser.py',195),
  ('inside_loop_rec -> inside_loop','inside_loop_rec',1,'p_inside_loop_rec','Mparser.py',196),
  ('block_loop -> { inside_loop_rec }','block_loop',3,'p_block_loop','Mparser.py',203),
  ('block -> { instr_rec }','block',3,'p_block','Mparser.py',207),
  ('print -> PRINT cells','print',2,'p_print','Mparser.py',213),
  ('return -> RETURN expr','return',2,'p_return','Mparser.py',217),
  ('id -> id_2','id',1,'p_id','Mparser.py',221),
  ('id -> ref','id',1,'p_id','Mparser.py',222),
  ('id_2 -> ID','id_2',1,'p_id_2','Mparser.py',226),
  ('ref -> ID [ index , index ]','ref',6,'p_ref','Mparser.py',230),
  ('index -> ID','index',1,'p_index','Mparser.py',234),
  ('index -> INTNUM','index',1,'p_index','Mparser.py',235),
  ('break_continue -> break','break_continue',1,'p_break_continue','Mparser.py',242),
  ('break_continue -> continue','break_continue',1,'p_break_continue','Mparser.py',243),
  ('break -> BREAK','break',1,'p_break','Mparser.py',247),
  ('continue -> CONTINUE','continue',1,'p_continue','Mparser.py',251),
]
