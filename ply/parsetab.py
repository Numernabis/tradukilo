
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = '7EBF6EE8A03507A751FA505E7BBB6E10'
    
_lr_action_items = {'SUBASSIGN':([6,23,30,139,],[-71,46,-70,-72,]),']':([2,18,24,37,39,41,43,52,62,71,72,82,83,84,85,86,87,88,89,90,91,93,103,104,105,106,107,108,131,],[-26,-25,-27,-47,72,-28,-37,-68,-38,104,-39,-32,-21,-35,-33,-34,-24,-23,-22,-36,-74,-73,-31,-48,-46,-29,-30,-67,139,]),'DOTMUL':([2,18,24,28,30,40,41,43,52,62,63,67,72,75,76,77,78,79,82,83,84,85,86,87,88,89,90,103,106,107,108,111,112,113,114,115,116,],[-26,-25,-27,56,-28,56,-28,-37,56,-38,56,56,-39,56,56,56,56,56,56,56,-35,56,-34,-24,-23,56,-36,-31,-29,-30,56,56,56,56,56,56,56,]),'FLOATNUM':([0,1,4,5,11,13,14,19,21,22,26,27,29,33,34,35,38,42,45,46,47,48,49,50,54,55,56,57,58,59,60,61,66,81,91,93,95,96,97,98,99,100,101,102,117,118,119,121,122,124,125,126,130,132,133,134,135,136,137,138,140,142,143,144,145,146,147,148,],[2,-12,-4,2,2,-14,-6,2,2,-11,2,-13,2,2,2,2,2,-5,-3,2,2,2,2,2,2,2,2,2,2,2,2,2,-61,2,-74,-73,2,2,2,2,2,2,2,2,-54,-18,-19,-16,2,-56,-20,-17,-50,2,2,-59,2,-15,-55,2,-53,-58,-57,-49,2,-52,2,-51,]),'{':([0,1,4,5,13,14,21,22,27,33,42,45,66,91,93,101,102,117,118,119,121,122,124,125,126,130,132,134,135,136,137,138,140,142,143,144,145,146,147,148,],[5,-12,-4,5,-14,-6,5,-11,-13,5,-5,-3,-61,-74,-73,122,5,-54,-18,-19,-16,122,-56,-20,-17,-50,122,-59,122,-15,-55,5,-53,-58,-57,-49,122,-52,122,-51,]),'LT':([2,18,24,41,43,62,67,72,82,83,84,85,86,87,88,89,90,103,106,107,],[-26,-25,-27,-28,-37,-38,97,-39,-32,-21,-35,-33,-34,-24,-23,-22,-36,-31,-29,-30,]),'BREAK':([91,93,101,117,118,119,121,122,124,125,126,132,134,135,136,137,140,142,143,145,146,147,148,],[-74,-73,129,-54,-18,-19,-16,129,-56,-20,-17,129,-59,129,-15,-55,-53,-58,-57,129,-52,129,-51,]),'DIVASSIGN':([6,23,30,139,],[-71,49,-70,-72,]),'WHILE':([0,1,4,5,13,14,21,22,27,33,42,45,66,91,93,101,102,117,118,119,121,122,124,125,126,130,132,134,135,136,137,138,140,142,143,144,145,146,147,148,],[7,-12,-4,7,-14,-6,7,-11,-13,7,-5,-3,-61,-74,-73,7,7,-54,-18,-19,-16,7,-56,-20,-17,-50,7,-59,7,-15,-55,7,-53,-58,-57,-49,7,-52,7,-51,]),'IF':([0,1,4,5,13,14,21,22,27,33,42,45,66,91,93,101,102,117,118,119,121,122,124,125,126,130,132,134,135,136,137,138,140,142,143,144,145,146,147,148,],[8,-12,-4,8,-14,-6,8,-11,-13,8,-5,-3,-61,-74,-73,120,8,-54,-18,-19,-16,120,-56,-20,-17,-50,120,-59,120,-15,-55,8,-53,-58,-57,-49,120,-52,120,-51,]),'EYE':([0,1,4,5,11,13,14,19,21,22,26,27,29,33,34,35,38,42,45,46,47,48,49,50,54,55,56,57,58,59,60,61,66,81,91,93,95,96,97,98,99,100,101,102,117,118,119,121,122,124,125,126,130,132,133,134,135,136,137,138,140,142,143,144,145,146,147,148,],[9,-12,-4,9,9,-14,-6,9,9,-11,9,-13,9,9,9,9,9,-5,-3,9,9,9,9,9,9,9,9,9,9,9,9,9,-61,9,-74,-73,9,9,9,9,9,9,9,9,-54,-18,-19,-16,9,-56,-20,-17,-50,9,9,-59,9,-15,-55,9,-53,-58,-57,-49,9,-52,9,-51,]),'[':([0,1,4,5,10,11,13,14,19,21,22,26,27,29,30,33,34,35,38,42,45,46,47,48,49,50,54,55,56,57,58,59,60,61,66,73,81,91,93,95,96,97,98,99,100,101,102,117,118,119,121,122,124,125,126,130,132,133,134,135,136,137,138,140,142,143,144,145,146,147,148,],[10,-12,-4,10,38,10,-14,-6,10,10,-11,10,-13,10,64,10,10,10,10,-5,-3,10,10,10,10,10,10,10,10,10,10,10,10,10,-61,38,10,-74,-73,10,10,10,10,10,10,10,10,-54,-18,-19,-16,10,-56,-20,-17,-50,10,10,-59,10,-15,-55,10,-53,-58,-57,-49,10,-52,10,-51,]),')':([2,18,24,41,43,62,63,68,69,70,72,74,80,82,83,84,85,86,87,88,89,90,103,106,107,111,112,113,114,115,116,141,],[-26,-25,-27,-28,-37,-38,90,101,102,103,-39,106,107,-32,-21,-35,-33,-34,-24,-23,-22,-36,-31,-29,-30,-44,-40,-45,-42,-41,-43,145,]),'$end':([0,1,4,13,14,15,21,22,27,42,45,66,117,118,119,121,124,125,126,130,136,137,140,143,144,146,148,],[-2,-12,-4,-14,-6,0,-1,-11,-13,-5,-3,-61,-54,-18,-19,-16,-56,-20,-17,-50,-15,-55,-53,-57,-49,-52,-51,]),'ADDASSIGN':([6,23,30,139,],[-71,48,-70,-72,]),'DOTDIV':([2,18,24,28,30,40,41,43,52,62,63,67,72,75,76,77,78,79,82,83,84,85,86,87,88,89,90,103,106,107,108,111,112,113,114,115,116,],[-26,-25,-27,58,-28,58,-28,-37,58,-38,58,58,-39,58,58,58,58,58,58,58,-35,58,-34,-24,-23,58,-36,-31,-29,-30,58,58,58,58,58,58,58,]),':':([91,93,94,],[-74,-73,110,]),'=':([6,23,30,32,139,],[-71,50,-70,65,-72,]),'GT':([2,18,24,41,43,62,67,72,82,83,84,85,86,87,88,89,90,103,106,107,],[-26,-25,-27,-28,-37,-38,95,-39,-32,-21,-35,-33,-34,-24,-23,-22,-36,-31,-29,-30,]),'ELSE':([1,13,14,22,27,42,66,117,118,119,121,124,125,126,130,136,137,140,143,144,146,148,],[-12,-14,-6,-11,-13,-5,-61,-54,-18,-19,-16,-56,-20,-17,138,-15,-55,-53,-57,-49,147,-51,]),'RETURN':([0,1,4,5,13,14,21,22,27,33,42,45,66,91,93,101,102,117,118,119,121,122,124,125,126,130,132,134,135,136,137,138,140,142,143,144,145,146,147,148,],[11,-12,-4,11,-14,-6,11,-11,-13,11,-5,-3,-61,-74,-73,11,11,-54,-18,-19,-16,11,-56,-20,-17,-50,11,-59,11,-15,-55,11,-53,-58,-57,-49,11,-52,11,-51,]),'DOTADD':([2,18,24,28,30,40,41,43,52,62,63,67,72,75,76,77,78,79,82,83,84,85,86,87,88,89,90,103,106,107,108,111,112,113,114,115,116,],[-26,-25,-27,54,-28,54,-28,-37,54,-38,54,54,-39,54,54,54,54,54,-32,-21,-35,-33,-34,-24,-23,-22,-36,-31,-29,-30,54,54,54,54,54,54,54,]),'NEQ':([2,18,24,41,43,62,67,72,82,83,84,85,86,87,88,89,90,103,106,107,],[-26,-25,-27,-28,-37,-38,98,-39,-32,-21,-35,-33,-34,-24,-23,-22,-36,-31,-29,-30,]),'EQ':([2,18,24,41,43,62,67,72,82,83,84,85,86,87,88,89,90,103,106,107,],[-26,-25,-27,-28,-37,-38,100,-39,-32,-21,-35,-33,-34,-24,-23,-22,-36,-31,-29,-30,]),';':([2,12,16,17,18,24,28,30,31,40,41,43,52,53,62,72,75,76,77,78,79,82,83,84,85,86,87,88,89,90,103,106,107,108,123,127,128,129,],[-26,-9,42,-7,-25,-27,-8,-28,-10,-69,-28,-37,-68,-60,-38,-39,-64,-65,-63,-66,-62,-32,-21,-35,-33,-34,-24,-23,-22,-36,-31,-29,-30,-67,136,-76,137,-75,]),'+':([2,18,24,28,30,40,41,43,52,62,63,67,72,75,76,77,78,79,82,83,84,85,86,87,88,89,90,103,106,107,108,111,112,113,114,115,116,],[-26,-25,-27,55,-28,55,-28,-37,55,-38,55,55,-39,55,55,55,55,55,-32,-21,-35,-33,-34,-24,-23,-22,-36,-31,-29,-30,55,55,55,55,55,55,55,]),'GTE':([2,18,24,41,43,62,67,72,82,83,84,85,86,87,88,89,90,103,106,107,],[-26,-25,-27,-28,-37,-38,96,-39,-32,-21,-35,-33,-34,-24,-23,-22,-36,-31,-29,-30,]),'-':([0,1,2,4,5,11,13,14,18,19,21,22,24,26,27,28,29,30,33,34,35,38,40,41,42,43,45,46,47,48,49,50,52,54,55,56,57,58,59,60,61,62,63,66,67,72,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,93,95,96,97,98,99,100,101,102,103,106,107,108,111,112,113,114,115,116,117,118,119,121,122,124,125,126,130,132,133,134,135,136,137,138,140,142,143,144,145,146,147,148,],[19,-12,-26,-4,19,19,-14,-6,-25,19,19,-11,-27,19,-13,61,19,-28,19,19,19,19,61,-28,-5,-37,-3,19,19,19,19,19,61,19,19,19,19,19,19,19,19,-38,61,-61,61,-39,61,61,61,61,61,19,-32,-21,-35,-33,-34,-24,-23,-22,-36,-74,-73,19,19,19,19,19,19,19,19,-31,-29,-30,61,61,61,61,61,61,61,-54,-18,-19,-16,19,-56,-20,-17,-50,19,19,-59,19,-15,-55,19,-53,-58,-57,-49,19,-52,19,-51,]),'*':([2,18,24,28,30,40,41,43,52,62,63,67,72,75,76,77,78,79,82,83,84,85,86,87,88,89,90,103,106,107,108,111,112,113,114,115,116,],[-26,-25,-27,59,-28,59,-28,-37,59,-38,59,59,-39,59,59,59,59,59,59,59,-35,59,-34,-24,-23,59,-36,-31,-29,-30,59,59,59,59,59,59,59,]),'INTNUM':([0,1,4,5,11,13,14,19,21,22,26,27,29,33,34,35,36,38,42,44,45,46,47,48,49,50,51,54,55,56,57,58,59,60,61,64,65,66,81,91,93,95,96,97,98,99,100,101,102,109,110,117,118,119,121,122,124,125,126,130,132,133,134,135,136,137,138,140,142,143,144,145,146,147,148,],[18,-12,-4,18,18,-14,-6,18,18,-11,18,-13,18,18,18,18,70,18,-5,74,-3,18,18,18,18,18,80,18,18,18,18,18,18,18,18,91,91,-61,18,-74,-73,18,18,18,18,18,18,18,18,91,91,-54,-18,-19,-16,18,-56,-20,-17,-50,18,18,-59,18,-15,-55,18,-53,-58,-57,-49,18,-52,18,-51,]),"'":([2,18,24,28,30,40,41,43,52,62,63,67,72,75,76,77,78,79,82,83,84,85,86,87,88,89,90,103,106,107,108,111,112,113,114,115,116,],[-26,-25,-27,62,-28,62,-28,-37,62,-38,62,62,-39,62,62,62,62,62,-32,-21,-35,-33,-34,-24,-23,-22,-36,-31,-29,-30,62,62,62,62,62,62,62,]),',':([2,18,24,37,39,41,43,52,53,62,71,72,82,83,84,85,86,87,88,89,90,91,92,93,103,104,105,106,107,108,],[-26,-25,-27,-47,73,-28,-37,-68,81,-38,81,-39,-32,-21,-35,-33,-34,-24,-23,-22,-36,-74,109,-73,-31,-48,-46,-29,-30,-67,]),'FOR':([0,1,4,5,13,14,21,22,27,33,42,45,66,91,93,101,102,117,118,119,121,122,124,125,126,130,132,134,135,136,137,138,140,142,143,144,145,146,147,148,],[3,-12,-4,3,-14,-6,3,-11,-13,3,-5,-3,-61,-74,-73,3,3,-54,-18,-19,-16,3,-56,-20,-17,-50,3,-59,3,-15,-55,3,-53,-58,-57,-49,3,-52,3,-51,]),'ZEROS':([0,1,4,5,11,13,14,19,21,22,26,27,29,33,34,35,38,42,45,46,47,48,49,50,54,55,56,57,58,59,60,61,66,81,91,93,95,96,97,98,99,100,101,102,117,118,119,121,122,124,125,126,130,132,133,134,135,136,137,138,140,142,143,144,145,146,147,148,],[20,-12,-4,20,20,-14,-6,20,20,-11,20,-13,20,20,20,20,20,-5,-3,20,20,20,20,20,20,20,20,20,20,20,20,20,-61,20,-74,-73,20,20,20,20,20,20,20,20,-54,-18,-19,-16,20,-56,-20,-17,-50,20,20,-59,20,-15,-55,20,-53,-58,-57,-49,20,-52,20,-51,]),'/':([2,18,24,28,30,40,41,43,52,62,63,67,72,75,76,77,78,79,82,83,84,85,86,87,88,89,90,103,106,107,108,111,112,113,114,115,116,],[-26,-25,-27,60,-28,60,-28,-37,60,-38,60,60,-39,60,60,60,60,60,60,60,-35,60,-34,-24,-23,60,-36,-31,-29,-30,60,60,60,60,60,60,60,]),'STRING':([0,1,4,5,11,13,14,19,21,22,26,27,29,33,34,35,38,42,45,46,47,48,49,50,54,55,56,57,58,59,60,61,66,81,91,93,95,96,97,98,99,100,101,102,117,118,119,121,122,124,125,126,130,132,133,134,135,136,137,138,140,142,143,144,145,146,147,148,],[24,-12,-4,24,24,-14,-6,24,24,-11,24,-13,24,24,24,24,24,-5,-3,24,24,24,24,24,24,24,24,24,24,24,24,24,-61,24,-74,-73,24,24,24,24,24,24,24,24,-54,-18,-19,-16,24,-56,-20,-17,-50,24,24,-59,24,-15,-55,24,-53,-58,-57,-49,24,-52,24,-51,]),'ONES':([0,1,4,5,11,13,14,19,21,22,26,27,29,33,34,35,38,42,45,46,47,48,49,50,54,55,56,57,58,59,60,61,66,81,91,93,95,96,97,98,99,100,101,102,117,118,119,121,122,124,125,126,130,132,133,134,135,136,137,138,140,142,143,144,145,146,147,148,],[25,-12,-4,25,25,-14,-6,25,25,-11,25,-13,25,25,25,25,25,-5,-3,25,25,25,25,25,25,25,25,25,25,25,25,25,-61,25,-74,-73,25,25,25,25,25,25,25,25,-54,-18,-19,-16,25,-56,-20,-17,-50,25,25,-59,25,-15,-55,25,-53,-58,-57,-49,25,-52,25,-51,]),'MULASSIGN':([6,23,30,139,],[-71,47,-70,-72,]),'PRINT':([0,1,4,5,13,14,21,22,27,33,42,45,66,91,93,101,102,117,118,119,121,122,124,125,126,130,132,134,135,136,137,138,140,142,143,144,145,146,147,148,],[26,-12,-4,26,-14,-6,26,-11,-13,26,-5,-3,-61,-74,-73,26,26,-54,-18,-19,-16,26,-56,-20,-17,-50,26,-59,26,-15,-55,26,-53,-58,-57,-49,26,-52,26,-51,]),'}':([1,4,13,14,22,27,33,42,45,66,117,118,119,121,124,125,126,130,134,135,136,137,140,142,143,144,146,148,],[-12,-4,-14,-6,-11,-13,66,-5,-3,-61,-54,-18,-19,-16,-56,-20,-17,-50,-59,143,-15,-55,-53,-58,-57,-49,-52,-51,]),'CONTINUE':([91,93,101,117,118,119,121,122,124,125,126,132,134,135,136,137,140,142,143,145,146,147,148,],[-74,-73,127,-54,-18,-19,-16,127,-56,-20,-17,127,-59,127,-15,-55,-53,-58,-57,127,-52,127,-51,]),'(':([0,1,4,5,7,8,9,11,13,14,19,20,21,22,25,26,27,29,33,34,35,38,42,45,46,47,48,49,50,54,55,56,57,58,59,60,61,66,81,91,93,95,96,97,98,99,100,101,102,117,118,119,120,121,122,124,125,126,130,132,133,134,135,136,137,138,140,142,143,144,145,146,147,148,],[29,-12,-4,29,34,35,36,29,-14,-6,29,44,29,-11,51,29,-13,29,29,29,29,29,-5,-3,29,29,29,29,29,29,29,29,29,29,29,29,29,-61,29,-74,-73,29,29,29,29,29,29,29,29,-54,-18,-19,133,-16,29,-56,-20,-17,-50,29,29,-59,29,-15,-55,29,-53,-58,-57,-49,29,-52,29,-51,]),'DOTSUB':([2,18,24,28,30,40,41,43,52,62,63,67,72,75,76,77,78,79,82,83,84,85,86,87,88,89,90,103,106,107,108,111,112,113,114,115,116,],[-26,-25,-27,57,-28,57,-28,-37,57,-38,57,57,-39,57,57,57,57,57,-32,-21,-35,-33,-34,-24,-23,-22,-36,-31,-29,-30,57,57,57,57,57,57,57,]),'ID':([0,1,3,4,5,11,13,14,19,21,22,26,27,29,33,34,35,38,42,45,46,47,48,49,50,54,55,56,57,58,59,60,61,64,65,66,81,91,93,95,96,97,98,99,100,101,102,109,110,117,118,119,121,122,124,125,126,130,132,133,134,135,136,137,138,140,142,143,144,145,146,147,148,],[30,-12,32,-4,30,41,-14,-6,41,30,-11,41,-13,41,30,41,41,41,-5,-3,41,41,41,41,41,41,41,41,41,41,41,41,41,93,93,-61,41,-74,-73,41,41,41,41,41,41,30,30,93,93,-54,-18,-19,-16,30,-56,-20,-17,-50,30,41,-59,30,-15,-55,30,-53,-58,-57,-49,30,-52,30,-51,]),'LTE':([2,18,24,41,43,62,67,72,82,83,84,85,86,87,88,89,90,103,106,107,],[-26,-25,-27,-28,-37,-38,99,-39,-32,-21,-35,-33,-34,-24,-23,-22,-36,-31,-29,-30,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'id':([0,5,21,33,101,102,122,132,135,138,145,147,],[23,23,23,23,23,23,23,23,23,23,23,23,]),'instr_coloff':([0,5,21,33,102,138,],[14,14,14,14,14,14,]),'for':([0,5,21,33,101,102,122,132,135,138,145,147,],[22,22,22,22,126,22,126,126,126,22,126,126,]),'program':([0,],[15,]),'instr_colon':([0,5,21,33,101,102,122,132,135,138,145,147,],[16,16,16,16,123,16,123,123,123,16,123,123,]),'while':([0,5,21,33,101,102,122,132,135,138,145,147,],[1,1,1,1,118,1,118,118,118,1,118,118,]),'assign':([0,5,21,33,101,102,122,132,135,138,145,147,],[17,17,17,17,17,17,17,17,17,17,17,17,]),'instr':([0,5,21,33,102,138,],[4,4,45,45,130,144,]),'instr_inside_loop':([101,122,132,135,145,147,],[124,124,124,124,124,124,]),'block_loop':([101,122,132,135,145,147,],[119,119,119,119,119,119,]),'cell':([0,5,21,33,101,102,122,132,135,138,145,147,],[6,6,6,6,6,6,6,6,6,6,6,6,]),'if_inside_loop':([101,122,132,135,145,147,],[125,125,125,125,125,125,]),'instr_rec':([0,5,],[21,33,]),'rows':([10,],[39,]),'if':([0,5,21,33,102,138,],[13,13,13,13,13,13,]),'index':([64,65,109,110,],[92,94,131,132,]),'block':([0,5,21,33,102,138,],[27,27,27,27,27,27,]),'break_continue':([101,122,132,135,145,147,],[128,128,128,128,128,128,]),'instr_coloff_inside_loop':([101,122,132,135,145,147,],[121,121,121,121,121,121,]),'inside_loop':([101,122,132,135,145,147,],[117,134,140,142,146,148,]),'row':([10,73,],[37,105,]),'expr':([0,5,11,19,21,26,29,33,34,35,38,46,47,48,49,50,54,55,56,57,58,59,60,61,81,95,96,97,98,99,100,101,102,122,132,133,135,138,145,147,],[28,28,40,43,28,52,63,28,67,67,52,75,76,77,78,79,82,83,84,85,86,87,88,89,108,111,112,113,114,115,116,28,28,28,28,67,28,28,28,28,]),'cells':([26,38,],[53,71,]),'inside_loop_rec':([122,],[135,]),'expr_rel':([34,35,133,],[68,69,141,]),'return':([0,5,21,33,101,102,122,132,135,138,145,147,],[31,31,31,31,31,31,31,31,31,31,31,31,]),'print':([0,5,21,33,101,102,122,132,135,138,145,147,],[12,12,12,12,12,12,12,12,12,12,12,12,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> instr_rec','program',1,'p_program','Mparser.py',25),
  ('program -> <empty>','program',0,'p_program','Mparser.py',26),
  ('instr_rec -> instr_rec instr','instr_rec',2,'p_instr_rec','Mparser.py',30),
  ('instr_rec -> instr','instr_rec',1,'p_instr_rec','Mparser.py',31),
  ('instr -> instr_colon ;','instr',2,'p_instr','Mparser.py',38),
  ('instr -> instr_coloff','instr',1,'p_instr','Mparser.py',39),
  ('instr_colon -> assign','instr_colon',1,'p_instr_colon','Mparser.py',43),
  ('instr_colon -> expr','instr_colon',1,'p_instr_colon','Mparser.py',44),
  ('instr_colon -> print','instr_colon',1,'p_instr_colon','Mparser.py',45),
  ('instr_colon -> return','instr_colon',1,'p_instr_colon','Mparser.py',46),
  ('instr_coloff -> for','instr_coloff',1,'p_instr_coloff','Mparser.py',50),
  ('instr_coloff -> while','instr_coloff',1,'p_instr_coloff','Mparser.py',51),
  ('instr_coloff -> block','instr_coloff',1,'p_instr_coloff','Mparser.py',52),
  ('instr_coloff -> if','instr_coloff',1,'p_instr_coloff','Mparser.py',53),
  ('instr_inside_loop -> instr_colon ;','instr_inside_loop',2,'p_instr_inside_loop','Mparser.py',57),
  ('instr_inside_loop -> instr_coloff_inside_loop','instr_inside_loop',1,'p_instr_inside_loop','Mparser.py',58),
  ('instr_coloff_inside_loop -> for','instr_coloff_inside_loop',1,'p_instr_coloff_inside_loop','Mparser.py',62),
  ('instr_coloff_inside_loop -> while','instr_coloff_inside_loop',1,'p_instr_coloff_inside_loop','Mparser.py',63),
  ('instr_coloff_inside_loop -> block_loop','instr_coloff_inside_loop',1,'p_instr_coloff_inside_loop','Mparser.py',64),
  ('instr_coloff_inside_loop -> if_inside_loop','instr_coloff_inside_loop',1,'p_instr_coloff_inside_loop','Mparser.py',65),
  ('expr -> expr + expr','expr',3,'p_expr_1','Mparser.py',69),
  ('expr -> expr - expr','expr',3,'p_expr_1','Mparser.py',70),
  ('expr -> expr / expr','expr',3,'p_expr_1','Mparser.py',71),
  ('expr -> expr * expr','expr',3,'p_expr_1','Mparser.py',72),
  ('expr -> INTNUM','expr',1,'p_expr_2','Mparser.py',76),
  ('expr -> FLOATNUM','expr',1,'p_expr_2','Mparser.py',77),
  ('expr -> STRING','expr',1,'p_expr_2','Mparser.py',78),
  ('expr -> ID','expr',1,'p_expr_2','Mparser.py',79),
  ('expr -> ZEROS ( INTNUM )','expr',4,'p_expr_3','Mparser.py',83),
  ('expr -> ONES ( INTNUM )','expr',4,'p_expr_3','Mparser.py',84),
  ('expr -> EYE ( INTNUM )','expr',4,'p_expr_3','Mparser.py',85),
  ('expr -> expr DOTADD expr','expr',3,'p_expr_4','Mparser.py',89),
  ('expr -> expr DOTSUB expr','expr',3,'p_expr_4','Mparser.py',90),
  ('expr -> expr DOTDIV expr','expr',3,'p_expr_4','Mparser.py',91),
  ('expr -> expr DOTMUL expr','expr',3,'p_expr_4','Mparser.py',92),
  ('expr -> ( expr )','expr',3,'p_expr_5','Mparser.py',96),
  ('expr -> - expr','expr',2,'p_expr_6','Mparser.py',100),
  ("expr -> expr '",'expr',2,'p_expr_7','Mparser.py',104),
  ('expr -> [ rows ]','expr',3,'p_expr_8','Mparser.py',108),
  ('expr_rel -> expr GTE expr','expr_rel',3,'p_expr_rel','Mparser.py',112),
  ('expr_rel -> expr LTE expr','expr_rel',3,'p_expr_rel','Mparser.py',113),
  ('expr_rel -> expr NEQ expr','expr_rel',3,'p_expr_rel','Mparser.py',114),
  ('expr_rel -> expr EQ expr','expr_rel',3,'p_expr_rel','Mparser.py',115),
  ('expr_rel -> expr GT expr','expr_rel',3,'p_expr_rel','Mparser.py',116),
  ('expr_rel -> expr LT expr','expr_rel',3,'p_expr_rel','Mparser.py',117),
  ('rows -> rows , row','rows',3,'p_rows','Mparser.py',121),
  ('rows -> row','rows',1,'p_rows','Mparser.py',122),
  ('row -> [ cells ]','row',3,'p_row','Mparser.py',129),
  ('if -> IF ( expr_rel ) instr ELSE instr','if',7,'p_if','Mparser.py',133),
  ('if -> IF ( expr_rel ) instr','if',5,'p_if','Mparser.py',134),
  ('if_inside_loop -> IF ( expr_rel ) inside_loop ELSE inside_loop','if_inside_loop',7,'p_if_inside_loop','Mparser.py',141),
  ('if_inside_loop -> IF ( expr_rel ) inside_loop','if_inside_loop',5,'p_if_inside_loop','Mparser.py',142),
  ('for -> FOR ID = index : index inside_loop','for',7,'p_for','Mparser.py',149),
  ('while -> WHILE ( expr_rel ) inside_loop','while',5,'p_while','Mparser.py',153),
  ('inside_loop -> break_continue ;','inside_loop',2,'p_inside_loop','Mparser.py',157),
  ('inside_loop -> instr_inside_loop','inside_loop',1,'p_inside_loop','Mparser.py',158),
  ('block_loop -> { inside_loop_rec }','block_loop',3,'p_block_loop','Mparser.py',162),
  ('inside_loop_rec -> inside_loop_rec inside_loop','inside_loop_rec',2,'p_inside_loop_rec','Mparser.py',166),
  ('inside_loop_rec -> inside_loop','inside_loop_rec',1,'p_inside_loop_rec','Mparser.py',167),
  ('print -> PRINT cells','print',2,'p_print','Mparser.py',174),
  ('block -> { instr_rec }','block',3,'p_block','Mparser.py',178),
  ('assign -> id = expr','assign',3,'p_assign','Mparser.py',182),
  ('assign -> id ADDASSIGN expr','assign',3,'p_assign','Mparser.py',183),
  ('assign -> id SUBASSIGN expr','assign',3,'p_assign','Mparser.py',184),
  ('assign -> id MULASSIGN expr','assign',3,'p_assign','Mparser.py',185),
  ('assign -> id DIVASSIGN expr','assign',3,'p_assign','Mparser.py',186),
  ('cells -> cells , expr','cells',3,'p_cells','Mparser.py',190),
  ('cells -> expr','cells',1,'p_cells','Mparser.py',191),
  ('return -> RETURN expr','return',2,'p_return','Mparser.py',198),
  ('id -> ID','id',1,'p_id','Mparser.py',202),
  ('id -> cell','id',1,'p_id','Mparser.py',203),
  ('cell -> ID [ index , index ]','cell',6,'p_cell','Mparser.py',207),
  ('index -> ID','index',1,'p_index','Mparser.py',211),
  ('index -> INTNUM','index',1,'p_index','Mparser.py',212),
  ('break_continue -> BREAK','break_continue',1,'p_break_continue','Mparser.py',216),
  ('break_continue -> CONTINUE','break_continue',1,'p_break_continue','Mparser.py',217),
]
