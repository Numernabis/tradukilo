
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = 'A63FFDCB7C10280DF34331B40E325594'
    
_lr_action_items = {'WHILE':([0,5,7,10,16,19,20,29,30,53,69,70,103,104,105,107,109,120,122,123,124,125,126,127,129,130,133,135,136,137,138,139,142,143,144,145,146,147,148,149,],[1,1,-12,-11,-13,-6,-4,1,-14,-3,-5,1,-74,-75,-62,1,1,-18,-16,-17,-57,-55,-19,-20,1,-51,-56,-15,-60,1,1,1,-58,-59,-50,-54,1,-53,1,-52,]),'PRINT':([0,5,7,10,16,19,20,29,30,53,69,70,103,104,105,107,109,120,122,123,124,125,126,127,129,130,133,135,136,137,138,139,142,143,144,145,146,147,148,149,],[2,2,-12,-11,-13,-6,-4,2,-14,-3,-5,2,-74,-75,-62,2,2,-18,-16,-17,-57,-55,-19,-20,2,-51,-56,-15,-60,2,2,2,-58,-59,-50,-54,2,-53,2,-52,]),"'":([4,11,12,18,24,26,35,36,48,57,60,62,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,93,97,98,99,100,101,108,112,114,116,141,],[48,-25,-27,-26,-28,-29,48,-28,-39,48,-38,48,48,-29,-29,-21,-34,-44,-36,-33,-46,-23,-41,-24,-43,-35,-45,-42,-22,-40,-37,48,48,48,48,48,48,-31,-32,-30,-29,]),'DIVASSIGN':([21,23,24,140,],[-72,63,-71,-73,]),'IF':([0,5,7,10,16,19,20,29,30,53,69,70,103,104,105,107,109,120,122,123,124,125,126,127,129,130,133,135,136,137,138,139,142,143,144,145,146,147,148,149,],[3,3,-12,-11,-13,-6,-4,3,-14,-3,-5,3,-74,-75,-62,118,3,-18,-16,-17,-57,-55,-19,-20,118,-51,-56,-15,-60,118,3,118,-58,-59,-50,-54,118,-53,118,-52,]),'LT':([4,11,12,18,24,26,35,36,48,57,60,62,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,93,97,98,99,100,101,108,112,114,116,141,],[43,-25,-27,-26,-28,-29,43,-28,-39,43,-38,43,43,-29,-29,-21,-34,None,-36,-33,None,-23,None,-24,None,-35,None,None,-22,-40,-37,43,43,43,43,43,43,-31,-32,-30,-29,]),'[':([0,2,5,6,7,8,10,14,16,17,19,20,24,29,30,33,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,56,63,64,65,66,67,69,70,74,90,103,104,105,107,109,120,122,123,124,125,126,127,129,130,133,134,135,136,137,138,139,142,143,144,145,146,147,148,149,],[6,6,6,56,-12,6,-11,6,-13,6,-6,-4,68,6,-14,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,-3,6,6,6,6,6,6,-5,6,6,56,-74,-75,-62,6,6,-18,-16,-17,-57,-55,-19,-20,6,-51,-56,6,-15,-60,6,6,6,-58,-59,-50,-54,6,-53,6,-52,]),'NEQ':([4,11,12,18,24,26,35,36,48,57,60,62,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,93,97,98,99,100,101,108,112,114,116,141,],[47,-25,-27,-26,-28,-29,47,-28,-39,47,-38,47,47,-29,-29,-21,-34,None,-36,-33,None,-23,None,-24,None,-35,None,None,-22,-40,-37,47,47,47,47,47,47,-31,-32,-30,-29,]),'EQ':([4,11,12,18,24,26,35,36,48,57,60,62,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,93,97,98,99,100,101,108,112,114,116,141,],[40,-25,-27,-26,-28,-29,40,-28,-39,40,-38,40,40,-29,-29,-21,-34,None,-36,-33,None,-23,None,-24,None,-35,None,None,-22,-40,-37,40,40,40,40,40,40,-31,-32,-30,-29,]),'DOTDIV':([4,11,12,18,24,26,35,36,48,57,60,62,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,93,97,98,99,100,101,108,112,114,116,141,],[49,-25,-27,-26,-28,-29,49,-28,-39,49,-38,49,49,-29,-29,49,49,49,-36,49,49,-23,49,-24,49,-35,49,49,49,-40,-37,49,49,49,49,49,49,-31,-32,-30,-29,]),'(':([0,1,2,3,5,7,8,9,10,14,15,16,17,19,20,29,30,32,33,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,56,63,64,65,66,67,69,70,74,103,104,105,107,109,118,120,122,123,124,125,126,127,129,130,133,134,135,136,137,138,139,142,143,144,145,146,147,148,149,],[8,33,8,37,8,-12,8,58,-11,8,61,-13,8,-6,-4,8,-14,71,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,-3,8,8,8,8,8,8,-5,8,8,-74,-75,-62,8,8,134,-18,-16,-17,-57,-55,-19,-20,8,-51,-56,8,-15,-60,8,8,8,-58,-59,-50,-54,8,-53,8,-52,]),'+':([4,11,12,18,24,26,35,36,48,57,60,62,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,93,97,98,99,100,101,108,112,114,116,141,],[38,-25,-27,-26,-28,-29,38,-28,-39,38,-38,38,38,-29,-29,-21,-34,38,-36,-33,38,-23,38,-24,38,-35,38,38,-22,-40,-37,38,38,38,38,38,38,-31,-32,-30,-29,]),'ONES':([0,2,5,7,8,10,14,16,17,19,20,29,30,33,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,56,63,64,65,66,67,69,70,74,103,104,105,107,109,120,122,123,124,125,126,127,129,130,133,134,135,136,137,138,139,142,143,144,145,146,147,148,149,],[9,9,9,-12,9,-11,9,-13,9,-6,-4,9,-14,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,-3,9,9,9,9,9,9,-5,9,9,-74,-75,-62,9,9,-18,-16,-17,-57,-55,-19,-20,9,-51,-56,9,-15,-60,9,9,9,-58,-59,-50,-54,9,-53,9,-52,]),'BREAK':([103,104,107,120,122,123,124,125,126,127,129,133,135,136,137,139,142,143,145,146,147,148,149,],[-74,-75,121,-18,-16,-17,-57,-55,-19,-20,121,-56,-15,-60,121,121,-58,-59,-54,121,-53,121,-52,]),'SUBASSIGN':([21,23,24,140,],[-72,66,-71,-73,]),'INTNUM':([0,2,5,7,8,10,14,16,17,19,20,29,30,33,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,56,58,61,63,64,65,66,67,68,69,70,71,74,95,103,104,105,107,109,115,120,122,123,124,125,126,127,129,130,131,133,134,135,136,137,138,139,142,143,144,145,146,147,148,149,],[11,11,11,-12,11,-11,11,-13,11,-6,-4,11,-14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-3,11,94,96,11,11,11,11,11,104,-5,11,106,11,104,-74,-75,-62,11,11,104,-18,-16,-17,-57,-55,-19,-20,11,-51,104,-56,11,-15,-60,11,11,11,-58,-59,-50,-54,11,-53,11,-52,]),'GT':([4,11,12,18,24,26,35,36,48,57,60,62,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,93,97,98,99,100,101,108,112,114,116,141,],[50,-25,-27,-26,-28,-29,50,-28,-39,50,-38,50,50,-29,-29,-21,-34,None,-36,-33,None,-23,None,-24,None,-35,None,None,-22,-40,-37,50,50,50,50,50,50,-31,-32,-30,-29,]),'DOTADD':([4,11,12,18,24,26,35,36,48,57,60,62,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,93,97,98,99,100,101,108,112,114,116,141,],[42,-25,-27,-26,-28,-29,42,-28,-39,42,-38,42,42,-29,-29,-21,-34,42,-36,-33,42,-23,42,-24,42,-35,42,42,-22,-40,-37,42,42,42,42,42,42,-31,-32,-30,-29,]),'STRING':([0,2,5,7,8,10,14,16,17,19,20,29,30,33,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,56,63,64,65,66,67,69,70,74,103,104,105,107,109,120,122,123,124,125,126,127,129,130,133,134,135,136,137,138,139,142,143,144,145,146,147,148,149,],[12,12,12,-12,12,-11,12,-13,12,-6,-4,12,-14,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,-3,12,12,12,12,12,12,-5,12,12,-74,-75,-62,12,12,-18,-16,-17,-57,-55,-19,-20,12,-51,-56,12,-15,-60,12,12,12,-58,-59,-50,-54,12,-53,12,-52,]),'FOR':([0,5,7,10,16,19,20,29,30,53,69,70,103,104,105,107,109,120,122,123,124,125,126,127,129,130,133,135,136,137,138,139,142,143,144,145,146,147,148,149,],[13,13,-12,-11,-13,-6,-4,13,-14,-3,-5,13,-74,-75,-62,13,13,-18,-16,-17,-57,-55,-19,-20,13,-51,-56,-15,-60,13,13,13,-58,-59,-50,-54,13,-53,13,-52,]),'}':([7,10,16,19,20,30,53,69,70,105,120,122,123,124,125,126,127,130,133,135,136,137,142,143,144,145,147,149,],[-12,-11,-13,-6,-4,-14,-3,-5,105,-62,-18,-16,-17,-57,-55,-19,-20,-51,-56,-15,-60,142,-58,-59,-50,-54,-53,-52,]),'EYE':([0,2,5,7,8,10,14,16,17,19,20,29,30,33,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,56,63,64,65,66,67,69,70,74,103,104,105,107,109,120,122,123,124,125,126,127,129,130,133,134,135,136,137,138,139,142,143,144,145,146,147,148,149,],[15,15,15,-12,15,-11,15,-13,15,-6,-4,15,-14,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-3,15,15,15,15,15,15,-5,15,15,-74,-75,-62,15,15,-18,-16,-17,-57,-55,-19,-20,15,-51,-56,15,-15,-60,15,15,15,-58,-59,-50,-54,15,-53,15,-52,]),']':([11,12,18,26,35,36,48,54,55,60,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,103,104,108,110,111,112,114,116,132,],[-25,-27,-26,-29,-69,-28,-39,91,-48,-38,-21,-34,-44,-36,-33,-46,-23,-41,-24,-43,-35,-45,-42,-22,-40,111,-37,-74,-75,-68,-47,-49,-31,-32,-30,140,]),'LTE':([4,11,12,18,24,26,35,36,48,57,60,62,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,93,97,98,99,100,101,108,112,114,116,141,],[51,-25,-27,-26,-28,-29,51,-28,-39,51,-38,51,51,-29,-29,-21,-34,None,-36,-33,None,-23,None,-24,None,-35,None,None,-22,-40,-37,51,51,51,51,51,51,-31,-32,-30,-29,]),'FLOATNUM':([0,2,5,7,8,10,14,16,17,19,20,29,30,33,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,56,63,64,65,66,67,69,70,74,103,104,105,107,109,120,122,123,124,125,126,127,129,130,133,134,135,136,137,138,139,142,143,144,145,146,147,148,149,],[18,18,18,-12,18,-11,18,-13,18,-6,-4,18,-14,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-3,18,18,18,18,18,18,-5,18,18,-74,-75,-62,18,18,-18,-16,-17,-57,-55,-19,-20,18,-51,-56,18,-15,-60,18,18,18,-58,-59,-50,-54,18,-53,18,-52,]),'$end':([0,5,7,10,16,19,20,27,30,53,69,105,120,122,123,124,125,126,127,130,133,135,142,144,145,147,149,],[-2,-1,-12,-11,-13,-6,-4,0,-14,-3,-5,-62,-18,-16,-17,-57,-55,-19,-20,-51,-56,-15,-58,-50,-54,-53,-52,]),'=':([21,23,24,59,140,],[-72,65,-71,95,-73,]),'CONTINUE':([103,104,107,120,122,123,124,125,126,127,129,133,135,136,137,139,142,143,145,146,147,148,149,],[-74,-75,119,-18,-16,-17,-57,-55,-19,-20,119,-56,-15,-60,119,119,-58,-59,-54,119,-53,119,-52,]),')':([11,12,18,26,36,48,57,60,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,93,94,96,106,112,114,116,141,],[-25,-27,-26,-29,-28,-39,93,-38,107,109,-21,-34,-44,-36,-33,-46,-23,-41,-24,-43,-35,-45,-42,-22,-40,-37,112,114,116,-31,-32,-30,146,]),'MULASSIGN':([21,23,24,140,],[-72,67,-71,-73,]),'DOTSUB':([4,11,12,18,24,26,35,36,48,57,60,62,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,93,97,98,99,100,101,108,112,114,116,141,],[39,-25,-27,-26,-28,-29,39,-28,-39,39,-38,39,39,-29,-29,-21,-34,39,-36,-33,39,-23,39,-24,39,-35,39,39,-22,-40,-37,39,39,39,39,39,39,-31,-32,-30,-29,]),'/':([4,11,12,18,24,26,35,36,48,57,60,62,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,93,97,98,99,100,101,108,112,114,116,141,],[44,-25,-27,-26,-28,-29,44,-28,-39,44,-38,44,44,-29,-29,44,44,44,-36,44,44,-23,44,-24,44,-35,44,44,44,-40,-37,44,44,44,44,44,44,-31,-32,-30,-29,]),'GTE':([4,11,12,18,24,26,35,36,48,57,60,62,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,93,97,98,99,100,101,108,112,114,116,141,],[45,-25,-27,-26,-28,-29,45,-28,-39,45,-38,45,45,-29,-29,-21,-34,None,-36,-33,None,-23,None,-24,None,-35,None,None,-22,-40,-37,45,45,45,45,45,45,-31,-32,-30,-29,]),'*':([4,11,12,18,24,26,35,36,48,57,60,62,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,93,97,98,99,100,101,108,112,114,116,141,],[46,-25,-27,-26,-28,-29,46,-28,-39,46,-38,46,46,-29,-29,46,46,46,-36,46,46,-23,46,-24,46,-35,46,46,46,-40,-37,46,46,46,46,46,46,-31,-32,-30,-29,]),'ID':([0,2,5,7,8,10,13,14,16,17,19,20,29,30,33,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,56,63,64,65,66,67,68,69,70,74,95,103,104,105,107,109,115,120,122,123,124,125,126,127,129,130,131,133,134,135,136,137,138,139,142,143,144,145,146,147,148,149,],[24,36,24,-12,36,-11,59,36,-13,36,-6,-4,24,-14,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-3,36,36,36,36,36,36,103,-5,24,36,103,-74,-75,-62,24,24,103,-18,-16,-17,-57,-55,-19,-20,24,-51,103,-56,36,-15,-60,24,24,24,-58,-59,-50,-54,24,-53,24,-52,]),'-':([0,2,4,5,7,8,10,11,12,14,16,17,18,19,20,24,26,29,30,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,56,57,60,62,63,64,65,66,67,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,93,97,98,99,100,101,103,104,105,107,108,109,112,114,116,120,122,123,124,125,126,127,129,130,133,134,135,136,137,138,139,141,142,143,144,145,146,147,148,149,],[14,14,52,14,-12,14,-11,-25,-27,14,-13,14,-26,-6,-4,-28,-29,14,-14,14,52,-28,14,14,14,14,14,14,14,14,14,14,14,-39,14,14,14,14,-3,14,52,-38,52,14,14,14,14,14,-5,14,52,-29,14,-29,-21,-34,52,-36,-33,52,-23,52,-24,52,-35,52,52,-22,-40,-37,52,52,52,52,52,-74,-75,-62,14,52,14,-31,-32,-30,-18,-16,-17,-57,-55,-19,-20,14,-51,-56,14,-15,-60,14,14,14,-29,-58,-59,-50,-54,14,-53,14,-52,]),'ADDASSIGN':([21,23,24,140,],[-72,64,-71,-73,]),'ELSE':([7,10,16,19,30,69,105,120,122,123,124,125,126,127,130,133,135,142,144,145,147,149,],[-12,-11,-13,-6,-14,-5,-62,-18,-16,-17,-57,-55,-19,-20,138,-56,-15,-58,-50,-54,148,-52,]),'{':([0,5,7,10,16,19,20,29,30,53,69,70,103,104,105,107,109,120,122,123,124,125,126,127,129,130,133,135,136,137,138,139,142,143,144,145,146,147,148,149,],[29,29,-12,-11,-13,-6,-4,29,-14,-3,-5,29,-74,-75,-62,129,29,-18,-16,-17,-57,-55,-19,-20,129,-51,-56,-15,-60,129,29,129,-58,-59,-50,-54,129,-53,129,-52,]),';':([4,11,12,18,22,24,25,26,28,31,34,35,36,48,60,62,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,93,97,98,99,100,101,108,112,114,116,117,119,121,128,],[-8,-25,-27,-26,-10,-28,-7,-29,69,-9,-61,-69,-28,-39,-38,-70,-21,-34,-44,-36,-33,-46,-23,-41,-24,-43,-35,-45,-42,-22,-40,-37,-67,-64,-63,-65,-66,-68,-31,-32,-30,133,-77,-76,135,]),'DOTMUL':([4,11,12,18,24,26,35,36,48,57,60,62,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,93,97,98,99,100,101,108,112,114,116,141,],[41,-25,-27,-26,-28,-29,41,-28,-39,41,-38,41,41,-29,-29,41,41,41,-36,41,41,-23,41,-24,41,-35,41,41,41,-40,-37,41,41,41,41,41,41,-31,-32,-30,-29,]),':':([103,104,113,],[-74,-75,131,]),',':([11,12,18,26,34,35,36,48,54,55,60,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,102,103,104,108,110,111,112,114,116,],[-25,-27,-26,-29,74,-69,-28,-39,90,-48,-38,-21,-34,-44,-36,-33,-46,-23,-41,-24,-43,-35,-45,-42,-22,-40,74,-37,115,-74,-75,-68,-47,-49,-31,-32,-30,]),'RETURN':([0,5,7,10,16,19,20,29,30,53,69,70,103,104,105,107,109,120,122,123,124,125,126,127,129,130,133,135,136,137,138,139,142,143,144,145,146,147,148,149,],[17,17,-12,-11,-13,-6,-4,17,-14,-3,-5,17,-74,-75,-62,17,17,-18,-16,-17,-57,-55,-19,-20,17,-51,-56,-15,-60,17,17,17,-58,-59,-50,-54,17,-53,17,-52,]),'ZEROS':([0,2,5,7,8,10,14,16,17,19,20,29,30,33,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,56,63,64,65,66,67,69,70,74,103,104,105,107,109,120,122,123,124,125,126,127,129,130,133,134,135,136,137,138,139,142,143,144,145,146,147,148,149,],[32,32,32,-12,32,-11,32,-13,32,-6,-4,32,-14,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-3,32,32,32,32,32,32,-5,32,32,-74,-75,-62,32,32,-18,-16,-17,-57,-55,-19,-20,32,-51,-56,32,-15,-60,32,32,32,-58,-59,-50,-54,32,-53,32,-52,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'rows':([6,],[54,]),'index':([68,95,115,131,],[102,113,132,139,]),'instr_coloff_inside_loop':([107,129,137,139,146,148,],[122,122,122,122,122,122,]),'instr_coloff':([0,5,29,70,109,138,],[19,19,19,19,19,19,]),'block_loop':([107,129,137,139,146,148,],[126,126,126,126,126,126,]),'instr':([0,5,29,70,109,138,],[20,53,20,53,130,144,]),'break_continue':([107,129,137,139,146,148,],[117,117,117,117,117,117,]),'expr':([0,2,5,8,14,17,29,33,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,56,63,64,65,66,67,70,74,107,109,129,134,137,138,139,146,148,],[4,35,4,57,60,62,4,72,72,76,77,78,79,80,81,82,83,84,85,86,87,88,89,35,97,98,99,100,101,4,108,4,4,4,72,4,4,4,4,4,]),'cell':([0,5,29,70,107,109,129,137,138,139,146,148,],[21,21,21,21,21,21,21,21,21,21,21,21,]),'instr_rec':([0,29,],[5,70,]),'cells':([2,56,],[34,92,]),'return':([0,5,29,70,107,109,129,137,138,139,146,148,],[22,22,22,22,22,22,22,22,22,22,22,22,]),'instr_inside_loop':([107,129,137,139,146,148,],[124,124,124,124,124,124,]),'if_inside_loop':([107,129,137,139,146,148,],[127,127,127,127,127,127,]),'assign':([0,5,29,70,107,109,129,137,138,139,146,148,],[25,25,25,25,25,25,25,25,25,25,25,25,]),'expr_rel':([0,2,5,8,14,17,29,33,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,56,63,64,65,66,67,70,74,107,109,129,134,137,138,139,146,148,],[26,26,26,26,26,26,26,73,75,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,141,26,26,26,26,26,]),'block':([0,5,29,70,109,138,],[16,16,16,16,16,16,]),'program':([0,],[27,]),'instr_colon':([0,5,29,70,107,109,129,137,138,139,146,148,],[28,28,28,28,128,28,128,128,28,128,128,128,]),'while':([0,5,29,70,107,109,129,137,138,139,146,148,],[7,7,7,7,120,7,120,120,7,120,120,120,]),'id':([0,5,29,70,107,109,129,137,138,139,146,148,],[23,23,23,23,23,23,23,23,23,23,23,23,]),'inside_loop':([107,129,137,139,146,148,],[125,136,143,145,147,149,]),'for':([0,5,29,70,107,109,129,137,138,139,146,148,],[10,10,10,10,123,10,123,123,10,123,123,123,]),'if':([0,5,29,70,109,138,],[30,30,30,30,30,30,]),'print':([0,5,29,70,107,109,129,137,138,139,146,148,],[31,31,31,31,31,31,31,31,31,31,31,31,]),'inside_loop_rec':([129,],[137,]),'row':([6,90,],[55,110,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> instr_rec','program',1,'p_program','Mparser.py',25),
  ('program -> <empty>','program',0,'p_program','Mparser.py',26),
  ('instr_rec -> instr_rec instr','instr_rec',2,'p_instr_rec','Mparser.py',30),
  ('instr_rec -> instr','instr_rec',1,'p_instr_rec','Mparser.py',31),
  ('instr -> instr_colon ;','instr',2,'p_instr','Mparser.py',38),
  ('instr -> instr_coloff','instr',1,'p_instr','Mparser.py',39),
  ('instr_colon -> assign','instr_colon',1,'p_instr_colon','Mparser.py',43),
  ('instr_colon -> expr','instr_colon',1,'p_instr_colon','Mparser.py',44),
  ('instr_colon -> print','instr_colon',1,'p_instr_colon','Mparser.py',45),
  ('instr_colon -> return','instr_colon',1,'p_instr_colon','Mparser.py',46),
  ('instr_coloff -> for','instr_coloff',1,'p_instr_coloff','Mparser.py',50),
  ('instr_coloff -> while','instr_coloff',1,'p_instr_coloff','Mparser.py',51),
  ('instr_coloff -> block','instr_coloff',1,'p_instr_coloff','Mparser.py',52),
  ('instr_coloff -> if','instr_coloff',1,'p_instr_coloff','Mparser.py',53),
  ('instr_inside_loop -> instr_colon ;','instr_inside_loop',2,'p_instr_inside_loop','Mparser.py',57),
  ('instr_inside_loop -> instr_coloff_inside_loop','instr_inside_loop',1,'p_instr_inside_loop','Mparser.py',58),
  ('instr_coloff_inside_loop -> for','instr_coloff_inside_loop',1,'p_instr_coloff_inside_loop','Mparser.py',62),
  ('instr_coloff_inside_loop -> while','instr_coloff_inside_loop',1,'p_instr_coloff_inside_loop','Mparser.py',63),
  ('instr_coloff_inside_loop -> block_loop','instr_coloff_inside_loop',1,'p_instr_coloff_inside_loop','Mparser.py',64),
  ('instr_coloff_inside_loop -> if_inside_loop','instr_coloff_inside_loop',1,'p_instr_coloff_inside_loop','Mparser.py',65),
  ('expr -> expr + expr','expr',3,'p_expr_1','Mparser.py',69),
  ('expr -> expr - expr','expr',3,'p_expr_1','Mparser.py',70),
  ('expr -> expr / expr','expr',3,'p_expr_1','Mparser.py',71),
  ('expr -> expr * expr','expr',3,'p_expr_1','Mparser.py',72),
  ('expr -> INTNUM','expr',1,'p_expr_2','Mparser.py',76),
  ('expr -> FLOATNUM','expr',1,'p_expr_2','Mparser.py',77),
  ('expr -> STRING','expr',1,'p_expr_2','Mparser.py',78),
  ('expr -> ID','expr',1,'p_expr_2','Mparser.py',79),
  ('expr -> expr_rel','expr',1,'p_expr_2','Mparser.py',80),
  ('expr -> ZEROS ( INTNUM )','expr',4,'p_expr_3','Mparser.py',84),
  ('expr -> ONES ( INTNUM )','expr',4,'p_expr_3','Mparser.py',85),
  ('expr -> EYE ( INTNUM )','expr',4,'p_expr_3','Mparser.py',86),
  ('expr -> expr DOTADD expr','expr',3,'p_expr_4','Mparser.py',90),
  ('expr -> expr DOTSUB expr','expr',3,'p_expr_4','Mparser.py',91),
  ('expr -> expr DOTDIV expr','expr',3,'p_expr_4','Mparser.py',92),
  ('expr -> expr DOTMUL expr','expr',3,'p_expr_4','Mparser.py',93),
  ('expr -> ( expr )','expr',3,'p_expr_5','Mparser.py',97),
  ('expr -> - expr','expr',2,'p_expr_6','Mparser.py',101),
  ("expr -> expr '",'expr',2,'p_expr_7','Mparser.py',105),
  ('expr -> [ rows ]','expr',3,'p_expr_8','Mparser.py',109),
  ('expr_rel -> expr GTE expr','expr_rel',3,'p_expr_rel','Mparser.py',113),
  ('expr_rel -> expr LTE expr','expr_rel',3,'p_expr_rel','Mparser.py',114),
  ('expr_rel -> expr NEQ expr','expr_rel',3,'p_expr_rel','Mparser.py',115),
  ('expr_rel -> expr EQ expr','expr_rel',3,'p_expr_rel','Mparser.py',116),
  ('expr_rel -> expr GT expr','expr_rel',3,'p_expr_rel','Mparser.py',117),
  ('expr_rel -> expr LT expr','expr_rel',3,'p_expr_rel','Mparser.py',118),
  ('rows -> rows , row','rows',3,'p_rows','Mparser.py',122),
  ('rows -> row','rows',1,'p_rows','Mparser.py',123),
  ('row -> [ cells ]','row',3,'p_row','Mparser.py',130),
  ('if -> IF ( expr_rel ) instr ELSE instr','if',7,'p_if','Mparser.py',134),
  ('if -> IF ( expr_rel ) instr','if',5,'p_if','Mparser.py',135),
  ('if_inside_loop -> IF ( expr_rel ) inside_loop ELSE inside_loop','if_inside_loop',7,'p_if_inside_loop','Mparser.py',142),
  ('if_inside_loop -> IF ( expr_rel ) inside_loop','if_inside_loop',5,'p_if_inside_loop','Mparser.py',143),
  ('for -> FOR ID = index : index inside_loop','for',7,'p_for','Mparser.py',150),
  ('while -> WHILE ( expr_rel ) inside_loop','while',5,'p_while','Mparser.py',154),
  ('inside_loop -> break_continue ;','inside_loop',2,'p_inside_loop','Mparser.py',158),
  ('inside_loop -> instr_inside_loop','inside_loop',1,'p_inside_loop','Mparser.py',159),
  ('block_loop -> { inside_loop_rec }','block_loop',3,'p_block_loop','Mparser.py',163),
  ('inside_loop_rec -> inside_loop_rec inside_loop','inside_loop_rec',2,'p_inside_loop_rec','Mparser.py',167),
  ('inside_loop_rec -> inside_loop','inside_loop_rec',1,'p_inside_loop_rec','Mparser.py',168),
  ('print -> PRINT cells','print',2,'p_print','Mparser.py',175),
  ('block -> { instr_rec }','block',3,'p_block','Mparser.py',179),
  ('assign -> id = expr','assign',3,'p_assign','Mparser.py',183),
  ('assign -> id ADDASSIGN expr','assign',3,'p_assign','Mparser.py',184),
  ('assign -> id SUBASSIGN expr','assign',3,'p_assign','Mparser.py',185),
  ('assign -> id MULASSIGN expr','assign',3,'p_assign','Mparser.py',186),
  ('assign -> id DIVASSIGN expr','assign',3,'p_assign','Mparser.py',187),
  ('cells -> cells , expr','cells',3,'p_cells','Mparser.py',191),
  ('cells -> expr','cells',1,'p_cells','Mparser.py',192),
  ('return -> RETURN expr','return',2,'p_return','Mparser.py',199),
  ('id -> ID','id',1,'p_id','Mparser.py',203),
  ('id -> cell','id',1,'p_id','Mparser.py',204),
  ('cell -> ID [ index , index ]','cell',6,'p_cell','Mparser.py',208),
  ('index -> ID','index',1,'p_index','Mparser.py',212),
  ('index -> INTNUM','index',1,'p_index','Mparser.py',213),
  ('break_continue -> BREAK','break_continue',1,'p_break_continue','Mparser.py',217),
  ('break_continue -> CONTINUE','break_continue',1,'p_break_continue','Mparser.py',218),
]
